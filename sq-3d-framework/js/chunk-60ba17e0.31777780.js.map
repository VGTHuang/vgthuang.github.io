{"version":3,"sources":["webpack:///./src/views/ThreeFrontpageTest2.vue?588c","webpack:///./node_modules/core-js/internals/engine-ff-version.js","webpack:///./src/views/ThreeFrontpageTest2.vue?02c3","webpack:///./src/scripts/FrontPage4.0/ProxyConfig.ts","webpack:///./src/scripts/FrontPage4.0/Card.ts","webpack:///./src/scripts/FrontPage4.0/CardContainer.ts","webpack:///./src/scripts/FrontPage4.0/TexturePool.ts","webpack:///./src/scripts/FrontPage4.0/Proxy.ts","webpack:///./src/scripts/FrontPage4.0/Scene.ts","webpack:///./src/scripts/FrontPage4.0/ProxyStyles/TestStyles.ts","webpack:///./src/views/ThreeFrontpageTest2.vue","webpack:///./src/views/ThreeFrontpageTest2.vue?3e9f","webpack:///./src/views/ThreeFrontpageTest2.vue?64c0","webpack:///./node_modules/core-js/internals/array-method-has-species-support.js","webpack:///./node_modules/core-js/modules/es.array.sort.js","webpack:///./node_modules/core-js/internals/engine-webkit-version.js","webpack:///./node_modules/core-js/internals/array-sort.js","webpack:///./node_modules/core-js/modules/es.object.keys.js","webpack:///./node_modules/core-js/modules/es.array.map.js","webpack:///./node_modules/core-js/internals/engine-is-ie-or-edge.js"],"names":["userAgent","firefox","match","module","exports","render","_vm","this","_h","$createElement","_c","_self","staticStyle","on","swapLeft","_v","swapRight","ref","attrs","staticClass","class","loadingStat","isLoaded","noLoadingStat","style","width","loaded","total","_s","Math","round","staticRenderFns","position","rotation","scale","frontColor","frontImgUrl","backColor","backImgUrl","parent","texturePool","targetAttraction","momentum","damp","p_v","p_s","p_t","r_v","r_s","r_t","s_v","s_s","s_t","isStatic","staticThreshold","matFront","color","map","getTexture","side","matBack","matFrontImgUrl","matBackImgUrl","colorWithMap","cardGeometry","cardMeshFront","cardMeshBack","cardFrontBackGroup","add","proxyConfig","quat","setFromEuler","set","x","y","z","w","changeMaterial","setTargetProxy","copy","setFromQuaternion","multiplyScalar","sub","length","r_offset","cardGroup","markerCube","PI","cards","maxTextureCount","pool","setInterval","destructSomeTextures","imgUrl","pooledTex","undefined","texture","load","lastUsedTime","Date","now","numOfTexturesInPool","Object","keys","destructableTextures","url","destructableFlg","cardIndex","push","sort","a","b","i","dispose","visibleCardCount","isLoop","onStatic","onFocusIndex","isCurrentFocused","currentFocusIndex","cardContainer","containerProxyConfig","cardProxyConfigs","invisibleCardProxy","refreshTargets","newFocusIndex","focusOnCard","focusIndex","proxyGroups","maxCardCount","currentProxyGroupIndex","proxyGroup","forEach","card","newProxyGroupIndex","console","log","toStatic","cardParent","update","focusForward","focusBackward","focusMesh","_container","onLoad","onProgress","onError","onCardFocus","onCardRouteJump","isScenePaused","requestAnimationFrame","animate","updateCamera","stats","cardProxyManager","camera","aspect","window","innerWidth","innerHeight","updateProjectionMatrix","renderer","setSize","cssRenderer","e","deltaY","mousePosX","clientX","mousePosY","clientY","pointer","raycaster","setFromCamera","intersects","intersectObjects","intersectObjs","object","container","alpha","antialias","setClearColor","setPixelRatio","devicePixelRatio","domElement","top","left","appendChild","zIndex","cameraBasicLookAt","cameraBasicPosition","lookAt","scene","cssScene","loadingManager","floorGeometry","tx","floor","castShadow","receiveShadow","cameraPositionController","cameraWithMouseRotateFactor","resumeScene","dampPos","currentVec3","self","removeEventListener","onWindowResize","onMouseWheel","onMouseMove","onClick","addEventListener","registerProxyGroup","initCards","swapProxyGroup","testStyle1","oldFocusIndex","testStyle2","CAROUSEL_ANGLE","testStyle3","radius","cardHeight","cardWidth","angle","cos","sin","testStyle4","ygap","extend","data","fpm","mounted","$refs","HTMLElement","setTimeout","_","error","index","registerNewProxyGroup","methods","onGlassClick","alert","component","fails","wellKnownSymbol","V8_VERSION","SPECIES","METHOD_NAME","array","constructor","foo","Boolean","$","uncurryThis","aCallable","toObject","lengthOfArrayLike","toString","internalSort","arrayMethodIsStrict","FF","IE_OR_EDGE","V8","WEBKIT","test","un$Sort","FAILS_ON_UNDEFINED","FAILS_ON_NULL","STRICT_METHOD","STABLE_SORT","code","chr","value","result","String","fromCharCode","k","v","charAt","FORCED","getSortCompare","comparefn","target","proto","forced","itemsLength","items","arrayLength","webkit","arraySlice","mergeSort","middle","insertionSort","merge","element","j","right","llength","rlength","lindex","rindex","nativeKeys","FAILS_ON_PRIMITIVES","stat","it","$map","arrayMethodHasSpeciesSupport","HAS_SPECIES_SUPPORT","callbackfn","arguments","UA"],"mappings":"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","file":"js/chunk-60ba17e0.31777780.js","sourcesContent":["export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ThreeFrontpageTest2.vue?vue&type=style&index=0&id=170b5cc0&scoped=true&lang=css&\"","var userAgent = require('../internals/engine-user-agent');\n\nvar firefox = userAgent.match(/firefox\\/(\\d+)/i);\n\nmodule.exports = !!firefox && +firefox[1];\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('div',{staticStyle:{\"position\":\"absolute\",\"top\":\"100px\",\"z-index\":\"10\"}},[_c('button',{on:{\"click\":_vm.swapLeft}},[_vm._v(\"left\")]),_c('button',{on:{\"click\":_vm.swapRight}},[_vm._v(\"right\")])]),_c('div',{ref:\"canvas-container\",attrs:{\"id\":\"canvas-container\"}},[_c('div',{staticClass:\"loading-container\",class:{\n            'loading-container--hidden': _vm.loadingStat.isLoaded,\n            'loading-container--none': _vm.loadingStat.noLoadingStat\n        }},[_c('div',{staticClass:\"load-stat\"},[_c('div',{staticClass:\"load-pgbar\",style:({\n                    width: 100 * _vm.loadingStat.loaded / _vm.loadingStat.total + '%'\n                })}),_c('div',{staticClass:\"load-text\"},[_vm._v(_vm._s(Math.round(100 * _vm.loadingStat.loaded / _vm.loadingStat.total))+\" %\")])])])])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import * as THREE from 'three'\r\n\r\nexport class ContainerProxyConfig {\r\n    position: THREE.Vector3\r\n    rotation: THREE.Euler\r\n\r\n    constructor () {\r\n        this.position = new THREE.Vector3(0, 0, 0)\r\n        this.rotation = new THREE.Euler(0, 0, 0)\r\n    }\r\n}\r\n\r\nexport class CardProxyConfig extends ContainerProxyConfig {\r\n    scale: THREE.Vector2\r\n    frontColor: THREE.Color\r\n    frontImgUrl: string\r\n    backColor: THREE.Color\r\n    backImgUrl: string\r\n\r\n    constructor () {\r\n        super()\r\n        this.scale = new THREE.Vector2(0, 0)\r\n        this.frontColor = new THREE.Color(0, 0, 0)\r\n        this.frontImgUrl = ''\r\n        this.backColor = new THREE.Color(0, 0, 0)\r\n        this.backImgUrl = ''\r\n    }\r\n}","import * as THREE from 'three'\r\nimport { CardProxyConfig } from './ProxyConfig'\r\nimport TexturePool from './TexturePool'\r\n\r\n\r\nexport default class Card {\r\n\r\n    parent: THREE.Object3D\r\n\r\n    // position: v - velocity, s - state, t - target\r\n    p_v: THREE.Vector3\r\n    p_s: THREE.Vector3\r\n    p_t: THREE.Vector3\r\n\r\n    // rotation (represented with quaternions)\r\n    r_v: THREE.Vector4\r\n    r_s: THREE.Vector4\r\n    r_t: THREE.Vector4\r\n\r\n    // scale\r\n    s_v: THREE.Vector2\r\n    s_s: THREE.Vector2\r\n    s_t: THREE.Vector2\r\n\r\n    targetAttraction: number\r\n    momentum: number\r\n    damp: number\r\n\r\n    // if true, the card is very close to its target proxy\r\n    isStatic: boolean\r\n    staticThreshold: number\r\n\r\n    // card object\r\n    cardGeometry: THREE.PlaneBufferGeometry\r\n    cardFrontBackGroup: THREE.Group\r\n    cardMeshFront: THREE.Mesh\r\n    cardMeshBack: THREE.Mesh\r\n\r\n    // materials\r\n    texturePool: TexturePool\r\n    matFront: THREE.MeshBasicMaterial\r\n    matBack: THREE.MeshBasicMaterial\r\n    matFrontImgUrl: string\r\n    matBackImgUrl: string\r\n    colorWithMap: THREE.Color\r\n\r\n    constructor(parent: THREE.Object3D, texturePool: TexturePool, targetAttraction: number = 0.04, momentum: number = 1.2, damp: number = 0.4) {\r\n        this.parent = parent\r\n        this.p_v = new THREE.Vector3()\r\n        this.p_s = new THREE.Vector3()\r\n        this.p_t = new THREE.Vector3()\r\n\r\n        this.r_v = new THREE.Vector4()\r\n        this.r_s = new THREE.Vector4()\r\n        this.r_t = new THREE.Vector4()\r\n\r\n        this.s_v = new THREE.Vector2()\r\n        this.s_s = new THREE.Vector2()\r\n        this.s_t = new THREE.Vector2()\r\n\r\n        this.targetAttraction = targetAttraction\r\n        this.momentum = momentum\r\n        this.damp = damp\r\n\r\n        this.isStatic = true\r\n        this.staticThreshold = 1e-3\r\n\r\n        // material\r\n        this.texturePool = texturePool\r\n        this.matFront = new THREE.MeshBasicMaterial({\r\n            color: new THREE.Color(1, 0, 0),\r\n            map:  texturePool.getTexture(),\r\n            side: THREE.FrontSide\r\n        })\r\n        this.matBack = new THREE.MeshBasicMaterial({\r\n            color: new THREE.Color(0, 1, 0),\r\n            map: texturePool.getTexture(),\r\n            side: THREE.BackSide\r\n        })\r\n        this.matFrontImgUrl = ''\r\n        this.matBackImgUrl = ''\r\n        this.colorWithMap = new THREE.Color( 0xffffff )\r\n\r\n        this.cardGeometry = new THREE.PlaneGeometry(1, 1)\r\n        // this.cardMesh = new THREE.Mesh(this.cardGeometry, [\r\n        //     this.matFront, this.matBack\r\n        // ])\r\n\r\n        this.cardMeshFront = new THREE.Mesh(this.cardGeometry, this.matFront)\r\n        this.cardMeshBack = new THREE.Mesh(this.cardGeometry, this.matBack)\r\n\r\n        this.cardFrontBackGroup = new THREE.Group()\r\n        this.cardFrontBackGroup.add(this.cardMeshFront)\r\n        this.cardFrontBackGroup.add(this.cardMeshBack)\r\n        this.parent.add(this.cardFrontBackGroup)\r\n    }\r\n\r\n    setTargetProxy(proxyConfig: CardProxyConfig): void {\r\n        this.p_t = proxyConfig.position\r\n        // proxyConfig.rotation.set(\r\n        //     proxyConfig.rotation.x == 0 ? 5e-2: proxyConfig.rotation.x,\r\n        //     proxyConfig.rotation.y == 0 ? 5e-2: proxyConfig.rotation.y,\r\n        //     proxyConfig.rotation.z == 0 ? 5e-2: proxyConfig.rotation.z,\r\n        // )\r\n        let quat = new THREE.Quaternion().setFromEuler(proxyConfig.rotation)\r\n        // if (quat.x == 0) {\r\n        //     quat.x = 1e-3\r\n        // }\r\n        // if (quat.y == 0) {\r\n        //     quat.y = 1e-3\r\n        // }\r\n        // if (quat.z == 0) {\r\n        //     quat.z = 1e-3\r\n        // }\r\n        // if (quat.w == 0) {\r\n        //     quat.w = 1e-3\r\n        // }\r\n        this.r_t.set(quat.x, quat.y, quat.z, quat.w)\r\n        this.s_t = proxyConfig.scale\r\n        this.isStatic = false\r\n        this.changeMaterial(proxyConfig)\r\n    }\r\n\r\n    initSet(proxyConfig: CardProxyConfig): void {\r\n        this.setTargetProxy(proxyConfig)\r\n        \r\n        this.p_s.copy(this.p_t)\r\n        this.r_s.copy(this.r_t)\r\n        this.s_s.copy(this.s_t)\r\n\r\n        this.cardFrontBackGroup.position.copy(this.p_s)\r\n        this.cardFrontBackGroup.rotation.setFromQuaternion(new THREE.Quaternion(this.r_s.x, this.r_s.y, this.r_s.z, this.r_s.w))\r\n        this.cardFrontBackGroup.scale.set(this.s_s.x, this.s_s.y, 1)\r\n    }\r\n\r\n    changeMaterial(proxyConfig: CardProxyConfig) {\r\n        this.matFront.color = proxyConfig.frontImgUrl == '' ? proxyConfig.frontColor : this.colorWithMap\r\n        this.matBack.color = proxyConfig.backImgUrl == '' ? proxyConfig.backColor : this.colorWithMap\r\n        if (proxyConfig.frontImgUrl !== this.matFrontImgUrl) {\r\n            if (proxyConfig.frontImgUrl !== '') {\r\n                this.matFront.map = this.texturePool.getTexture(proxyConfig.frontImgUrl)\r\n            } else {\r\n                this.matFront.map = this.texturePool.getTexture()\r\n            }\r\n        }\r\n        if (proxyConfig.backImgUrl !== this.matBackImgUrl) {\r\n            if (proxyConfig.backImgUrl !== '') {\r\n                this.matBack.map = this.texturePool.getTexture(proxyConfig.backImgUrl)\r\n            } else {\r\n                this.matBack.map = this.texturePool.getTexture()\r\n            }\r\n        }\r\n        this.matFrontImgUrl = proxyConfig.frontImgUrl\r\n        this.matBackImgUrl = proxyConfig.backImgUrl\r\n    }\r\n\r\n    update(): void {\r\n        if (!this.isStatic) {\r\n            // position\r\n            this.p_v.multiplyScalar(this.damp)\r\n            this.p_v.add((new THREE.Vector3()).copy(this.p_t).sub(this.p_s).multiplyScalar(this.targetAttraction))\r\n            this.p_s.add(this.p_v)\r\n            \r\n            // rotation\r\n            this.r_v.multiplyScalar(this.damp)\r\n            this.r_v.add((new THREE.Vector4()).copy(this.r_t).sub(this.r_s).multiplyScalar(this.targetAttraction))\r\n            this.r_s.add(this.r_v)\r\n\r\n            // scale\r\n            this.s_v.multiplyScalar(this.damp)\r\n            this.s_v.add((new THREE.Vector2()).copy(this.s_t).sub(this.s_s).multiplyScalar(this.targetAttraction))\r\n            this.s_s.add(this.s_v)\r\n\r\n            // assign values to mesh\r\n            this.cardFrontBackGroup.position.copy(this.p_s)\r\n            this.cardFrontBackGroup.rotation.setFromQuaternion(new THREE.Quaternion(this.r_s.x, this.r_s.y, this.r_s.z, this.r_s.w))\r\n            this.cardFrontBackGroup.scale.set(this.s_s.x, this.s_s.y, 1)\r\n\r\n            // compute static\r\n            if (this.p_v.length() < this.staticThreshold\r\n                && this.r_v.length() < this.staticThreshold\r\n                && this.s_v.length() < this.staticThreshold) {\r\n                this.isStatic = true\r\n            }\r\n        }\r\n    }\r\n}","import * as THREE from 'three'\r\nimport { ContainerProxyConfig } from './ProxyConfig'\r\n\r\nexport default class CardContainer {\r\n\r\n    // position: v - velocity, s - state, t - target\r\n    p_v: THREE.Vector3\r\n    p_s: THREE.Vector3\r\n    p_t: THREE.Vector3\r\n\r\n    // rotation (represented with quaternions)\r\n    r_v: THREE.Vector3\r\n    r_s: THREE.Vector3\r\n    r_t: THREE.Vector3\r\n\r\n    r_offset: number\r\n\r\n    targetAttraction: number\r\n    momentum: number\r\n    damp: number\r\n\r\n    // if true, the card is very close to its target proxy\r\n    isStatic: boolean\r\n    staticThreshold: number\r\n\r\n    cardGroup: THREE.Group\r\n\r\n\r\n    constructor(targetAttraction: number = 0.04, momentum: number = 1.2, damp: number = 0.4) {\r\n        this.p_v = new THREE.Vector3()\r\n        this.p_s = new THREE.Vector3()\r\n        this.p_t = new THREE.Vector3()\r\n\r\n        this.r_v = new THREE.Vector3()\r\n        this.r_s = new THREE.Vector3()\r\n        this.r_t = new THREE.Vector3()\r\n\r\n        this.targetAttraction = targetAttraction\r\n        this.momentum = momentum\r\n        this.damp = damp\r\n\r\n        this.isStatic = true\r\n        this.staticThreshold = 1e-3\r\n\r\n        this.r_offset = 0\r\n\r\n        this.cardGroup = new THREE.Group()\r\n        var markerCube = new THREE.Mesh(new THREE.BoxGeometry(10,10,10), new THREE.MeshNormalMaterial())\r\n        this.cardGroup.add(markerCube)\r\n    }\r\n\r\n    setTargetProxy(proxyConfig: ContainerProxyConfig): void {\r\n        this.p_t = proxyConfig.position\r\n        // let quat = new THREE.Quaternion().setFromEuler(proxyConfig.rotation)\r\n        // this.r_t.set(quat.x, quat.y, quat.z, quat.w)\r\n        this.r_t.set(proxyConfig.rotation.x, proxyConfig.rotation.y + this.r_offset*Math.PI * 2, proxyConfig.rotation.z)\r\n        this.isStatic = false\r\n    }\r\n\r\n    initSet(proxyConfig: ContainerProxyConfig): void {\r\n        this.setTargetProxy(proxyConfig)\r\n        \r\n        this.p_s.copy(this.p_t)\r\n        this.r_s.copy(this.r_t)\r\n\r\n        this.cardGroup.position.copy(this.p_s)\r\n        this.cardGroup.rotation.set(this.r_s.x, this.r_s.y, this.r_s.z)\r\n        // this.cardGroup.rotation.setFromQuaternion(new THREE.Quaternion(this.r_s.x, this.r_s.y, this.r_s.z, this.r_s.w))\r\n    }\r\n\r\n\r\n    update(): void {\r\n        if (!this.isStatic) {\r\n            // position\r\n            this.p_v.multiplyScalar(this.damp)\r\n            this.p_v.add((new THREE.Vector3()).copy(this.p_t).sub(this.p_s).multiplyScalar(this.targetAttraction))\r\n            this.p_s.add(this.p_v)\r\n            \r\n            // rotation\r\n            this.r_v.multiplyScalar(this.damp)\r\n            this.r_v.add((new THREE.Vector3()).copy(this.r_t).sub(this.r_s).multiplyScalar(this.targetAttraction))\r\n            this.r_s.add(this.r_v)\r\n\r\n            // compute static\r\n            if (this.p_v.length() < this.staticThreshold\r\n                && this.r_v.length() < this.staticThreshold) {\r\n                this.isStatic = true\r\n            }\r\n\r\n            // assign values to mesh\r\n            this.cardGroup.position.copy(this.p_s)\r\n            this.cardGroup.rotation.set(this.r_s.x, this.r_s.y, this.r_s.z)\r\n        }\r\n    }\r\n}","/**\r\n * \r\n * 管理所有材质\r\n * \r\n */\r\n\r\nimport * as THREE from 'three'\r\nimport Card from './Card'\r\n\r\ntype TextureInfo = {\r\n    texture: THREE.Texture,\r\n    imgUrl: string,\r\n    lastUsedTime: number\r\n}\r\n\r\nexport default class TexturePool {\r\n\r\n    pool: { [imgUrl: string]: TextureInfo }\r\n    cards: Array<Card>\r\n    maxTextureCount: number\r\n\r\n    constructor(cards: Array<Card>, maxTextureCount: number = 100) {\r\n        this.pool = {}\r\n        this.cards = cards\r\n        this.maxTextureCount = maxTextureCount\r\n\r\n        // 每隔固定时间，注销一些材质\r\n        setInterval(() => {\r\n            this.destructSomeTextures()\r\n        }, 10000)\r\n    }\r\n\r\n    getTexture(imgUrl: string | null = null): THREE.Texture {\r\n        if (!imgUrl) {\r\n            imgUrl = ''\r\n        }\r\n        let pooledTex = this.pool[imgUrl]\r\n        if (pooledTex == undefined) {\r\n            pooledTex = {\r\n                texture: imgUrl == '' ? \r\n                new THREE.TextureLoader().load('empty_texture.png') : new THREE.TextureLoader().load(imgUrl),\r\n                imgUrl: imgUrl,\r\n                lastUsedTime: Date.now() // 创建该材质的时间是现在\r\n            }\r\n            this.pool[imgUrl] = pooledTex\r\n        } else {\r\n            pooledTex.lastUsedTime = Date.now() // 最近一次访问该材质的时间是现在\r\n        }\r\n        return pooledTex.texture\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * \r\n     * 隔一段时间就自动注销一些材质，防止材质过多\r\n     * 注销规则：1. 所有正在使用的材质不能销毁；2. 按LRU规则\r\n     * \r\n     */\r\n    destructSomeTextures() {\r\n        let numOfTexturesInPool = Object.keys(this.pool).length\r\n        if (numOfTexturesInPool > this.maxTextureCount) {\r\n            let destructableTextures: Array<TextureInfo> = []\r\n            for (let url in this.pool) {\r\n                // 判断是否有 card 在使用该材质\r\n                let destructableFlg = true\r\n                for (let cardIndex = 0; cardIndex < this.cards.length; cardIndex++) {\r\n                    if (this.cards[cardIndex].matFront.map == this.pool[url].texture || this.cards[cardIndex].matBack.map == this.pool[url].texture) {\r\n                        destructableFlg = false\r\n                        break\r\n                    }\r\n                }\r\n                if (destructableFlg) {\r\n                    // 未被使用\r\n                    destructableTextures.push(this.pool[url])\r\n                }\r\n            }\r\n            if (destructableTextures.length > 0) {\r\n                // 按最近使用时间排序\r\n                destructableTextures.sort((a, b) =>  a.lastUsedTime - b.lastUsedTime)\r\n                for (let i = 0; i < destructableTextures.length && i < numOfTexturesInPool - this.maxTextureCount; i++) {\r\n                    // 注销材质\r\n                    destructableTextures[i].texture.dispose()\r\n                    // 在 pool 中删除材质索引\r\n                    delete this.pool[destructableTextures[i].imgUrl]\r\n                }\r\n            }\r\n        }\r\n    }\r\n}","import * as THREE from 'three'\r\nimport { ContainerProxyConfig, CardProxyConfig } from './ProxyConfig'\r\nimport Card from './Card'\r\nimport CardContainer from './CardContainer'\r\nimport TexturePool from './TexturePool'\r\n\r\nclass ProxyGroup {\r\n\r\n    isCurrentFocused: boolean // 当前是否处于有卡片被选中的状态\r\n    currentFocusIndex: number // 当前被选中的卡片 index （只有 isCurrentFocused == true 时有意义）\r\n    visibleCardCount: number  // 场景中可见的最大卡片数量\r\n    isLoop: boolean   // 如果为 true，滚动切换 index 时 index 循环更新（如 Carousel 中的无限滚动）；否则滚动到第一个或最后一个卡片时，不继续向前或向后\r\n\r\n    cardContainer: CardContainer | undefined\r\n    containerProxyConfig: ContainerProxyConfig\r\n\r\n    cardProxyConfigs: Array<CardProxyConfig>\r\n    onStatic: (containerProxyConfig: ContainerProxyConfig, cardProxyConfigs: Array<CardProxyConfig>) => any  // ProxyGroup 的静态状态设定（未选中任何卡片时的状态）\r\n    onFocusIndex: (containerProxyConfig: ContainerProxyConfig, cardProxyConfigs: Array<CardProxyConfig>,\r\n        isCurrentFocused: boolean, oldFocusIndex: number, newFocusIndex: number) => any           // 选中某一卡片时的状态设定（未选中任何卡片时的状态）\r\n    \r\n    cards: Array<Card>\r\n    invisibleCardProxy: CardProxyConfig\r\n\r\n    constructor (visibleCardCount: number, isLoop: boolean = false,\r\n        onStatic: (containerProxyConfig: ContainerProxyConfig, cardProxyConfigs: Array<CardProxyConfig>) => any = () => undefined,\r\n        onFocusIndex: (containerProxyConfig: ContainerProxyConfig, cardProxyConfigs: Array<CardProxyConfig>,\r\n            isCurrentFocused: boolean, oldFocusIndex: number, newFocusIndex: number) => any = () => undefined,\r\n        ) {\r\n        this.isCurrentFocused = false\r\n        this.currentFocusIndex = 0\r\n        this.visibleCardCount = visibleCardCount\r\n\r\n        this.cardContainer = undefined\r\n        this.containerProxyConfig = new ContainerProxyConfig()\r\n\r\n        this.cardProxyConfigs = []\r\n        for (let i = 0; i < visibleCardCount; i++) {\r\n            this.cardProxyConfigs.push(new CardProxyConfig())\r\n        }\r\n\r\n        this.isLoop = isLoop\r\n        this.onStatic = onStatic\r\n        this.onFocusIndex = onFocusIndex\r\n        this.cards = []\r\n        this.invisibleCardProxy = new CardProxyConfig()\r\n    }\r\n\r\n    /**\r\n     * 场景切换到 static 状态\r\n     */\r\n    toStatic() {\r\n        this.isCurrentFocused = false\r\n        this.currentFocusIndex = 0\r\n        this.onStatic(this.containerProxyConfig, this.cardProxyConfigs)\r\n        this.refreshTargets()\r\n    }\r\n\r\n    /**\r\n     * focus 到下一张卡片；如果没有 focus 的卡片 (状态为 static)，则 focus 第一张卡片\r\n     */\r\n     focusForward() {\r\n        let newFocusIndex = 0\r\n        if (this.isCurrentFocused) {\r\n            newFocusIndex = this.currentFocusIndex + 1\r\n            if (newFocusIndex >= this.visibleCardCount) {\r\n                if (this.isLoop) {\r\n                    newFocusIndex = 0\r\n                } else {\r\n                    return\r\n                }\r\n            }\r\n        }\r\n        this.focusOnCard(newFocusIndex)\r\n    }\r\n\r\n    /**\r\n     * focus 到上一张卡片；如果没有 focus 的卡片 (状态为 static)，则 focus 最后一张卡片\r\n     */\r\n     focusBackward() {\r\n        let newFocusIndex = this.visibleCardCount - 1\r\n        if (this.isCurrentFocused) {\r\n            newFocusIndex = this.currentFocusIndex - 1\r\n            if (newFocusIndex < 0) {\r\n                if (this.isLoop) {\r\n                    newFocusIndex = this.visibleCardCount - 1\r\n                } else {\r\n                    return\r\n                }\r\n            }\r\n        }\r\n        this.focusOnCard(newFocusIndex)\r\n    }\r\n\r\n    /**\r\n     * focus 到指定的卡片\r\n     */\r\n    focusOnCard(focusIndex: number) {\r\n        if (focusIndex < 0 || focusIndex >= this.visibleCardCount) {\r\n            return\r\n        }\r\n        this.onFocusIndex(this.containerProxyConfig, this.cardProxyConfigs, this.isCurrentFocused, this.currentFocusIndex, focusIndex)\r\n        this.isCurrentFocused = true\r\n        this.currentFocusIndex = focusIndex\r\n        this.refreshTargets()\r\n    }\r\n\r\n    refreshTargets() {\r\n        let cardIndex = 0\r\n        this.cardContainer?.setTargetProxy(this.containerProxyConfig)\r\n        for (; cardIndex < this.visibleCardCount; cardIndex++) {\r\n            this.cards[cardIndex].setTargetProxy(this.cardProxyConfigs[cardIndex])\r\n        }\r\n        for (; cardIndex < this.cards.length; cardIndex++) {\r\n            this.cards[cardIndex].setTargetProxy(this.invisibleCardProxy)\r\n        }\r\n    }\r\n\r\n}\r\n\r\nclass ProxyManager {\r\n\r\n    proxyGroups: Array<ProxyGroup>\r\n    maxCardCount: number\r\n    currentProxyGroupIndex: number\r\n\r\n    containerProxyConfig: ContainerProxyConfig\r\n    cardContainer: CardContainer\r\n    \r\n    cards: Array<Card>\r\n    texturePool: TexturePool | undefined\r\n\r\n    constructor () {\r\n        this.proxyGroups = []\r\n        this.maxCardCount = 0\r\n        this.currentProxyGroupIndex = 0\r\n\r\n        this.containerProxyConfig = new ContainerProxyConfig()\r\n        this.cardContainer = new CardContainer()\r\n\r\n        this.cards = []\r\n        this.texturePool = undefined\r\n    }\r\n\r\n    registerProxyGroup (proxyGroup: ProxyGroup) {\r\n        this.proxyGroups.push(proxyGroup)\r\n        proxyGroup.cardContainer = this.cardContainer\r\n        proxyGroup.containerProxyConfig = this.containerProxyConfig\r\n        this.cardContainer.r_s.x %= Math.PI * 2\r\n        this.cardContainer.r_s.y %= Math.PI * 2\r\n        this.cardContainer.r_s.z %= Math.PI * 2\r\n        this.cardContainer.cardGroup.rotation.set(this.cardContainer.r_s.x, this.cardContainer.r_s.y, this.cardContainer.r_s.z)\r\n        this.cards.forEach(card => {\r\n            card.r_s.x %= Math.PI * 2\r\n            card.r_s.y %= Math.PI * 2\r\n            card.r_s.z %= Math.PI * 2\r\n        });\r\n        if (proxyGroup.visibleCardCount > this.maxCardCount) {\r\n            this.maxCardCount = proxyGroup.visibleCardCount\r\n        }\r\n    }\r\n\r\n    swapProxyGroup (newProxyGroupIndex: number) {\r\n        if (newProxyGroupIndex < 0 || newProxyGroupIndex >= this.proxyGroups.length) {\r\n            // out of bounds\r\n            console.log('out of bounds!!')\r\n            return\r\n        }\r\n        this.cardContainer.r_offset = newProxyGroupIndex\r\n        this.currentProxyGroupIndex = newProxyGroupIndex\r\n        this.proxyGroups[this.currentProxyGroupIndex].toStatic()\r\n    }\r\n\r\n    /**\r\n     * 完成所有 registerProxyGroup 后，生成 cards\r\n     * @param cardParent \r\n     */\r\n    initCards (cardParent: THREE.Object3D) {\r\n        // 卡片正反面各一个材质，因此存在场景中的最大材质数为 2 * maxCardCount\r\n        this.texturePool = new TexturePool(this.cards, this.maxCardCount * 2)\r\n        for (let i = 0; i < this.maxCardCount; i++) {\r\n            const card = new Card(this.cardContainer.cardGroup, this.texturePool)\r\n            // card.initSet(this.invisibleCardProxy)\r\n            this.cards.push(card)\r\n        }\r\n        this.proxyGroups.forEach(proxyGroup => {\r\n            proxyGroup.cards = this.cards\r\n        })\r\n        cardParent.add(this.cardContainer.cardGroup)\r\n        this.proxyGroups[this.currentProxyGroupIndex].refreshTargets()\r\n        this.toStatic()\r\n    }\r\n\r\n    update() {\r\n        this.cardContainer.update()\r\n        this.cards.forEach(card => {\r\n            card.update()\r\n        })\r\n    }\r\n\r\n    toStatic() {\r\n        if (this.proxyGroups[this.currentProxyGroupIndex].isCurrentFocused) {\r\n            this.proxyGroups[this.currentProxyGroupIndex].toStatic()\r\n        }\r\n    }\r\n    focusForward() {\r\n        this.proxyGroups[this.currentProxyGroupIndex].focusForward()\r\n    }\r\n    focusBackward() {\r\n        this.proxyGroups[this.currentProxyGroupIndex].focusBackward()\r\n    }\r\n    focusOnCard(focusMesh: THREE.Object3D) {\r\n        let cardIndex = 0\r\n        for (; cardIndex < this.cards.length; cardIndex++) {\r\n            if (this.cards[cardIndex].cardMeshFront == focusMesh || this.cards[cardIndex].cardMeshBack == focusMesh) {\r\n                this.proxyGroups[this.currentProxyGroupIndex].focusOnCard(cardIndex)\r\n                break\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport { ProxyGroup, ProxyManager }","import * as THREE from 'three'\r\nimport { Stats } from 'three-stats'\r\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls'\r\nimport { CustomCSS3DRenderer } from '../FrontPage3.0/CustomCSS3DRenderer'\r\nimport { DampingVector3Controller } from '../Three/Utils'\r\nimport { ContainerProxyConfig, CardProxyConfig } from './ProxyConfig'\r\nimport { ProxyGroup, ProxyManager } from './Proxy'\r\n\r\nclass FrontPageManager {\r\n    container: HTMLElement\r\n    renderer: THREE.WebGLRenderer\r\n    scene: THREE.Scene\r\n    stats: Stats\r\n\r\n    // cursor position\r\n    mousePosX: number\r\n    mousePosY: number\r\n    pointer: THREE.Vector2\r\n\r\n    // camera\r\n    camera: THREE.PerspectiveCamera\r\n    cameraBasicLookAt: THREE.Vector3\r\n    cameraBasicPosition: THREE.Vector3\r\n    // controls: OrbitControls\r\n    // cameraLootAtController: DampingVector3Controller\r\n    // cameraTargetPosition: THREE.Vector3\r\n    // cameraWithMouseRotateFactor: number\r\n    // cameraWithMouseMoveFactor: number\r\n\r\n    // camera animations\r\n    cameraPositionController: DampingVector3Controller\r\n    cameraWithMouseRotateFactor: number\r\n\r\n    // intersections\r\n    raycaster: THREE.Raycaster\r\n    intersectObjs: Array<THREE.Mesh>\r\n\r\n    // css\r\n    cssScene: THREE.Scene\r\n    cssRenderer: CustomCSS3DRenderer | undefined\r\n\r\n    // loading manager\r\n    loadingManager: THREE.LoadingManager\r\n\r\n    // scene pausing\r\n    isScenePaused: boolean\r\n\r\n    // cards\r\n    cardContainer: THREE.Object3D\r\n    cardProxyManager: ProxyManager\r\n\r\n    constructor(_container: HTMLElement,\r\n        onLoad?: () => void,\r\n        onProgress?: (url: string, loaded: number, total: number) => void,\r\n        onError?: (url: string) => void,\r\n        onCardFocus?: (index: number) => any,\r\n        onCardRouteJump?: (url: string) => any\r\n    ) {\r\n        // *********** basic settings ***********\r\n        this.container = _container\r\n        this.camera = new THREE.PerspectiveCamera( 45, window.innerWidth / window.innerHeight, 1, 5000 )\r\n        this.renderer = new THREE.WebGLRenderer( {alpha: true, antialias: true} )\r\n        this.renderer.setClearColor( 0xffffff )\r\n        this.renderer.setPixelRatio( window.devicePixelRatio )\r\n        this.renderer.setSize(window.innerWidth, window.innerHeight)\r\n        this.renderer.domElement.style.position = 'absolute'\r\n        this.renderer.domElement.style.top = '0px'\r\n        this.renderer.domElement.style.left = '0px'\r\n        this.container.appendChild( this.renderer.domElement )\r\n        // this.controls = new OrbitControls(this.camera, this.container)\r\n        // this.renderer.shadowMap.enabled = true\r\n        // this.renderer.shadowMap.type = THREE.PCFSoftShadowMap\r\n        // TODO: (debug stats)\r\n        this.stats = new Stats()\r\n        this.stats.domElement.style.zIndex = '100'\r\n        this.container.appendChild( this.stats.domElement )\r\n        // this.controls = new OrbitControls(this.camera, this.container)\r\n        this.cameraBasicLookAt = new THREE.Vector3(0)\r\n        this.cameraBasicPosition = new THREE.Vector3(0, 300, 350)\r\n        this.camera.position.copy(this.cameraBasicPosition)\r\n        this.camera.lookAt(this.cameraBasicLookAt)\r\n\r\n        this.scene = new THREE.Scene()\r\n        this.cssScene = new THREE.Scene()\r\n\r\n        // loading manager\r\n        this.loadingManager = new THREE.LoadingManager(() => {\r\n            if (onLoad) {\r\n                onLoad()\r\n                // this.stackCard()\r\n            }\r\n        }, (url: string, loaded: number, total: number) => {\r\n            if (onProgress) {\r\n                onProgress(url, loaded, total)\r\n            }\r\n        }, (url) => {\r\n            if (onError) {\r\n                onError(url)\r\n            }\r\n        })\r\n        \r\n        // // light\r\n        // const light = new THREE.DirectionalLight(0xffffff)\r\n        // light.position.set(0, 500, 200)\r\n        // // light.castShadow = true\r\n        // // light.shadow.camera.left = -150\r\n        // // light.shadow.camera.right = 150\r\n        // // light.shadow.camera.bottom = -150\r\n        // // light.shadow.camera.top = 150\r\n        // // light.shadow.camera.near = 10\r\n        // // light.shadow.camera.far = 511\r\n        // // light.shadow.mapSize.width = 1024\r\n        // // light.shadow.mapSize.height = 1024\r\n        // // light.shadow.bias = -0.0001\r\n        // this.scene.add(light)\r\n        // // this.scene.add( new THREE.CameraHelper( light.shadow.camera ) )\r\n\r\n\r\n        // *********** floor ***********\r\n        const floorGeometry = new THREE.SphereGeometry( 200 )\r\n        let tx = new THREE.TextureLoader(this.loadingManager).load('checkerboard.png')\r\n        const floor = new THREE.Mesh( floorGeometry,  new THREE.MeshBasicMaterial({\r\n                    map: tx,\r\n                    color: 0x606060,\r\n                    side: THREE.BackSide\r\n                })\r\n            // [\r\n            //     new THREE.MeshBasicMaterial({\r\n            //         map: tx,\r\n            //         color: 0x606060,\r\n            //         side: THREE.FrontSide\r\n            //     }),\r\n            //     new THREE.MeshBasicMaterial({\r\n            //         color: 0xff00ff,\r\n            //         side: THREE.BackSide\r\n            //     })\r\n            // ]\r\n        )\r\n        floor.castShadow = false\r\n        floor.receiveShadow = true\r\n        floor.position.y = -10;\r\n        // floor.position.z -= 500;\r\n        floor.rotation.x = Math.PI * - 0.5;\r\n        // this.scene.add( floor );\r\n        \r\n        //\r\n        this.intersectObjs = []\r\n        this.cardContainer = new THREE.Object3D()\r\n        this.cardProxyManager = new ProxyManager()\r\n        this.scene.add(this.cardContainer)\r\n\r\n\r\n        // *********** raycast intersections ***********\r\n        this.raycaster = new THREE.Raycaster()\r\n        \r\n\r\n        // *********** camera animations ***********\r\n        this.cameraPositionController = new DampingVector3Controller(new THREE.Vector3(), 0.9, 0.002)\r\n        this.cameraWithMouseRotateFactor = 35\r\n\r\n        // *********** events ***********\r\n        this.mousePosX = 0\r\n        this.mousePosY = 0\r\n        this.pointer = new THREE.Vector2()\r\n\r\n        // *********** animate ***********\r\n        this.isScenePaused = false\r\n        this.resumeScene()\r\n    }\r\n\r\n    animate = () => {\r\n        if (this.isScenePaused) {\r\n            return\r\n        }\r\n        requestAnimationFrame( this.animate )\r\n        this.updateCamera()\r\n        // this.controls.update()\r\n        this.render()\r\n        this.stats.update()\r\n        this.cardProxyManager.update()\r\n        // this.controls.update()\r\n    }\r\n\r\n    render ()\r\n    {\r\n        this.renderer.render(this.scene, this.camera)\r\n        if (this.cssRenderer) {\r\n            this.cssRenderer.render(this.cssScene, this.camera)\r\n        }\r\n    }\r\n\r\n    onWindowResize = () => {\r\n        this.camera.aspect = window.innerWidth / window.innerHeight\r\n        this.camera.updateProjectionMatrix()\r\n        this.renderer.setSize( window.innerWidth, window.innerHeight )\r\n        if (this.cssRenderer) {\r\n            this.cssRenderer.setSize( window.innerWidth, window.innerHeight )\r\n        }\r\n    }\r\n\r\n    onMouseWheel = (e: WheelEvent) => {\r\n        if (e.deltaY > 0) {\r\n            this.cardProxyManager.focusForward()\r\n        } else {\r\n            this.cardProxyManager.focusBackward()\r\n        }\r\n        // if (this.cardGroupStatus == 2) {\r\n        //     if (e.deltaY > 0) {\r\n        //         if (this.pickedCardIndex < this.cards.length - 1) {\r\n        //             this.pickedCardIndex ++\r\n        //         }\r\n        //     } else {\r\n        //         if (this.pickedCardIndex > 0) {\r\n        //             this.pickedCardIndex --\r\n        //         }\r\n        //     }\r\n        //     this.pickCard(this.pickedCardIndex)\r\n        // }\r\n    }\r\n    \r\n    onMouseMove = (e: MouseEvent) => {\r\n        this.mousePosX = e.clientX\r\n        this.mousePosY = e.clientY\r\n        this.pointer.x = ( e.clientX / window.innerWidth ) * 2 - 1;\r\n\t\tthis.pointer.y = - ( e.clientY / window.innerHeight ) * 2 + 1;\r\n\r\n        // this.raycaster.setFromCamera( this.pointer, this.camera )\r\n        // const intersects = this.raycaster.intersectObjects( this.intersectObjs, false )\r\n        // if (intersects.length == 1) {\r\n        //     console.log('intersected:', intersects[0])\r\n        // }\r\n    }\r\n\r\n    onClick = (e: MouseEvent) => {\r\n        this.raycaster.setFromCamera( this.pointer, this.camera )\r\n        const intersects = this.raycaster.intersectObjects( this.intersectObjs, false )\r\n        if (intersects.length >= 1) {\r\n            this.cardProxyManager.focusOnCard(intersects[0].object)\r\n        } else {\r\n            this.cardProxyManager.toStatic()\r\n        }\r\n    }\r\n\r\n\r\n    updateCamera() {\r\n        const dampPos = (new THREE.Vector3(\r\n            this.pointer.x * this.cameraWithMouseRotateFactor,\r\n            this.pointer.y * this.cameraWithMouseRotateFactor,\r\n            -this.pointer.y * this.cameraWithMouseRotateFactor,\r\n        ))\r\n\r\n        this.cameraPositionController.update(dampPos)\r\n        dampPos.copy(this.cameraPositionController.currentVec3).add(this.cameraBasicPosition)\r\n        // this.cameraLootAtController.update(this.cameraTargetPosition)\r\n        this.camera.position.copy(dampPos)\r\n        this.camera.lookAt(this.cameraBasicLookAt)\r\n        // var vel = this.cameraLootAtController.velocity\r\n        // this.camera.position.x = vel.x * this.cameraWithMouseMoveFactor\r\n        // this.camera.position.y = 200 - vel.y * this.cameraWithMouseMoveFactor\r\n    }\r\n\r\n    pauseScene () {\r\n        this.isScenePaused = true\r\n        const self = this\r\n        window.removeEventListener( 'resize', self.onWindowResize )\r\n        window.removeEventListener( 'wheel', self.onMouseWheel )\r\n        window.removeEventListener('mousemove', self.onMouseMove )\r\n        window.removeEventListener( 'click', self.onClick )\r\n    }\r\n    resumeScene () {\r\n        this.isScenePaused = false\r\n        this.animate()\r\n        const self = this\r\n        window.addEventListener( 'resize', self.onWindowResize )\r\n        window.addEventListener( 'wheel', self.onMouseWheel )\r\n        window.addEventListener('mousemove', self.onMouseMove )\r\n        window.addEventListener( 'click', self.onClick )\r\n    }\r\n\r\n    registerNewProxyGroup(proxyGroup: ProxyGroup) {\r\n        this.cardProxyManager.registerProxyGroup(proxyGroup)\r\n    }\r\n\r\n    initCards() {\r\n        this.cardProxyManager.initCards(this.cardContainer)\r\n        this.cardProxyManager.cards.forEach(card => {\r\n            this.intersectObjs.push(card.cardMeshFront)\r\n            this.intersectObjs.push(card.cardMeshBack)\r\n        })\r\n        this.cardProxyManager.toStatic()\r\n    }\r\n\r\n    swapProxyGroup(left: boolean) {\r\n        if (left) {\r\n            this.cardProxyManager.swapProxyGroup(this.cardProxyManager.currentProxyGroupIndex - 1)\r\n            return this.cardProxyManager.currentProxyGroupIndex\r\n        }\r\n        else {\r\n            this.cardProxyManager.swapProxyGroup(this.cardProxyManager.currentProxyGroupIndex + 1)\r\n        }\r\n        return this.cardProxyManager.currentProxyGroupIndex\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n}\r\n\r\nexport { FrontPageManager }","import * as THREE from 'three'\r\nimport { CardProxyConfig, ContainerProxyConfig } from '../ProxyConfig'\r\nimport { ProxyGroup } from '../Proxy'\r\n\r\nexport function testStyle1() {\r\n    const visibleCardCount = 8\r\n    const onStatic = function (containerProxyConfig: ContainerProxyConfig, cardProxyConfigs: Array<CardProxyConfig>) {\r\n        containerProxyConfig.position.set(0, 0, 0)\r\n        containerProxyConfig.rotation.set(0.1, 0.1, 0.5)\r\n        for (let i = 0; i < visibleCardCount; i++) {\r\n            cardProxyConfigs[i].position.set((i - (visibleCardCount-1) / 2) * 40, 0, 0)\r\n            cardProxyConfigs[i].rotation.set(i, 0, i*0.2)\r\n            cardProxyConfigs[i].scale.set(30, 30)\r\n            cardProxyConfigs[i].frontColor.set(0xff0000)\r\n            cardProxyConfigs[i].backColor.set(0x00ff00)\r\n            cardProxyConfigs[i].frontImgUrl = ''\r\n            cardProxyConfigs[i].backImgUrl = ''\r\n        }\r\n    }\r\n    const onFocusIndex = function (containerProxyConfig: ContainerProxyConfig, cardProxyConfigs: Array<CardProxyConfig>,\r\n        isCurrentFocused: boolean, oldFocusIndex: number, newFocusIndex: number) {\r\n        \r\n        for (let i = 0; i < visibleCardCount; i++) {\r\n            if (i == newFocusIndex) {\r\n                cardProxyConfigs[i].position.set((i - (visibleCardCount-1) / 2) * 40, 10, 0)\r\n                cardProxyConfigs[i].rotation.set(0, 1, 0)\r\n                cardProxyConfigs[i].scale.set(50, 50)\r\n                cardProxyConfigs[i].frontColor.set(0xffff00)\r\n                cardProxyConfigs[i].backColor.set(0x00ff00)\r\n                cardProxyConfigs[i].frontImgUrl = 'checkerboard.png'\r\n                cardProxyConfigs[i].backImgUrl = ''\r\n            } else {\r\n                cardProxyConfigs[i].position.set((i - (visibleCardCount-1) / 2) * 40, 0, 0)\r\n                cardProxyConfigs[i].rotation.set(0, 1, 0)\r\n                cardProxyConfigs[i].scale.set(30, 30)\r\n                cardProxyConfigs[i].frontColor.set(0xff0000)\r\n                cardProxyConfigs[i].backColor.set(0x00ff00)\r\n                cardProxyConfigs[i].frontImgUrl = ''\r\n                cardProxyConfigs[i].backImgUrl = ''\r\n            }\r\n        }\r\n    }\r\n\r\n    return new ProxyGroup(visibleCardCount, false, onStatic, onFocusIndex)\r\n}\r\n\r\nexport function testStyle2() {\r\n    const visibleCardCount = 6\r\n    const onStatic = function (containerProxyConfig: ContainerProxyConfig, cardProxyConfigs: Array<CardProxyConfig>) {\r\n        containerProxyConfig.position.set(0, -((visibleCardCount-1) / 2) * 70, 0)\r\n        containerProxyConfig.rotation.set(0, 0, 0)\r\n        for (let i = 0; i < visibleCardCount; i++) {\r\n            cardProxyConfigs[i].position.set(0, i * 70, 0)\r\n            cardProxyConfigs[i].rotation.set(0, 0, 0)\r\n            cardProxyConfigs[i].scale.set(60, 60)\r\n            cardProxyConfigs[i].frontColor.set(0xc0c0f0)\r\n            cardProxyConfigs[i].backColor.set(0xc0c0f0)\r\n            cardProxyConfigs[i].frontImgUrl = ''\r\n            cardProxyConfigs[i].backImgUrl = ''\r\n        }\r\n        \r\n    }\r\n    const onFocusIndex = function (containerProxyConfig: ContainerProxyConfig, cardProxyConfigs: Array<CardProxyConfig>,\r\n        isCurrentFocused: boolean, oldFocusIndex: number, newFocusIndex: number) {\r\n        containerProxyConfig.position.set(0, 1-newFocusIndex * 70, 0)\r\n        containerProxyConfig.rotation.set(0, 0, 0)\r\n        for (let i = 0; i < visibleCardCount; i++) {\r\n            cardProxyConfigs[i].position.set(0, i * 70, 0)\r\n            cardProxyConfigs[i].rotation.set(0, 0, 0)\r\n            cardProxyConfigs[i].scale.set(60, 60)\r\n            cardProxyConfigs[i].frontColor.set(0xc0c0c0)\r\n            cardProxyConfigs[i].backColor.set(0xc0c0c0)\r\n            cardProxyConfigs[i].frontImgUrl = ''\r\n            cardProxyConfigs[i].backImgUrl = ''\r\n            if (i == newFocusIndex) {\r\n                cardProxyConfigs[i].position.set(0, i * 70, 20)\r\n                cardProxyConfigs[i].rotation.set(-0.7, 0, 0)\r\n                cardProxyConfigs[i].scale.set(80, 80)\r\n                cardProxyConfigs[i].frontColor.set(0xff0000)\r\n                cardProxyConfigs[i].backColor.set(0xc0c0c0)\r\n                cardProxyConfigs[i].frontImgUrl = 'checkerboard.png'\r\n                cardProxyConfigs[i].backImgUrl = ''\r\n            }\r\n        }\r\n    }\r\n\r\n    return new ProxyGroup(visibleCardCount, false, onStatic, onFocusIndex)\r\n}\r\n\r\nvar CAROUSEL_ANGLE = 0\r\n\r\nexport function testStyle3() {\r\n    const radius = 100\r\n    const cardHeight = 60\r\n    const cardWidth = 40\r\n    const visibleCardCount = 10\r\n    const onStatic = function (containerProxyConfig: ContainerProxyConfig, cardProxyConfigs: Array<CardProxyConfig>) {\r\n        CAROUSEL_ANGLE = 0\r\n        containerProxyConfig.position.set(0, 0, 0)\r\n        containerProxyConfig.rotation.set(0, CAROUSEL_ANGLE, 0)\r\n        for (let i = 0; i < visibleCardCount; i++) {\r\n            let angle = i*Math.PI*2/visibleCardCount + Math.PI/2\r\n            cardProxyConfigs[i].position.set(Math.cos(angle) * radius, 0, Math.sin(angle) * radius)\r\n            cardProxyConfigs[i].rotation.set(0, -angle + Math.PI / 2, 0)\r\n            cardProxyConfigs[i].scale.set(cardWidth, cardHeight)\r\n            cardProxyConfigs[i].frontColor.set(new THREE.Color(1, i/visibleCardCount, 0))\r\n            cardProxyConfigs[i].backColor.set(0xa0a0a0)\r\n            cardProxyConfigs[i].frontImgUrl = ''\r\n            cardProxyConfigs[i].backImgUrl = ''\r\n        }\r\n        \r\n    }\r\n    const onFocusIndex = function (containerProxyConfig: ContainerProxyConfig, cardProxyConfigs: Array<CardProxyConfig>,\r\n        isCurrentFocused: boolean, oldFocusIndex: number, newFocusIndex: number) {\r\n        if (oldFocusIndex < newFocusIndex) {\r\n            oldFocusIndex += visibleCardCount\r\n        }\r\n        console.log(oldFocusIndex - newFocusIndex, oldFocusIndex - newFocusIndex > visibleCardCount / 2)\r\n        CAROUSEL_ANGLE += (newFocusIndex - oldFocusIndex)*Math.PI*2/visibleCardCount\r\n        // let containerAngle = newFocusIndex*Math.PI*2/visibleCardCount\r\n        if (oldFocusIndex - newFocusIndex > visibleCardCount / 2) {\r\n            CAROUSEL_ANGLE += Math.PI*2\r\n        }\r\n        containerProxyConfig.rotation.set(0, CAROUSEL_ANGLE, 0)\r\n        for (let i = 0; i < visibleCardCount; i++) {\r\n            let angle = i*Math.PI*2/visibleCardCount + Math.PI/2\r\n            cardProxyConfigs[i].position.set(Math.cos(angle) * radius, 0, Math.sin(angle) * radius)\r\n            cardProxyConfigs[i].frontImgUrl = ''\r\n            // cardProxyConfigs[i].rotation.set(0, Math.PI / 2, 0)\r\n            if (i == newFocusIndex) {\r\n                cardProxyConfigs[i].frontImgUrl = 'checkerboard.png'\r\n                cardProxyConfigs[i].position.set(Math.cos(angle) * (radius + 10), 0, Math.sin(angle) * (radius + 10))\r\n            }\r\n        }\r\n    }\r\n\r\n    return new ProxyGroup(visibleCardCount, true, onStatic, onFocusIndex)\r\n}\r\n\r\n\r\nexport function testStyle4() {\r\n    const radius = 100\r\n    const cardHeight = 60\r\n    const cardWidth = 40\r\n    const visibleCardCount = 7\r\n    const angle = 0.3\r\n    const ygap = 15\r\n    const onStatic = function (containerProxyConfig: ContainerProxyConfig, cardProxyConfigs: Array<CardProxyConfig>) {\r\n        containerProxyConfig.position.set(0, 80, 0)\r\n        containerProxyConfig.rotation.set(0, visibleCardCount * angle / 2, 0)\r\n        for (let i = 0; i < visibleCardCount; i++) {\r\n            let a = i*angle + Math.PI / 2\r\n            cardProxyConfigs[i].position.set(Math.cos(a) * radius, -i*ygap, Math.sin(a) * radius)\r\n            cardProxyConfigs[i].rotation.set(Math.PI/2, Math.PI, -a-Math.PI/2)\r\n            cardProxyConfigs[i].scale.set(cardWidth, cardHeight)\r\n            cardProxyConfigs[i].frontColor.set(new THREE.Color(1, i/visibleCardCount, 0))\r\n            cardProxyConfigs[i].backColor.set(0xa0a0a0)\r\n            cardProxyConfigs[i].frontImgUrl = ''\r\n            cardProxyConfigs[i].backImgUrl = ''\r\n        }\r\n        \r\n    }\r\n    const onFocusIndex = function (containerProxyConfig: ContainerProxyConfig, cardProxyConfigs: Array<CardProxyConfig>,\r\n        isCurrentFocused: boolean, oldFocusIndex: number, newFocusIndex: number) {\r\n\r\n        containerProxyConfig.rotation.set(0, (newFocusIndex) * angle, 0)\r\n        for (let i = 0; i < visibleCardCount; i++) {\r\n            let a = i*angle + Math.PI / 2\r\n            cardProxyConfigs[i].position.set(Math.cos(a) * radius, -i*ygap, Math.sin(a) * radius)\r\n            cardProxyConfigs[i].rotation.set(Math.PI/2, Math.PI, -a-Math.PI/2)\r\n            cardProxyConfigs[i].scale.set(cardWidth, cardHeight)\r\n            cardProxyConfigs[i].frontColor.set(new THREE.Color(1, i/visibleCardCount, 0))\r\n            cardProxyConfigs[i].backColor.set(0xa0a0a0)\r\n            cardProxyConfigs[i].frontImgUrl = ''\r\n            // cardProxyConfigs[i].backImgUrl = ''\r\n            // cardProxyConfigs[i].rotation.set(0, Math.PI / 2, 0)\r\n            if (i == newFocusIndex) {\r\n                cardProxyConfigs[i].frontImgUrl = 'checkerboard.png'\r\n                cardProxyConfigs[i].position.set(Math.cos(a) * (radius + 20), -i*ygap, Math.sin(a) * (radius + 20))\r\n            }\r\n        }\r\n    }\r\n\r\n    return new ProxyGroup(visibleCardCount, false, onStatic, onFocusIndex)\r\n}","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\r\nimport * as THREE from 'three'\r\nimport Vue from 'vue'\r\nimport { FrontPageManager } from '../scripts/FrontPage4.0/Scene'\r\n// import ProxyConfig from '../scripts/FrontPage4.0/ProxyConfig'\r\nimport { testStyle1, testStyle2, testStyle3, testStyle4 } from '../scripts/FrontPage4.0/ProxyStyles/TestStyles'\r\n\r\ntype Data = {\r\n    fpm: FrontPageManager | null,\r\n    loadingStat: {\r\n        loaded: number,\r\n        total: number,\r\n        isLoaded: boolean,\r\n        noLoadingStat: boolean\r\n    }\r\n}\r\n\r\nexport default Vue.extend({\r\n    data(): Data {\r\n        return {\r\n            fpm: null,\r\n            loadingStat: {\r\n                loaded: 0,\r\n                total: 1,\r\n                isLoaded: false,\r\n                noLoadingStat: false\r\n            }\r\n        }\r\n    },\r\n    mounted() {\r\n        const self = this\r\n        // for (let i = 0; i < 10; i++) {\r\n        //     this.cardInfos.push(\r\n        //         {\r\n        //             imgUrl: `card${Math.floor(i%3)+1}.jpg`,\r\n        //             url: 'fakeUrl_' + i\r\n        //         }\r\n        //     )\r\n        // }\r\n        if (this.$refs['canvas-container'] instanceof HTMLElement) {\r\n            this.fpm = new FrontPageManager(\r\n                this.$refs['canvas-container'],\r\n                // this.cardInfos,\r\n                () => {\r\n                    console.log('loaded')\r\n                    self.loadingStat.isLoaded = true\r\n                    setTimeout(() => {\r\n                        self.loadingStat.noLoadingStat = true\r\n                    }, 501)\r\n                },\r\n                (_, loaded, total) => {\r\n                    this.loadingStat.loaded = loaded\r\n                    this.loadingStat.total = total\r\n                },\r\n                (url) => {\r\n                    console.error('failed to load asset: ' + url)\r\n                    self.loadingStat.isLoaded = true\r\n                },\r\n                (index) => {\r\n                    console.log('focused on card: ', index)\r\n                }\r\n            )\r\n            // if (this.$refs['dom3d-container'] instanceof HTMLElement && this.$refs['dom3d-test'] instanceof HTMLElement) {\r\n            //     this.fpm.registerCSSCoordinator(this.$refs['dom3d-container'], this.$refs['dom3d-test'], new THREE.Vector3(-200, 200, 0))\r\n            // }\r\n\r\n            this.fpm.registerNewProxyGroup(testStyle1())\r\n            this.fpm.registerNewProxyGroup(testStyle2())\r\n            this.fpm.registerNewProxyGroup(testStyle3())\r\n            this.fpm.registerNewProxyGroup(testStyle4())\r\n            this.fpm.initCards()\r\n\r\n        }\r\n    },\r\n    methods: {\r\n        onGlassClick() {\r\n            alert('glass clicked!')\r\n        },\r\n\r\n        swapLeft() {\r\n            this.fpm?.swapProxyGroup(true)\r\n        },\r\n\r\n        swapRight() {\r\n            this.fpm?.swapProxyGroup(false)\r\n        }\r\n    }\r\n})\r\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--15-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/ts-loader/index.js??ref--15-3!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ThreeFrontpageTest2.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--15-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/ts-loader/index.js??ref--15-3!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ThreeFrontpageTest2.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./ThreeFrontpageTest2.vue?vue&type=template&id=170b5cc0&scoped=true&\"\nimport script from \"./ThreeFrontpageTest2.vue?vue&type=script&lang=ts&\"\nexport * from \"./ThreeFrontpageTest2.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./ThreeFrontpageTest2.vue?vue&type=style&index=0&id=170b5cc0&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"170b5cc0\",\n  null\n  \n)\n\nexport default component.exports","var fails = require('../internals/fails');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar V8_VERSION = require('../internals/engine-v8-version');\n\nvar SPECIES = wellKnownSymbol('species');\n\nmodule.exports = function (METHOD_NAME) {\n  // We can't use this feature detection in V8 since it causes\n  // deoptimization and serious performance degradation\n  // https://github.com/zloirock/core-js/issues/677\n  return V8_VERSION >= 51 || !fails(function () {\n    var array = [];\n    var constructor = array.constructor = {};\n    constructor[SPECIES] = function () {\n      return { foo: 1 };\n    };\n    return array[METHOD_NAME](Boolean).foo !== 1;\n  });\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar aCallable = require('../internals/a-callable');\nvar toObject = require('../internals/to-object');\nvar lengthOfArrayLike = require('../internals/length-of-array-like');\nvar toString = require('../internals/to-string');\nvar fails = require('../internals/fails');\nvar internalSort = require('../internals/array-sort');\nvar arrayMethodIsStrict = require('../internals/array-method-is-strict');\nvar FF = require('../internals/engine-ff-version');\nvar IE_OR_EDGE = require('../internals/engine-is-ie-or-edge');\nvar V8 = require('../internals/engine-v8-version');\nvar WEBKIT = require('../internals/engine-webkit-version');\n\nvar test = [];\nvar un$Sort = uncurryThis(test.sort);\nvar push = uncurryThis(test.push);\n\n// IE8-\nvar FAILS_ON_UNDEFINED = fails(function () {\n  test.sort(undefined);\n});\n// V8 bug\nvar FAILS_ON_NULL = fails(function () {\n  test.sort(null);\n});\n// Old WebKit\nvar STRICT_METHOD = arrayMethodIsStrict('sort');\n\nvar STABLE_SORT = !fails(function () {\n  // feature detection can be too slow, so check engines versions\n  if (V8) return V8 < 70;\n  if (FF && FF > 3) return;\n  if (IE_OR_EDGE) return true;\n  if (WEBKIT) return WEBKIT < 603;\n\n  var result = '';\n  var code, chr, value, index;\n\n  // generate an array with more 512 elements (Chakra and old V8 fails only in this case)\n  for (code = 65; code < 76; code++) {\n    chr = String.fromCharCode(code);\n\n    switch (code) {\n      case 66: case 69: case 70: case 72: value = 3; break;\n      case 68: case 71: value = 4; break;\n      default: value = 2;\n    }\n\n    for (index = 0; index < 47; index++) {\n      test.push({ k: chr + index, v: value });\n    }\n  }\n\n  test.sort(function (a, b) { return b.v - a.v; });\n\n  for (index = 0; index < test.length; index++) {\n    chr = test[index].k.charAt(0);\n    if (result.charAt(result.length - 1) !== chr) result += chr;\n  }\n\n  return result !== 'DGBEFHACIJK';\n});\n\nvar FORCED = FAILS_ON_UNDEFINED || !FAILS_ON_NULL || !STRICT_METHOD || !STABLE_SORT;\n\nvar getSortCompare = function (comparefn) {\n  return function (x, y) {\n    if (y === undefined) return -1;\n    if (x === undefined) return 1;\n    if (comparefn !== undefined) return +comparefn(x, y) || 0;\n    return toString(x) > toString(y) ? 1 : -1;\n  };\n};\n\n// `Array.prototype.sort` method\n// https://tc39.es/ecma262/#sec-array.prototype.sort\n$({ target: 'Array', proto: true, forced: FORCED }, {\n  sort: function sort(comparefn) {\n    if (comparefn !== undefined) aCallable(comparefn);\n\n    var array = toObject(this);\n\n    if (STABLE_SORT) return comparefn === undefined ? un$Sort(array) : un$Sort(array, comparefn);\n\n    var items = [];\n    var arrayLength = lengthOfArrayLike(array);\n    var itemsLength, index;\n\n    for (index = 0; index < arrayLength; index++) {\n      if (index in array) push(items, array[index]);\n    }\n\n    internalSort(items, getSortCompare(comparefn));\n\n    itemsLength = items.length;\n    index = 0;\n\n    while (index < itemsLength) array[index] = items[index++];\n    while (index < arrayLength) delete array[index++];\n\n    return array;\n  }\n});\n","var userAgent = require('../internals/engine-user-agent');\n\nvar webkit = userAgent.match(/AppleWebKit\\/(\\d+)\\./);\n\nmodule.exports = !!webkit && +webkit[1];\n","var arraySlice = require('../internals/array-slice-simple');\n\nvar floor = Math.floor;\n\nvar mergeSort = function (array, comparefn) {\n  var length = array.length;\n  var middle = floor(length / 2);\n  return length < 8 ? insertionSort(array, comparefn) : merge(\n    array,\n    mergeSort(arraySlice(array, 0, middle), comparefn),\n    mergeSort(arraySlice(array, middle), comparefn),\n    comparefn\n  );\n};\n\nvar insertionSort = function (array, comparefn) {\n  var length = array.length;\n  var i = 1;\n  var element, j;\n\n  while (i < length) {\n    j = i;\n    element = array[i];\n    while (j && comparefn(array[j - 1], element) > 0) {\n      array[j] = array[--j];\n    }\n    if (j !== i++) array[j] = element;\n  } return array;\n};\n\nvar merge = function (array, left, right, comparefn) {\n  var llength = left.length;\n  var rlength = right.length;\n  var lindex = 0;\n  var rindex = 0;\n\n  while (lindex < llength || rindex < rlength) {\n    array[lindex + rindex] = (lindex < llength && rindex < rlength)\n      ? comparefn(left[lindex], right[rindex]) <= 0 ? left[lindex++] : right[rindex++]\n      : lindex < llength ? left[lindex++] : right[rindex++];\n  } return array;\n};\n\nmodule.exports = mergeSort;\n","var $ = require('../internals/export');\nvar toObject = require('../internals/to-object');\nvar nativeKeys = require('../internals/object-keys');\nvar fails = require('../internals/fails');\n\nvar FAILS_ON_PRIMITIVES = fails(function () { nativeKeys(1); });\n\n// `Object.keys` method\n// https://tc39.es/ecma262/#sec-object.keys\n$({ target: 'Object', stat: true, forced: FAILS_ON_PRIMITIVES }, {\n  keys: function keys(it) {\n    return nativeKeys(toObject(it));\n  }\n});\n","'use strict';\nvar $ = require('../internals/export');\nvar $map = require('../internals/array-iteration').map;\nvar arrayMethodHasSpeciesSupport = require('../internals/array-method-has-species-support');\n\nvar HAS_SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('map');\n\n// `Array.prototype.map` method\n// https://tc39.es/ecma262/#sec-array.prototype.map\n// with adding support of @@species\n$({ target: 'Array', proto: true, forced: !HAS_SPECIES_SUPPORT }, {\n  map: function map(callbackfn /* , thisArg */) {\n    return $map(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n","var UA = require('../internals/engine-user-agent');\n\nmodule.exports = /MSIE|Trident/.test(UA);\n"],"sourceRoot":""}