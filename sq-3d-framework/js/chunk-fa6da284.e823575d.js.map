{"version":3,"sources":["webpack:///./src/views/ThreeFrontpageTest2.vue?9d4a","webpack:///./src/views/ThreeFrontpageTest2.vue","webpack:///./src/views/ThreeFrontpageTest2.vue?3e9f","webpack:///./src/views/ThreeFrontpageTest2.vue?64c0","webpack:///./src/scripts/Three/Utils.ts","webpack:///./node_modules/core-js/modules/es.math.sign.js","webpack:///./node_modules/core-js/modules/es.string.sub.js","webpack:///./src/scripts/FrontPage3.0/index.ts","webpack:///./src/views/ThreeFrontpageTest2.vue?8104","webpack:///./node_modules/core-js/internals/create-html.js","webpack:///./node_modules/core-js/internals/string-html-forced.js","webpack:///./node_modules/core-js/internals/math-sign.js"],"names":["render","_vm","this","_h","$createElement","_c","_self","ref","attrs","staticClass","class","loadingStat","isLoaded","noLoadingStat","style","width","loaded","total","_v","_s","Math","round","staticRenderFns","extend","data","fpm","cardInfos","Array","mounted","self","i","push","imgUrl","floor","url","$refs","HTMLElement","console","log","setTimeout","_","error","index","methods","onGlassClick","alert","component","DampingObjectController","object","damp","attract","velocity","childObjects","target","multiplyScalar","currentPath","sub","position","add","forEach","obj","copy","rotation","DampingVector3Controller","currentVec3","randn_bm","u","v","random","sqrt","cos","PI","$","sign","stat","createHTML","forcedStringHTMLMethod","proto","forced","CardController","angle","radius","z","momentum","attraction","relVelocity","staticThreshold","angleTarget","radiusTarget","zTarget","angleV","radiusV","zV","isAlmostStatic","afterStaticEvent","undefined","sin","val","abs","nonlinear","isPreviousAlmostStatic","Card","mesh","info","controller","getPosition","getRotation","update","FrontPageManager","_container","onLoad","onProgress","onError","onCardFocus","onCardRouteJump","configs","cardSizeX","cardSizeY","cardHelixRadius","cardHelixZGap","cardHelixRotateRadGap","cardHelixFocusRadius","cardHelixFocusRotateRadGap","cardMomentum","cardAttraction","cardRelVelocity","isScenePaused","requestAnimationFrame","animate","updateCamera","cards","card","updateByController","stats","camera","aspect","window","innerWidth","innerHeight","updateProjectionMatrix","renderer","setSize","cssRenderer","e","cardGroupStatus","deltaY","pickedCardIndex","length","pickCard","mousePosX","clientX","mousePosY","clientY","pointer","x","y","raycaster","setFromCamera","intersects","intersectObjects","intersectObjs","fanCard","clickedCardIndex","focusOnCard","stackCard","container","alpha","setClearColor","setPixelRatio","devicePixelRatio","domElement","top","left","appendChild","shadowMap","enabled","type","zIndex","cameraBasicLookAt","cameraBasicPosition","lookAt","scene","cssScene","loadingManager","light","set","castShadow","shadow","right","bottom","near","far","mapSize","height","bias","floorGeometry","color","receiveShadow","cardGroup","cardGeom","cardInfo","cardIndex","tx","load","map","side","cameraPositionController","cameraWithMouseRotateFactor","resumeScene","focusIndex","pauseScene","dampPos","removeEventListener","onWindowResize","onMouseWheel","onMouseMove","onClick","addEventListener","uncurryThis","requireObjectCoercible","toString","quot","replace","module","exports","string","tag","attribute","value","S","p1","fails","METHOD_NAME","test","toLowerCase","split"],"mappings":"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","file":"js/chunk-fa6da284.e823575d.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('div',{ref:\"canvas-container\",attrs:{\"id\":\"canvas-container\"}},[_c('div',{staticClass:\"loading-container\",class:{\n            'loading-container--hidden': _vm.loadingStat.isLoaded,\n            'loading-container--none': _vm.loadingStat.noLoadingStat\n        }},[_c('div',{staticClass:\"load-stat\"},[_c('div',{staticClass:\"load-pgbar\",style:({\n                    width: 100 * _vm.loadingStat.loaded / _vm.loadingStat.total + '%'\n                })}),_c('div',{staticClass:\"load-text\"},[_vm._v(_vm._s(Math.round(100 * _vm.loadingStat.loaded / _vm.loadingStat.total))+\" %\")])])])])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\r\nimport * as THREE from 'three'\r\nimport Vue from 'vue'\r\nimport { CardInfo, FrontPageManager } from '../scripts/FrontPage3.0'\r\n\r\ntype Data = {\r\n    fpm: FrontPageManager | null,\r\n    loadingStat: {\r\n        loaded: number,\r\n        total: number,\r\n        isLoaded: boolean,\r\n        noLoadingStat: boolean\r\n    },\r\n    cardInfos: Array<CardInfo>\r\n}\r\n\r\nexport default Vue.extend({\r\n    data(): Data {\r\n        return {\r\n            fpm: null,\r\n            loadingStat: {\r\n                loaded: 0,\r\n                total: 1,\r\n                isLoaded: false,\r\n                noLoadingStat: false\r\n            },\r\n            cardInfos: new Array<CardInfo>()\r\n        }\r\n    },\r\n    mounted() {\r\n        const self = this\r\n        for (let i = 0; i < 10; i++) {\r\n            this.cardInfos.push(\r\n                {\r\n                    imgUrl: `card${Math.floor(i%3)+1}.jpg`,\r\n                    url: 'fakeUrl_' + i\r\n                }\r\n            )\r\n        }\r\n        if (this.$refs['canvas-container'] instanceof HTMLElement) {\r\n            this.fpm = new FrontPageManager(\r\n                this.$refs['canvas-container'],\r\n                this.cardInfos,\r\n                () => {\r\n                    console.log('loaded')\r\n                    self.loadingStat.isLoaded = true\r\n                    setTimeout(() => {\r\n                        self.loadingStat.noLoadingStat = true\r\n                    }, 501)\r\n                },\r\n                (_, loaded, total) => {\r\n                    this.loadingStat.loaded = loaded\r\n                    this.loadingStat.total = total\r\n                },\r\n                (url) => {\r\n                    console.error('failed to load asset: ' + url)\r\n                    self.loadingStat.isLoaded = true\r\n                },\r\n                (index) => {\r\n                    console.log('focused on card: ', index)\r\n                }\r\n            )\r\n            // if (this.$refs['dom3d-container'] instanceof HTMLElement && this.$refs['dom3d-test'] instanceof HTMLElement) {\r\n            //     this.fpm.registerCSSCoordinator(this.$refs['dom3d-container'], this.$refs['dom3d-test'], new THREE.Vector3(-200, 200, 0))\r\n            // }\r\n        }\r\n    },\r\n    methods: {\r\n        onGlassClick() {\r\n            alert('glass clicked!')\r\n        }\r\n    }\r\n})\r\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--15-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/ts-loader/index.js??ref--15-3!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ThreeFrontpageTest2.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--15-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/ts-loader/index.js??ref--15-3!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ThreeFrontpageTest2.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./ThreeFrontpageTest2.vue?vue&type=template&id=3bcc601a&scoped=true&\"\nimport script from \"./ThreeFrontpageTest2.vue?vue&type=script&lang=ts&\"\nexport * from \"./ThreeFrontpageTest2.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./ThreeFrontpageTest2.vue?vue&type=style&index=0&id=3bcc601a&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"3bcc601a\",\n  null\n  \n)\n\nexport default component.exports","import { Vector3, Object3D } from 'three'\r\n\r\nexport class DampingObjectController {\r\n    damp: number\r\n    attract: number\r\n    object: Object3D\r\n    velocity: Vector3\r\n    childObjects: Array<Object3D>\r\n    constructor(object: Object3D, damp: number = 0.5, attract: number = 0.5) {\r\n        this.damp = damp\r\n        this.attract = attract\r\n        this.object = object\r\n        this.velocity = new Vector3()\r\n        this.childObjects = []\r\n    }\r\n    addChildObj(object: Object3D) {\r\n        this.childObjects.push(object)\r\n    }\r\n    update(target: Vector3) {\r\n        this.velocity.multiplyScalar(this.damp)\r\n        let currentPath = target.sub(this.object.position)\r\n        this.velocity.add(currentPath.multiplyScalar(this.attract))\r\n        this.object.position.add(this.velocity)\r\n        this.childObjects.forEach(obj => {\r\n            obj.position.copy(this.object.position)\r\n            obj.rotation.copy(this.object.rotation)\r\n        })\r\n    }\r\n}\r\n\r\nexport class DampingVector3Controller {\r\n    damp: number\r\n    attract: number\r\n    velocity: Vector3\r\n    currentVec3: Vector3\r\n    constructor(currentVec3: Vector3, damp: number = 0.5, attract: number = 0.5) {\r\n        this.damp = damp\r\n        this.attract = attract\r\n        this.velocity = new Vector3()\r\n        this.currentVec3 = currentVec3\r\n    }\r\n    update(target: Vector3) {\r\n        this.velocity.multiplyScalar(this.damp)\r\n        let currentPath = new Vector3().copy(target).sub(this.currentVec3)\r\n        this.velocity.add(currentPath.multiplyScalar(this.attract))\r\n        this.currentVec3.add(this.velocity)\r\n    }\r\n}\r\n\r\nexport function randn_bm(): number {\r\n    var u = 0, v = 0;\r\n    while(u === 0) u = Math.random(); //Converting [0,1) to (0,1)\r\n    while(v === 0) v = Math.random();\r\n    return Math.sqrt( -2.0 * Math.log( u ) ) * Math.cos( 2.0 * Math.PI * v );\r\n}","var $ = require('../internals/export');\nvar sign = require('../internals/math-sign');\n\n// `Math.sign` method\n// https://tc39.es/ecma262/#sec-math.sign\n$({ target: 'Math', stat: true }, {\n  sign: sign\n});\n","'use strict';\nvar $ = require('../internals/export');\nvar createHTML = require('../internals/create-html');\nvar forcedStringHTMLMethod = require('../internals/string-html-forced');\n\n// `String.prototype.sub` method\n// https://tc39.es/ecma262/#sec-string.prototype.sub\n$({ target: 'String', proto: true, forced: forcedStringHTMLMethod('sub') }, {\n  sub: function sub() {\n    return createHTML(this, 'sub', '', '');\n  }\n});\n","import * as THREE from 'three'\r\nimport { Stats } from 'three-stats'\r\nimport { CustomCSS3DObject, CustomCSS3DSprite, CustomCSS3DRenderer } from './CustomCSS3DRenderer'\r\nimport { DampingObjectController, DampingVector3Controller } from '../Three/Utils'\r\n\r\ninterface CardInfo {\r\n    imgUrl: string,\r\n    url: string\r\n}\r\n\r\nclass CardController {\r\n\r\n    angle: number\r\n    radius: number\r\n    z: number\r\n\r\n    angleTarget: number\r\n    radiusTarget: number\r\n    zTarget: number\r\n\r\n    angleV: number\r\n    radiusV: number\r\n    zV: number\r\n\r\n    momentum: number\r\n    attraction: number\r\n    relVelocity: number\r\n\r\n    isAlmostStatic: boolean\r\n    staticThreshold: number\r\n\r\n    afterStaticEvent: Function | undefined\r\n\r\n    constructor(\r\n        angle: number, radius: number, z: number,\r\n        momentum: number, attraction: number, relVelocity: number, staticThreshold: number = 1e-2) {\r\n        this.angle = angle\r\n        this.radius = radius\r\n        this.z = z\r\n        this.angleTarget = angle\r\n        this.radiusTarget = radius\r\n        this.zTarget = z\r\n        this.angleV = 0\r\n        this.radiusV = 0\r\n        this.zV = 0\r\n        this.momentum = momentum\r\n        this.attraction = attraction\r\n        this.relVelocity = relVelocity\r\n        this.isAlmostStatic = true\r\n        this.staticThreshold = staticThreshold\r\n        this.afterStaticEvent = undefined\r\n    }\r\n    getPosition () {\r\n        return new THREE.Vector3(-this.radius * Math.cos(this.angle+Math.PI/2), this.radius * Math.sin(this.angle+Math.PI/2), -this.z)\r\n    }\r\n    getRotation () {\r\n        return new THREE.Euler(0, 0, -this.angle-Math.PI/2)\r\n    }\r\n    nonlinear (val: number) {\r\n        return Math.sqrt(Math.abs(val)) * Math.sign(val) \r\n    }\r\n    update () {\r\n        // v\r\n        this.angleV = this.attraction * this.nonlinear(this.angleTarget - this.angle) + this.momentum * this.angleV\r\n        this.radiusV = this.attraction * this.nonlinear(this.radiusTarget - this.radius) + this.momentum * this.radiusV\r\n        this.zV = this.attraction * this.nonlinear(this.zTarget - this.z) + this.momentum * this.zV\r\n        // p\r\n        this.angle += this.relVelocity * this.angleV * 0.1\r\n        this.radius += this.relVelocity * this.radiusV\r\n        this.z += this.relVelocity * this.zV\r\n        // is the card static?\r\n        let isPreviousAlmostStatic = this.isAlmostStatic\r\n        this.isAlmostStatic =\r\n            Math.abs(this.radiusTarget - this.radius)\r\n            + Math.abs(this.angleTarget - this.angle)\r\n            + Math.abs(this.zTarget - this.z) < this.staticThreshold\r\n        // if previous status is active but present static, call the event function\r\n        if (!isPreviousAlmostStatic && this.isAlmostStatic && this.afterStaticEvent) {\r\n            this.afterStaticEvent()\r\n            this.afterStaticEvent = undefined\r\n        }\r\n    }\r\n}\r\n\r\nclass Card {\r\n    mesh: THREE.Mesh\r\n    info: CardInfo\r\n    controller: CardController\r\n    constructor(mesh: THREE.Mesh, info: CardInfo, controller: CardController) {\r\n        this.mesh = mesh\r\n        this.info = info\r\n        this.controller = controller\r\n        this.mesh.position.copy(this.controller.getPosition())\r\n        this.mesh.rotation.copy(this.controller.getRotation())\r\n    }\r\n    updateByController() {\r\n        this.controller.update()\r\n        this.mesh.position.copy(this.controller.getPosition())\r\n        this.mesh.rotation.copy(this.controller.getRotation())\r\n    }\r\n}\r\n\r\ninterface FrontPageConfigs {\r\n\r\n    cardSizeX: number,\r\n    cardSizeY: number,\r\n\r\n    cardHelixRadius: number,\r\n    cardHelixZGap: number,\r\n    cardHelixRotateRadGap: number,\r\n\r\n    cardHelixFocusRadius: number,\r\n    cardHelixFocusRotateRadGap: number,\r\n\r\n    cardMomentum: number,\r\n    cardAttraction: number,\r\n    cardRelVelocity: number\r\n\r\n}\r\n\r\nclass FrontPageManager {\r\n    container: HTMLElement\r\n    renderer: THREE.WebGLRenderer\r\n    // controls: OrbitControls\r\n    scene: THREE.Scene\r\n    stats: Stats\r\n    // controls: OrbitControls\r\n\r\n    // cursor position\r\n    mousePosX: number\r\n    mousePosY: number\r\n    pointer: THREE.Vector2\r\n\r\n    // camera\r\n    camera: THREE.PerspectiveCamera\r\n    cameraBasicLookAt: THREE.Vector3\r\n    cameraBasicPosition: THREE.Vector3\r\n    // cameraLootAtController: DampingVector3Controller\r\n    // cameraTargetPosition: THREE.Vector3\r\n    // cameraWithMouseRotateFactor: number\r\n    // cameraWithMouseMoveFactor: number\r\n\r\n    // intersections\r\n    raycaster: THREE.Raycaster\r\n    intersectObjs: Array<THREE.Object3D>\r\n\r\n    // css\r\n    cssScene: THREE.Scene\r\n    cssRenderer: CustomCSS3DRenderer | undefined\r\n\r\n    // loading manager\r\n    loadingManager: THREE.LoadingManager\r\n\r\n    // card controllers\r\n    cards: Array<Card>\r\n    cardGroup: THREE.Group\r\n    configs: FrontPageConfigs\r\n    cardGroupStatus: number\r\n\r\n    pickedCardIndex: number\r\n    onCardFocus: ((index: number) => any) | undefined\r\n    onCardRouteJump: ((url: string) => any) | undefined\r\n\r\n    // camera animations\r\n    cameraPositionController: DampingVector3Controller\r\n    cameraWithMouseRotateFactor: number\r\n\r\n    // scene pausing\r\n    isScenePaused: boolean\r\n\r\n    constructor(_container: HTMLElement,\r\n        cardInfos: Array<CardInfo>,\r\n        onLoad?: () => void,\r\n        onProgress?: (url: string, loaded: number, total: number) => void,\r\n        onError?: (url: string) => void,\r\n        onCardFocus?: (index: number) => any,\r\n        onCardRouteJump?: (url: string) => any,\r\n        configs: FrontPageConfigs = {\r\n            cardSizeX: 70,\r\n            cardSizeY: 50,\r\n            cardHelixRadius: 80,\r\n            cardHelixZGap: 10,\r\n            cardHelixRotateRadGap: 0.3,\r\n            cardHelixFocusRadius: 100,\r\n            cardHelixFocusRotateRadGap: 0.5,\r\n            cardMomentum: 0.85,\r\n            cardAttraction: 0.36,\r\n            cardRelVelocity: 0.16,\r\n        },\r\n        ) {\r\n        const self = this\r\n\r\n        // *********** basic settings ***********\r\n        this.container = _container\r\n        this.camera = new THREE.PerspectiveCamera( 45, window.innerWidth / window.innerHeight, 1, 5000 )\r\n        this.renderer = new THREE.WebGLRenderer( {alpha: true} )\r\n        this.renderer.setClearColor( 0xffffff )\r\n        this.renderer.setPixelRatio( window.devicePixelRatio )\r\n        this.renderer.setSize(window.innerWidth, window.innerHeight)\r\n        this.renderer.domElement.style.position = 'absolute'\r\n        this.renderer.domElement.style.top = '0px'\r\n        this.renderer.domElement.style.left = '0px'\r\n        this.container.appendChild( this.renderer.domElement )\r\n        this.renderer.shadowMap.enabled = true\r\n        this.renderer.shadowMap.type = THREE.PCFSoftShadowMap\r\n        // TODO: (debug stats)\r\n        this.stats = new Stats()\r\n        this.stats.domElement.style.zIndex = '100'\r\n        this.container.appendChild( this.stats.domElement )\r\n        // this.controls = new OrbitControls(this.camera, this.container)\r\n        this.cameraBasicLookAt = new THREE.Vector3(0)\r\n        this.cameraBasicPosition = new THREE.Vector3(0, 300, 350)\r\n        this.camera.position.copy(this.cameraBasicPosition)\r\n        this.camera.lookAt(this.cameraBasicLookAt)\r\n\r\n        this.scene = new THREE.Scene()\r\n        this.cssScene = new THREE.Scene()\r\n\r\n        // loading manager\r\n        this.loadingManager = new THREE.LoadingManager(() => {\r\n            if (onLoad) {\r\n                onLoad()\r\n                this.stackCard()\r\n            }\r\n        }, (url: string, loaded: number, total: number) => {\r\n            if (onProgress) {\r\n                onProgress(url, loaded, total)\r\n            }\r\n        }, (url) => {\r\n            if (onError) {\r\n                onError(url)\r\n            }\r\n        })\r\n        \r\n        // light\r\n        const light = new THREE.DirectionalLight(0xffffff)\r\n        light.position.set(0, 500, 0)\r\n        light.castShadow = true\r\n        light.shadow.camera.left = -150\r\n        light.shadow.camera.right = 150\r\n        light.shadow.camera.bottom = -150\r\n        light.shadow.camera.top = 150\r\n        light.shadow.camera.near = 10\r\n        light.shadow.camera.far = 511\r\n        light.shadow.mapSize.width = 1024\r\n        light.shadow.mapSize.height = 1024\r\n        light.shadow.bias = -0.0001\r\n        this.scene.add(light)\r\n        // this.scene.add( new THREE.CameraHelper( light.shadow.camera ) )\r\n\r\n\r\n        // *********** floor ***********\r\n        const floorGeometry = new THREE.PlaneGeometry( 1000, 1000 )\r\n        const floor = new THREE.Mesh( floorGeometry,\r\n            new THREE.MeshPhongMaterial({\r\n                color: 0x606060\r\n            })\r\n        )\r\n        floor.castShadow = false\r\n        floor.receiveShadow = true\r\n        floor.position.y = -10;\r\n        // floor.position.z -= 500;\r\n        floor.rotation.x = Math.PI * - 0.5;\r\n        this.scene.add( floor );\r\n        \r\n        // *********** cards ***********\r\n        this.intersectObjs = []\r\n        this.cardGroup = new THREE.Group()\r\n        this.cards = []\r\n        this.configs = configs\r\n        const cardGeom = new THREE.PlaneGeometry(configs.cardSizeX, configs.cardSizeY)\r\n        cardInfos.forEach((cardInfo, cardIndex) => {\r\n            let tx = new THREE.TextureLoader(this.loadingManager).load(cardInfo.imgUrl)\r\n            const card =  new Card(\r\n                    new THREE.Mesh(cardGeom, new THREE.MeshBasicMaterial(\r\n                        {\r\n                            map: tx,\r\n                            side: THREE.DoubleSide\r\n                        }\r\n                    )),\r\n                    cardInfo,\r\n                    new CardController(\r\n                        cardIndex, 200, cardIndex * 50 + 250,\r\n                        this.configs.cardMomentum,\r\n                        this.configs.cardAttraction,\r\n                        this.configs.cardRelVelocity\r\n                    )\r\n                )\r\n            card.mesh.castShadow = true\r\n            card.mesh.receiveShadow = true\r\n            this.cards.push(card)\r\n            this.cardGroup.add(card.mesh)\r\n            this.intersectObjs.push(card.mesh)\r\n        })\r\n        this.cardGroup.rotation.x = Math.PI / 2\r\n        this.scene.add(this.cardGroup)\r\n\r\n        this.pickedCardIndex = 0\r\n        this.cardGroupStatus = 0\r\n        this.onCardFocus = onCardFocus\r\n        this.onCardRouteJump = onCardRouteJump\r\n\r\n\r\n        // *********** raycast intersections ***********\r\n        this.raycaster = new THREE.Raycaster()\r\n        \r\n\r\n        // *********** camera animations ***********\r\n        this.cameraPositionController = new DampingVector3Controller(new THREE.Vector3(), 0.9, 0.002)\r\n        this.cameraWithMouseRotateFactor = 35\r\n\r\n        // *********** events ***********\r\n        this.mousePosX = 0\r\n        this.mousePosY = 0\r\n        this.pointer = new THREE.Vector2()\r\n\r\n        // *********** animate ***********\r\n        this.isScenePaused = false\r\n        this.resumeScene()\r\n    }\r\n\r\n    animate = () => {\r\n        if (this.isScenePaused) {\r\n            return\r\n        }\r\n        requestAnimationFrame( this.animate )\r\n        // damping controllers\r\n        // this.updatecornerObject()\r\n        this.updateCamera()\r\n        this.cards.forEach(card => {\r\n            card.updateByController()\r\n        })\r\n        this.render()\r\n        this.stats.update()\r\n        // this.controls.update()\r\n    }\r\n\r\n    render ()\r\n    {\r\n        this.renderer.render(this.scene, this.camera)\r\n        if (this.cssRenderer) {\r\n            this.cssRenderer.render(this.cssScene, this.camera)\r\n        }\r\n    }\r\n\r\n    onWindowResize = () => {\r\n        this.camera.aspect = window.innerWidth / window.innerHeight\r\n        this.camera.updateProjectionMatrix()\r\n        this.renderer.setSize( window.innerWidth, window.innerHeight )\r\n        if (this.cssRenderer) {\r\n            this.cssRenderer.setSize( window.innerWidth, window.innerHeight )\r\n        }\r\n    }\r\n\r\n    onMouseWheel = (e: WheelEvent) => {\r\n        if (this.cardGroupStatus == 2) {\r\n            if (e.deltaY > 0) {\r\n                if (this.pickedCardIndex < this.cards.length - 1) {\r\n                    this.pickedCardIndex ++\r\n                }\r\n            } else {\r\n                if (this.pickedCardIndex > 0) {\r\n                    this.pickedCardIndex --\r\n                }\r\n            }\r\n            this.pickCard(this.pickedCardIndex)\r\n        }\r\n    }\r\n    \r\n    onMouseMove = (e: MouseEvent) => {\r\n        this.mousePosX = e.clientX\r\n        this.mousePosY = e.clientY\r\n        this.pointer.x = ( e.clientX / window.innerWidth ) * 2 - 1;\r\n\t\tthis.pointer.y = - ( e.clientY / window.innerHeight ) * 2 + 1;\r\n\r\n        // this.raycaster.setFromCamera( this.pointer, this.camera )\r\n        // const intersects = this.raycaster.intersectObjects( this.intersectObjs, false )\r\n        // if (intersects.length == 1) {\r\n        //     console.log('intersected:', intersects[0])\r\n        // }\r\n    }\r\n\r\n    onClick = (e: MouseEvent) => {\r\n        this.raycaster.setFromCamera( this.pointer, this.camera )\r\n        const intersects = this.raycaster.intersectObjects( this.intersectObjs, false )\r\n        if (intersects.length >= 1) {\r\n            if (this.cardGroupStatus == 0) {\r\n                this.cardGroupStatus = 1\r\n                this.fanCard()\r\n            } else {\r\n                // get index of clicked card\r\n                var clickedCardIndex = 0\r\n                for (; clickedCardIndex < this.cards.length; clickedCardIndex++) {\r\n                    if (intersects[0].object == this.cards[clickedCardIndex].mesh) {\r\n                        break\r\n                    }\r\n                }\r\n                if (this.cardGroupStatus == 1) {\r\n                    this.cardGroupStatus = 2\r\n                    this.pickCard(clickedCardIndex)\r\n                    this.pickedCardIndex = clickedCardIndex\r\n                } else if (this.cardGroupStatus == 2) {\r\n                    if (this.pickedCardIndex == clickedCardIndex) {\r\n                        // focus on card (jump to related url later)\r\n                        this.cardGroupStatus = 3\r\n                        this.focusOnCard(this.pickedCardIndex)\r\n                    } else {\r\n                        this.pickCard(clickedCardIndex)\r\n                        this.pickedCardIndex = clickedCardIndex\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            if (this.cardGroupStatus == 3) {\r\n                this.cardGroupStatus = 2\r\n                this.pickCard(this.pickedCardIndex)\r\n            } else  if (this.cardGroupStatus == 2) {\r\n                this.cardGroupStatus = 1\r\n                this.fanCard()\r\n            } else if (this.cardGroupStatus == 1) {\r\n                this.cardGroupStatus = 0\r\n                this.stackCard()\r\n            }\r\n        }\r\n    }\r\n\r\n    stackCard () {\r\n        this.cards.forEach((card, index) => {\r\n            card.controller.angleTarget = 0\r\n            card.controller.radiusTarget = 0\r\n            card.controller.zTarget = index * 2\r\n        })\r\n    }\r\n\r\n    pickCard (index: number) {\r\n        /**\r\n         * focus on a single card by pulling it out a little bit\r\n         */\r\n        if (index < 0 || index > this.cards.length - 1) {\r\n            return\r\n        }\r\n        for (let i = index - 1; i >= 0; i--) {\r\n            let card = this.cards[i]\r\n            card.controller.angleTarget = \r\n                (i - index) * this.configs.cardHelixRotateRadGap\r\n                - (this.configs.cardHelixFocusRotateRadGap - this.configs.cardHelixRotateRadGap)\r\n            card.controller.radiusTarget = this.configs.cardHelixRadius\r\n            card.controller.zTarget = this.configs.cardHelixZGap * i\r\n        }\r\n        for (let i = index + 1; i < this.cards.length; i++) {\r\n            let card = this.cards[i]\r\n            card.controller.angleTarget = \r\n                (i - index) * this.configs.cardHelixRotateRadGap\r\n                + (this.configs.cardHelixFocusRotateRadGap - this.configs.cardHelixRotateRadGap)\r\n            card.controller.radiusTarget = this.configs.cardHelixRadius\r\n            card.controller.zTarget = this.configs.cardHelixZGap * i\r\n        }\r\n        let card = this.cards[index]\r\n        card.controller.angleTarget = 0\r\n        card.controller.radiusTarget = this.configs.cardHelixFocusRadius\r\n        card.controller.zTarget = this.configs.cardHelixZGap * index\r\n        \r\n        if (this.onCardFocus) {\r\n            this.onCardFocus(index)\r\n        }\r\n    }\r\n\r\n    fanCard () {\r\n        this.cards.forEach((card, index) => {\r\n            card.controller.angleTarget = (index + 0.5 - this.cards.length/2) * this.configs.cardHelixRotateRadGap\r\n            card.controller.radiusTarget = this.configs.cardHelixRadius\r\n            card.controller.zTarget = this.configs.cardHelixZGap * index\r\n        })\r\n    }\r\n\r\n    focusOnCard (focusIndex: number) {\r\n        this.cards.forEach((card, index) => {\r\n            if (focusIndex == index) {\r\n                card.controller.radiusTarget = 0\r\n                card.controller.zTarget = 10\r\n                card.controller.afterStaticEvent = () => {\r\n                    // TODO routing!!!!!!!!!!\r\n                    this.pauseScene()\r\n                    console.log('url jumps to: ', this.cards[focusIndex].info.url)\r\n                }\r\n            } else {\r\n                card.controller.radiusTarget = 500\r\n                card.controller.afterStaticEvent = undefined\r\n            }\r\n        })\r\n    }\r\n\r\n    updateCamera() {\r\n        const dampPos = (new THREE.Vector3(\r\n            this.pointer.x * this.cameraWithMouseRotateFactor,\r\n            this.pointer.y * this.cameraWithMouseRotateFactor,\r\n            -this.pointer.y * this.cameraWithMouseRotateFactor,\r\n        ))\r\n\r\n        this.cameraPositionController.update(dampPos)\r\n        dampPos.copy(this.cameraPositionController.currentVec3).add(this.cameraBasicPosition)\r\n        // this.cameraLootAtController.update(this.cameraTargetPosition)\r\n        this.camera.position.copy(dampPos)\r\n        this.camera.lookAt(this.cameraBasicLookAt)\r\n        // var vel = this.cameraLootAtController.velocity\r\n        // this.camera.position.x = vel.x * this.cameraWithMouseMoveFactor\r\n        // this.camera.position.y = 200 - vel.y * this.cameraWithMouseMoveFactor\r\n    }\r\n\r\n    pauseScene () {\r\n        this.isScenePaused = true\r\n        const self = this\r\n        window.removeEventListener( 'resize', self.onWindowResize )\r\n        window.removeEventListener( 'wheel', self.onMouseWheel )\r\n        window.removeEventListener('mousemove', self.onMouseMove )\r\n        window.removeEventListener( 'click', self.onClick )\r\n    }\r\n    resumeScene () {\r\n        this.isScenePaused = false\r\n        this.animate()\r\n        const self = this\r\n        window.addEventListener( 'resize', self.onWindowResize )\r\n        window.addEventListener( 'wheel', self.onMouseWheel )\r\n        window.addEventListener('mousemove', self.onMouseMove )\r\n        window.addEventListener( 'click', self.onClick )\r\n    }\r\n\r\n}\r\n\r\n\r\nexport {\r\n    CardInfo,\r\n    CardController,\r\n    FrontPageManager\r\n}","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ThreeFrontpageTest2.vue?vue&type=style&index=0&id=3bcc601a&scoped=true&lang=css&\"","var uncurryThis = require('../internals/function-uncurry-this');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\nvar toString = require('../internals/to-string');\n\nvar quot = /\"/g;\nvar replace = uncurryThis(''.replace);\n\n// `CreateHTML` abstract operation\n// https://tc39.es/ecma262/#sec-createhtml\nmodule.exports = function (string, tag, attribute, value) {\n  var S = toString(requireObjectCoercible(string));\n  var p1 = '<' + tag;\n  if (attribute !== '') p1 += ' ' + attribute + '=\"' + replace(toString(value), quot, '&quot;') + '\"';\n  return p1 + '>' + S + '</' + tag + '>';\n};\n","var fails = require('../internals/fails');\n\n// check the existence of a method, lowercase\n// of a tag and escaping quotes in arguments\nmodule.exports = function (METHOD_NAME) {\n  return fails(function () {\n    var test = ''[METHOD_NAME]('\"');\n    return test !== test.toLowerCase() || test.split('\"').length > 3;\n  });\n};\n","// `Math.sign` method implementation\n// https://tc39.es/ecma262/#sec-math.sign\n// eslint-disable-next-line es/no-math-sign -- safe\nmodule.exports = Math.sign || function sign(x) {\n  // eslint-disable-next-line no-self-compare -- NaN check\n  return (x = +x) == 0 || x != x ? x : x < 0 ? -1 : 1;\n};\n"],"sourceRoot":""}