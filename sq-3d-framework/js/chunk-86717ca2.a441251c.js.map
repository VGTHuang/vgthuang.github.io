{"version":3,"sources":["webpack:///./node_modules/core-js/internals/engine-ff-version.js","webpack:///./src/scripts/ThreeRealisticRefraction sync ^\\.\\/.*\\/F\\.glsl$","webpack:///./node_modules/core-js/internals/string-repeat.js","webpack:///./src/views/ThreeFrontpageTest.vue?b037","webpack:///./node_modules/core-js/modules/es.string.repeat.js","webpack:///./src/views/ThreeFrontpageTest.vue?8e9f","webpack:///./node_modules/three/examples/jsm/objects/Reflector.js","webpack:///./src/scripts/Three/SQWater.ts","webpack:///./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","webpack:///./src/scripts/Three/Carousel.ts","webpack:///./node_modules/three/examples/jsm/loaders/TDSLoader.js","webpack:///./src/scripts/Three/FrontPage.ts","webpack:///./src/views/ThreeFrontpageTest.vue","webpack:///./src/views/ThreeFrontpageTest.vue?e700","webpack:///./src/views/ThreeFrontpageTest.vue?5b81","webpack:///./node_modules/core-js/modules/es.array.sort.js","webpack:///./node_modules/core-js/internals/engine-webkit-version.js","webpack:///./src/scripts/ThreeRealisticRefraction sync ^\\.\\/.*\\/V\\.glsl$","webpack:///./node_modules/three/examples/jsm/geometries/RoundedBoxGeometry.js","webpack:///./src/scripts/ThreeRealisticRefraction/ShaderLoader.ts","webpack:///./src/scripts/ThreeRealisticRefraction/ThreeRealisticRefraction.ts","webpack:///./node_modules/regenerator-runtime/runtime.js","webpack:///./node_modules/core-js/modules/es.array.splice.js","webpack:///./node_modules/core-js/internals/array-sort.js","webpack:///./node_modules/core-js/modules/es.object.keys.js","webpack:///./src/scripts/ThreeRealisticRefraction/GlassFrontShader/V.glsl","webpack:///./node_modules/core-js/modules/es.array.map.js","webpack:///./node_modules/core-js/internals/engine-is-ie-or-edge.js","webpack:///./src/scripts/ThreeRealisticRefraction/GlassFrontShader/F.glsl"],"names":["userAgent","firefox","match","module","exports","map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","global","toIntegerOrInfinity","toString","requireObjectCoercible","RangeError","count","str","this","result","n","Infinity","$","repeat","target","proto","render","_vm","_h","$createElement","_c","_self","ref","attrs","staticClass","class","loadingStat","isLoaded","noLoadingStat","style","width","loaded","total","_v","_s","Math","round","on","onGlassClick","_m","staticRenderFns","geometry","options","super","type","scope","color","undefined","textureWidth","textureHeight","clipBias","shader","ReflectorShader","reflectorPlane","normal","reflectorWorldPosition","cameraWorldPosition","rotationMatrix","lookAtPosition","clipPlane","view","q","textureMatrix","virtualCamera","renderTarget","material","uniforms","clone","fragmentShader","vertexShader","value","texture","onBeforeRender","renderer","scene","camera","setFromMatrixPosition","matrixWorld","extractRotation","set","applyMatrix4","subVectors","dot","reflect","negate","add","position","copy","up","lookAt","far","updateMatrixWorld","projectionMatrix","multiply","matrixWorldInverse","setFromNormalAndCoplanarPoint","x","y","z","constant","sign","elements","w","multiplyScalar","encoding","outputEncoding","visible","currentRenderTarget","getRenderTarget","currentXrEnabled","xr","enabled","currentShadowAutoUpdate","shadowMap","autoUpdate","setRenderTarget","state","buffers","depth","setMask","autoClear","clear","viewport","dispose","prototype","isReflector","reflectionScene","flowDirection","flowSpeed","reflectivity","scale","WaterShader","textureLoader","normalMap0","load","normalMap1","cycle","halfCycle","clock","reflector","updateTextureMatrix","updateFlow","delta","getDelta","config","matrixAutoUpdate","merge","transparent","fog","wrapS","wrapT","group","asyncGeneratorStep","gen","reject","_next","_throw","key","arg","info","error","done","Promise","then","_asyncToGenerator","fn","self","args","arguments","apply","err","index","mesh","textureList","isPushingTexture","newTexture","length","push","splice","recPushTexture","vTextureMix","vTextures","tweenNumber","v","numOfVisiblePics","isRotating","rotateNode","currentCenter","planes","planeWidth","planeHeight","planeGap","preloadImgs","maxPreloadImgCount","carouselArrayRadius","carouselArrayAngle","atan","vs","fs","i","tempUniforms","vColor","tempPlane","offset","rotation","sin","cos","forEach","plane","__imgSrcToTex","ceil","random","pushNewTexture","raycaster","getImgSrcFunc","imgMeshes","intersects","intersectObjects","intersectObj","object","intersectIndex","indexOf","src","step","floor","moveLeft","moveRight","moveStep","sort","v1","v2","rightmostImg","tempRotationPosition","leftmostImg","imgSrc","imageLoader","setCrossOrigin","tempImageElement","needsUpdate","k","imgTex","canRemoveImg","planeIndex","manager","debug","materials","meshes","url","onLoad","onProgress","onError","path","extractUrlBase","loader","setPath","setResponseType","setRequestHeader","requestHeader","setWithCredentials","withCredentials","data","parse","console","itemError","arraybuffer","readFile","DataView","chunk","Chunk","debugMessage","MLIBMAGIC","CMAGIC","M3DMAGIC","next","readChunk","M3D_VERSION","version","readDWord","MDATA","readMeshData","hexId","MESH_VERSION","MASTER_SCALE","readFloat","NAMED_OBJECT","readNamedObject","MAT_ENTRY","readMaterialEntry","name","readString","N_TRI_OBJECT","readMesh","MAT_NAME","MAT_WIRE","wireframe","MAT_WIRE_SIZE","readByte","wireframeLinewidth","MAT_TWO_SIDE","side","MAT_ADDITIVE","blending","MAT_DIFFUSE","readColor","MAT_SPECULAR","specular","MAT_AMBIENT","MAT_SHININESS","shininess","readPercentage","MAT_TRANSPARENCY","transparency","opacity","MAT_TEXMAP","readMap","MAT_BUMPMAP","bumpMap","MAT_OPACMAP","alphaMap","MAT_SPECMAP","specularMap","POINT_ARRAY","points","readWord","vertices","setAttribute","FACE_ARRAY","readFaceArray","TEX_VERTS","texels","uvs","MESH_MATRIX","values","matrix","transpose","inverse","invert","decompose","quaternion","computeVertexNormals","faces","setIndex","materialIndex","start","endOfChunk","subchunk","MSH_MAT_GROUP","readMaterialGroup","addGroup","Array","isArray","resourcePath","crossOrigin","MAT_MAPNAME","MAT_MAP_UOFFSET","MAT_MAP_VOFFSET","MAT_MAP_USCALE","MAT_MAP_VSCALE","numFaces","subChunk","COLOR_24","LIN_COLOR_24","r","g","b","setRGB","COLOR_F","LIN_COLOR_F","INT_PERCENTAGE","readShort","FLOAT_PERCENTAGE","message","log","Function","size","end","byteLength","getUint8","getFloat32","getInt32","getInt16","getUint32","getUint16","s","c","String","fromCharCode","_container","requestAnimationFrame","animate","updatecornerObject","updateCamera","updateCursorLight","stats","update","cameraZPosition","container","window","innerWidth","innerHeight","alpha","setClearColor","setPixelRatio","devicePixelRatio","setSize","domElement","top","left","appendChild","zIndex","cssScene","cardInsideScene","loadingManager","urls","textureCube","mapping","environment","light","intensity","refractionManager","glassMesh1","RoundedBoxGeometry","glassMesh1InteractAgent","addRefractionMesh","glassMesh1Controller","renderPass1","RenderPass","renderPass2","clearDepth","composer","EffectComposer","offsetWidth","offsetHeight","addPass","renderTarget1","stencilBuffer","renderTarget2","tardisCardTop","TardisCard","RECT","addSkybox","contentGroupInTardisCardTop","titleTexture","tardisCardTopTitle","alphaToCoverage","cardMesh","addVisibleObjectGroup","cssAttachObject","tardisCard1","diffuseTexture","normalTexture","specTexture","texs","t","contentGroupInTardisCard1","pgnormal","setResourcePath","obj","traverse","child","normalMap","tardisCardBackground1","normalScale","specularColorMap","specularIntensity","metalness","roughness","clearcoat","tardisCard2","CIRCLE","carousel1","diffuseTexture2","normalTexture2","specTexture2","tardisCardBackground","contentGroupInTardisCard2","tardisCard3","carousel2","diffuseTexture3","normalTexture3","specTexture3","contentGroupInTardisCard3","waterGeometry","water","PI","cameraTargetPosition","cameraWithMouseMoveFactor","cameraWithMouseRotateFactor","cameraPositionController","addEventListener","onMouseMove","cursorLightGroup","cursorLight","decay","distance","cursorLightController","intersectTardisCardObjs","intersectGlassObjs","glassSelected","glassIsRotating","mousePosX","mousePosY","pointer","onWindowResize","onClick","cssRenderer","aspect","updateProjectionMatrix","clientX","clientY","setFromCamera","parent","rotateObj","tweenEuler","val","refractionMaterialUniforms","refObj","tweenThreeVector3","updatedVec","clickToRotate","carouselIndex","clickToChangeTex","posX","posY","ray","unproject","targetPos","getRaycastPos","relX","relY","dampPos","vel","velocity","isNaN","camPosZ","targetPosVec","sub","newz","htmlContainer","htmlElem","CustomCSS3DRenderer","extend","fpm","mounted","$refs","HTMLElement","setTimeout","_","glassCSSObj","registerCSSCoordinator","setFollowObject","methods","alert","component","uncurryThis","aCallable","toObject","lengthOfArrayLike","fails","internalSort","arrayMethodIsStrict","FF","IE_OR_EDGE","V8","WEBKIT","test","un$Sort","FAILS_ON_UNDEFINED","FAILS_ON_NULL","STRICT_METHOD","STABLE_SORT","chr","a","charAt","FORCED","getSortCompare","comparefn","forced","array","itemsLength","items","arrayLength","webkit","_tempNormal","getUv","faceDirVector","uvAxis","projectionAxis","radius","sideLength","totArcLength","centerLength","max","halfArc","normalize","arcUvRatio","arcAngleRatio","angleTo","lenUv","height","segments","min","geometry2","toNonIndexed","attributes","uv","box","divideScalar","subScalar","positions","normals","faceTris","halfSegmentSize","j","fromArray","loadShader","shaderName","fragShader","controls","rm","suResolution","suBackground","suImage","suDepth","backColor","absorbColor","suRefractionFactor","suOpacity","originalMaterial","glassFrontVS","glassFrontFS","refractionMaterial","backgroundScene","backDepthTextureSize","frontScene","backdepthTexture","backRenderTarget","depthBuffer","depthTexture","background","refractionObjectList","lib","parameters","setDefaultBacksideMaterial","image","refractionFactor","opacityFactor","_backColor","initScene","antialias","OrbitControls","floorTexture","floorMaterial","floorGeometry","glassMesh2","glassMesh3","ballMesh","runtime","Op","hasOwn","hasOwnProperty","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","defineProperty","enumerable","configurable","writable","wrap","innerFn","outerFn","tryLocsList","protoGenerator","Generator","generator","create","context","Context","_invoke","makeInvokeMethod","tryCatch","call","GenStateSuspendedStart","GenStateSuspendedYield","GenStateExecuting","GenStateCompleted","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","Gp","defineIteratorMethods","method","AsyncIterator","PromiseImpl","invoke","record","__await","unwrapped","previousPromise","enqueue","callInvokeWithMethodAndArg","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","iterable","iteratorMethod","displayName","isGeneratorFunction","genFun","ctor","constructor","mark","setPrototypeOf","__proto__","awrap","async","iter","reverse","pop","skipTempReset","prev","slice","stop","rootEntry","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","regeneratorRuntime","accidentalStrictMode","globalThis","toAbsoluteIndex","arraySpeciesCreate","createProperty","arrayMethodHasSpeciesSupport","HAS_SPECIES_SUPPORT","MAX_SAFE_INTEGER","MAXIMUM_ALLOWED_LENGTH_EXCEEDED","deleteCount","insertCount","actualDeleteCount","A","from","to","O","len","actualStart","argumentsLength","arraySlice","mergeSort","middle","insertionSort","element","right","llength","rlength","lindex","rindex","nativeKeys","FAILS_ON_PRIMITIVES","stat","it","$map","callbackfn","UA"],"mappings":"qGAAA,IAAIA,EAAY,EAAQ,QAEpBC,EAAUD,EAAUE,MAAM,mBAE9BC,EAAOC,UAAYH,IAAYA,EAAQ,I,uBCJvC,IAAII,EAAM,CACT,4BAA6B,QAI9B,SAASC,EAAeC,GACvB,IAAIC,EAAKC,EAAsBF,GAC/B,OAAOG,EAAoBF,GAE5B,SAASC,EAAsBF,GAC9B,IAAIG,EAAoBC,EAAEN,EAAKE,GAAM,CACpC,IAAIK,EAAI,IAAIC,MAAM,uBAAyBN,EAAM,KAEjD,MADAK,EAAEE,KAAO,mBACHF,EAEP,OAAOP,EAAIE,GAEZD,EAAeS,KAAO,WACrB,OAAOC,OAAOD,KAAKV,IAEpBC,EAAeW,QAAUR,EACzBN,EAAOC,QAAUE,EACjBA,EAAeE,GAAK,Q,kCCrBpB,IAAIU,EAAS,EAAQ,QACjBC,EAAsB,EAAQ,QAC9BC,EAAW,EAAQ,QACnBC,EAAyB,EAAQ,QAEjCC,EAAaJ,EAAOI,WAIxBnB,EAAOC,QAAU,SAAgBmB,GAC/B,IAAIC,EAAMJ,EAASC,EAAuBI,OACtCC,EAAS,GACTC,EAAIR,EAAoBI,GAC5B,GAAII,EAAI,GAAKA,GAAKC,IAAU,MAAMN,EAAW,+BAC7C,KAAMK,EAAI,GAAIA,KAAO,KAAOH,GAAOA,GAAc,EAAJG,IAAOD,GAAUF,GAC9D,OAAOE,I,oCChBT,W,uBCAA,IAAIG,EAAI,EAAQ,QACZC,EAAS,EAAQ,QAIrBD,EAAE,CAAEE,OAAQ,SAAUC,OAAO,GAAQ,CACnCF,OAAQA,K,2CCNV,IAAIG,EAAS,WAAa,IAAIC,EAAIT,KAASU,EAAGD,EAAIE,eAAmBC,EAAGH,EAAII,MAAMD,IAAIF,EAAG,OAAOE,EAAG,MAAM,CAACA,EAAG,MAAM,CAACE,IAAI,mBAAmBC,MAAM,CAAC,GAAK,qBAAqB,CAACH,EAAG,MAAM,CAACI,YAAY,oBAAoBC,MAAM,CACjN,4BAA6BR,EAAIS,YAAYC,SAC7C,0BAA2BV,EAAIS,YAAYE,gBAC5C,CAACR,EAAG,MAAM,CAACI,YAAY,aAAa,CAACJ,EAAG,MAAM,CAACI,YAAY,aAAaK,MAAM,CACrEC,MAAO,IAAMb,EAAIS,YAAYK,OAASd,EAAIS,YAAYM,MAAQ,OAC7DZ,EAAG,MAAM,CAACI,YAAY,aAAa,CAACP,EAAIgB,GAAGhB,EAAIiB,GAAGC,KAAKC,MAAM,IAAMnB,EAAIS,YAAYK,OAASd,EAAIS,YAAYM,QAAQ,cAAcZ,EAAG,MAAM,CAACE,IAAI,kBAAkBC,MAAM,CAAC,GAAK,oBAAoB,CAACH,EAAG,MAAM,CAACE,IAAI,aAAaC,MAAM,CAAC,GAAK,eAAe,CAACH,EAAG,IAAI,CAACH,EAAIgB,GAAG,gJAAgJb,EAAG,MAAM,CAACE,IAAI,cAAcC,MAAM,CAAC,GAAK,eAAec,GAAG,CAAC,MAAQpB,EAAIqB,eAAe,CAACrB,EAAIsB,GAAG,UACxgBC,EAAkB,CAAC,WAAa,IAAIvB,EAAIT,KAASU,EAAGD,EAAIE,eAAmBC,EAAGH,EAAII,MAAMD,IAAIF,EAAG,OAAOE,EAAG,MAAM,CAACI,YAAY,oBAAoB,CAACJ,EAAG,MAAM,CAACI,YAAY,0BAA0B,CAACP,EAAIgB,GAAG,uC,kKCO7M,MAAM,UAAkB,OAEvB,YAAaQ,EAAUC,EAAU,IAEhCC,MAAOF,GAEPjC,KAAKoC,KAAO,YAEZ,MAAMC,EAAQrC,KAERsC,OAA4BC,IAAlBL,EAAQI,MAAwB,IAAI,OAAOJ,EAAQI,OAAU,IAAI,OAAO,SAClFE,EAAeN,EAAQM,cAAgB,IACvCC,EAAgBP,EAAQO,eAAiB,IACzCC,EAAWR,EAAQQ,UAAY,EAC/BC,EAAST,EAAQS,QAAU,EAAUC,gBAIrCC,EAAiB,IAAI,QACrBC,EAAS,IAAI,QACbC,EAAyB,IAAI,QAC7BC,EAAsB,IAAI,QAC1BC,EAAiB,IAAI,OACrBC,EAAiB,IAAI,QAAS,EAAG,GAAK,GACtCC,EAAY,IAAI,QAEhBC,EAAO,IAAI,QACX9C,EAAS,IAAI,QACb+C,EAAI,IAAI,QAERC,EAAgB,IAAI,OACpBC,EAAgB,IAAI,QAEpBC,EAAe,IAAI,QAAmBhB,EAAcC,GAEpDgB,EAAW,IAAI,QAAgB,CACpCC,SAAU,QAAcC,MAAOhB,EAAOe,UACtCE,eAAgBjB,EAAOiB,eACvBC,aAAclB,EAAOkB,eAGtBJ,EAASC,SAAU,YAAaI,MAAQN,EAAaO,QACrDN,EAASC,SAAU,SAAUI,MAAQxB,EACrCmB,EAASC,SAAU,iBAAkBI,MAAQR,EAE7CtD,KAAKyD,SAAWA,EAEhBzD,KAAKgE,eAAiB,SAAWC,EAAUC,EAAOC,GAcjD,GAZApB,EAAuBqB,sBAAuB/B,EAAMgC,aACpDrB,EAAoBoB,sBAAuBD,EAAOE,aAElDpB,EAAeqB,gBAAiBjC,EAAMgC,aAEtCvB,EAAOyB,IAAK,EAAG,EAAG,GAClBzB,EAAO0B,aAAcvB,GAErBG,EAAKqB,WAAY1B,EAAwBC,GAIpCI,EAAKsB,IAAK5B,GAAW,EAAI,OAE9BM,EAAKuB,QAAS7B,GAAS8B,SACvBxB,EAAKyB,IAAK9B,GAEVE,EAAeqB,gBAAiBH,EAAOE,aAEvCnB,EAAeqB,IAAK,EAAG,GAAK,GAC5BrB,EAAesB,aAAcvB,GAC7BC,EAAe2B,IAAK7B,GAEpB1C,EAAOmE,WAAY1B,EAAwBG,GAC3C5C,EAAOqE,QAAS7B,GAAS8B,SACzBtE,EAAOuE,IAAK9B,GAEZQ,EAAcuB,SAASC,KAAM3B,GAC7BG,EAAcyB,GAAGT,IAAK,EAAG,EAAG,GAC5BhB,EAAcyB,GAAGR,aAAcvB,GAC/BM,EAAcyB,GAAGL,QAAS7B,GAC1BS,EAAc0B,OAAQ3E,GAEtBiD,EAAc2B,IAAMf,EAAOe,IAE3B3B,EAAc4B,oBACd5B,EAAc6B,iBAAiBL,KAAMZ,EAAOiB,kBAG5C9B,EAAciB,IACb,GAAK,EAAK,EAAK,GACf,EAAK,GAAK,EAAK,GACf,EAAK,EAAK,GAAK,GACf,EAAK,EAAK,EAAK,GAEhBjB,EAAc+B,SAAU9B,EAAc6B,kBACtC9B,EAAc+B,SAAU9B,EAAc+B,oBACtChC,EAAc+B,SAAUhD,EAAMgC,aAI9BxB,EAAe0C,8BAA+BzC,EAAQC,GACtDF,EAAe2B,aAAcjB,EAAc+B,oBAE3CnC,EAAUoB,IAAK1B,EAAeC,OAAO0C,EAAG3C,EAAeC,OAAO2C,EAAG5C,EAAeC,OAAO4C,EAAG7C,EAAe8C,UAEzG,MAAMP,EAAmB7B,EAAc6B,iBAEvC/B,EAAEmC,GAAM7D,KAAKiE,KAAMzC,EAAUqC,GAAMJ,EAAiBS,SAAU,IAAQT,EAAiBS,SAAU,GACjGxC,EAAEoC,GAAM9D,KAAKiE,KAAMzC,EAAUsC,GAAML,EAAiBS,SAAU,IAAQT,EAAiBS,SAAU,GACjGxC,EAAEqC,GAAM,EACRrC,EAAEyC,GAAM,EAAMV,EAAiBS,SAAU,KAAST,EAAiBS,SAAU,IAG7E1C,EAAU4C,eAAgB,EAAM5C,EAAUuB,IAAKrB,IAG/C+B,EAAiBS,SAAU,GAAM1C,EAAUqC,EAC3CJ,EAAiBS,SAAU,GAAM1C,EAAUsC,EAC3CL,EAAiBS,SAAU,IAAO1C,EAAUuC,EAAI,EAAMhD,EACtD0C,EAAiBS,SAAU,IAAO1C,EAAU2C,EAI5CtC,EAAaO,QAAQiC,SAAW/B,EAASgC,eAEzC5D,EAAM6D,SAAU,EAEhB,MAAMC,EAAsBlC,EAASmC,kBAE/BC,EAAmBpC,EAASqC,GAAGC,QAC/BC,EAA0BvC,EAASwC,UAAUC,WAEnDzC,EAASqC,GAAGC,SAAU,EACtBtC,EAASwC,UAAUC,YAAa,EAEhCzC,EAAS0C,gBAAiBnD,GAE1BS,EAAS2C,MAAMC,QAAQC,MAAMC,SAAS,IAEV,IAAvB9C,EAAS+C,WAAsB/C,EAASgD,QAC7ChD,EAASzD,OAAQ0D,EAAOX,GAExBU,EAASqC,GAAGC,QAAUF,EACtBpC,EAASwC,UAAUC,WAAaF,EAEhCvC,EAAS0C,gBAAiBR,GAI1B,MAAMe,EAAW/C,EAAO+C,cAEN3E,IAAb2E,GAEJjD,EAAS2C,MAAMM,SAAUA,GAI1B7E,EAAM6D,SAAU,GAIjBlG,KAAKoG,gBAAkB,WAEtB,OAAO5C,GAIRxD,KAAKmH,QAAU,WAEd3D,EAAa2D,UACb9E,EAAMoB,SAAS0D,YAQlB,EAAUC,UAAUC,aAAc,EAElC,EAAUzE,gBAAkB,CAE3Bc,SAAU,CAET,MAAS,CACRI,MAAO,MAGR,SAAY,CACXA,MAAO,MAGR,cAAiB,CAChBA,MAAO,OAKTD,aAAwB,0UAiBxBD,eAA0B,oqB,ICzMrB,E,wDAIL,WAAa3B,EAA0BqF,GAAmD,MAA3BpF,EAA2B,uDAAF,GAAE,uBAEzF,cAAOD,GAFkF,oDAIzF,IAAMI,EAAQ,kBAGRG,QAD4BD,IAAlBL,EAAQI,MAAwB,IAAI,OAAOJ,EAAQI,OAAU,IAAI,OAAO,UACnEJ,EAAQM,cAAgB,KACvCC,EAAgBP,EAAQO,eAAiB,IACzCC,EAAWR,EAAQQ,UAAY,EAC/B6E,EAAgBrF,EAAQqF,eAAiB,IAAI,QAAS,EAAG,GACzDC,EAAYtF,EAAQsF,WAAa,IACjCC,EAAevF,EAAQuF,cAAgB,GACvCC,EAAQxF,EAAQwF,OAAS,EACzB/E,EAASgF,EAETC,EAAgB,IAAI,QAEpBC,EAAa3F,EAAQ2F,YAAcD,EAAcE,KAAM,gCACvDC,EAAa7F,EAAQ6F,YAAcH,EAAcE,KAAM,gCAEvDE,EAAQ,IACRC,EAAoB,GAARD,EACZ1E,EAAgB,IAAI,OACpB4E,EAAQ,IAAI,OACZ,EAAKzE,SAAW,IAAI,QAG1B,IAAM0E,EAAY,IAAI,EAAWlG,EAAU,CAC1CO,aAAcA,EACdC,cAAeA,EACfC,SAAUA,IA2CX,SAAS0F,EAAqBjE,GAE7Bb,EAAciB,IACb,GAAK,EAAK,EAAK,GACf,EAAK,GAAK,EAAK,GACf,EAAK,EAAK,GAAK,GACf,EAAK,EAAK,EAAK,GAGhBjB,EAAc+B,SAAUlB,EAAOiB,kBAC/B9B,EAAc+B,SAAUlB,EAAOmB,oBAC/BhC,EAAc+B,SAAUhD,EAAMgC,aAI/B,SAASgE,IAER,IAAMC,EAAQJ,EAAMK,WACdC,EAASnG,EAAMoB,SAASC,SAAU,UAExC8E,EAAO1E,MAAM0B,GAAKgC,EAAYc,EAC9BE,EAAO1E,MAAM2B,EAAI+C,EAAO1E,MAAM0B,EAAIyC,EAM7BO,EAAO1E,MAAM0B,GAAKwC,GAEtBQ,EAAO1E,MAAM0B,EAAI,EACjBgD,EAAO1E,MAAM2B,EAAIwC,GAENO,EAAO1E,MAAM2B,GAAKuC,IAE7BQ,EAAO1E,MAAM2B,EAAI+C,EAAO1E,MAAM2B,EAAIuC,GA5GqD,OAkCzFG,EAAUM,kBAAmB,EAI7B,EAAKhF,SAAW,IAAI,QAAgB,CACnCC,SAAU,QAAcgF,MAAO,CAC9B,QAAa,OACb/F,EAAOe,WAERG,aAAclB,EAAOkB,aACrBD,eAAgBjB,EAAOiB,eACvB+E,aAAa,EACbC,KAAK,IAGA,EAAKnF,SAASC,SAAU,iBAAkBI,MAAQyD,EAIxDM,EAAWgB,MAAQhB,EAAWiB,MAAQ,QACtCf,EAAWc,MAAQd,EAAWe,MAAQ,QAEtC,EAAKrF,SAASC,SAAU,kBAAmBI,MAAQqE,EAAU/B,kBAAkBrC,QAC/E,EAAKN,SAASC,SAAU,eAAgBI,MAAQ+D,EAChD,EAAKpE,SAASC,SAAU,eAAgBI,MAAQiE,EAIhD,EAAKtE,SAASC,SAAU,gBAAiBI,MAAQ2D,EACjD,EAAKhE,SAASC,SAAU,iBAAkBI,MAAQR,EAIlD,EAAKG,SAASC,SAAU,UAAWI,MAAM0B,EAAI,EAC7C,EAAK/B,SAASC,SAAU,UAAWI,MAAM2B,EAAIwC,EAC7C,EAAKxE,SAASC,SAAU,UAAWI,MAAM4B,EAAIuC,EAC7C,EAAKxE,SAASC,SAAU,UAAWI,MAAMgC,EAAI4B,EA8C7C,EAAK1D,eAAiB,SAAWC,EAAUC,EAAOC,EAAgBlC,EAA0BwB,EAAoBsF,GAE/GX,EAAqBjE,GACrBkE,IAEAhG,EAAM6D,SAAU,EAEhBiC,EAAU9D,YAAYU,KAAM1C,EAAMgC,aAElC8D,EAAUnE,eAAgBC,EAAUqD,EAAiBnD,EAAQlC,EAAUwB,EAAUsF,GAEjF1G,EAAM6D,SAAU,GA/HwE,E,0BAJrE,QA2IhByB,EAAc,CAEnBjE,SAAU,CAET,aAAgB,CACftB,KAAM,IACN0B,MAAO,GAGR,eAAkB,CACjB1B,KAAM,IACN0B,MAAO,MAGR,eAAkB,CACjB1B,KAAM,IACN0B,MAAO,MAGR,YAAe,CACd1B,KAAM,IACN0B,MAAO,MAGR,YAAe,CACd1B,KAAM,IACN0B,MAAO,MAGR,cAAiB,CAChB1B,KAAM,KACN0B,MAAO,MAGR,OAAU,CACT1B,KAAM,KACN0B,MAAO,IAAI,SAGZ,cAAiB,CACP1B,KAAM,KACN0B,MAAO,IAAI,UAKtBD,aAAY,ynBA4BZD,eAAc,ssE,wBChPf,SAASoF,EAAmBC,EAAKzJ,EAAS0J,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAON,EAAII,GAAKC,GAChBxF,EAAQyF,EAAKzF,MACjB,MAAO0F,GAEP,YADAN,EAAOM,GAILD,EAAKE,KACPjK,EAAQsE,GAER4F,QAAQlK,QAAQsE,GAAO6F,KAAKR,EAAOC,GAIxB,SAASQ,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAO9J,KACP+J,EAAOC,UACX,OAAO,IAAIN,SAAQ,SAAUlK,EAAS0J,GACpC,IAAID,EAAMY,EAAGI,MAAMH,EAAMC,GAEzB,SAASZ,EAAMrF,GACbkF,EAAmBC,EAAKzJ,EAAS0J,EAAQC,EAAOC,EAAQ,OAAQtF,GAGlE,SAASsF,EAAOc,GACdlB,EAAmBC,EAAKzJ,EAAS0J,EAAQC,EAAOC,EAAQ,QAASc,GAGnEf,OAAM5G,O,4FCbN,E,WAMF,WAAY4H,EAAeC,EAAmE1G,GAA+B,8NACzH1D,KAAKmK,MAAQA,EACbnK,KAAKoK,KAAOA,EACZpK,KAAK0D,SAAWA,EAChB1D,KAAKoK,KAAOA,EACZpK,KAAKqK,YAAc,GACnBrK,KAAKsK,kBAAmB,E,qDAE5B,SAAeC,GACoB,GAA3BvK,KAAKqK,YAAYG,OACjBxK,KAAKqK,YAAYI,UAAKlI,EAAWgI,IAED,GAA3BvK,KAAKqK,YAAYG,QAItBxK,KAAKqK,YAAYK,OAAO,EAAG1K,KAAKqK,YAAYG,OAAO,GAHnDxK,KAAKqK,YAAYI,KAAKF,IAMG,GAAzBvK,KAAKsK,kBACLtK,KAAK2K,mB,4BAGb,WAAc,WACN3K,KAAKqK,YAAYG,QAAU,EAC3BxK,KAAKsK,kBAAmB,GAG5BtK,KAAKsK,kBAAmB,EACO,GAA3BtK,KAAKqK,YAAYG,SACjBxK,KAAK0D,SAASkH,YAAY9G,MAAQ,EAGlC9D,KAAK0D,SAASmH,UAAU/G,MAAM,GAAK9D,KAAKqK,YAAY,GACpDrK,KAAK0D,SAASmH,UAAU/G,MAAM,GAAK9D,KAAKqK,YAAY,GAEpDrK,KAAKsK,kBAAmB,EACxB,OAAWQ,YAAY,EAAG,GAAG,SAACC,GAC1B,EAAKrH,SAASkH,YAAY9G,MAAQiH,KAEtC,WACI,EAAKrH,SAASmH,UAAU/G,MAAM,GAAK,EAAKuG,YAAY,GACpD,EAAK3G,SAASmH,UAAU/G,MAAM,GAAK,EAAKuG,YAAY,GACpD,EAAK3G,SAASkH,YAAY9G,MAAQ,EAClC,EAAKuG,YAAYK,OAAO,EAAG,GAC3B,EAAKC,mBACN,W,KAKF,EAAb,wDAaI,aAA8D,MAAlDzI,EAAkD,uDAAvB,CAAE8I,iBAAkB,GAAG,uBAE1D,eAF0D,sqBAI1D,EAAKC,YAAa,EAClB,EAAKC,WAAa,IAAI,OACtB,EAAKrG,IAAI,EAAKqG,YACd,EAAKC,cAAgB,EAErB,EAAKH,iBAAmB9I,EAAQ8I,iBAChC,EAAKI,OAAS,GACd,EAAKC,WAAanJ,EAAQmJ,YAAc,GACxC,EAAKC,YAAcpJ,EAAQoJ,aAAe,GAC1C,EAAKC,SAAWrJ,EAAQqJ,UAAY,GACpC,EAAKC,YAAc,GACnB,EAAKC,mBAA6C,EAAxB,EAAKT,iBAC/B,EAAKU,oBAAsBxJ,EAAQwJ,qBAAuB,IAC1D,EAAKC,mBAAqG,EAAhFhK,KAAKiK,MAAM,EAAKP,WAAa,EAAKE,WAAwC,EAA3B,EAAKG,sBAE9E,IADA,MAAe,eAAW,uBAA1B,sBAAKG,EAAL,KAASC,EAAT,KACSC,EAAI,EAAGA,EAAI,EAAKf,iBAAkBe,IAAK,CAC5C,IAAMC,EAAe,CACjBC,OAAQ,CAAE7J,KAAM,IAAK0B,MAAO,IAAI,OAAY,WAC5C+G,UAAW,CAAEzI,KAAM,KAAM0B,MAAO,MAAEvB,OAAWA,IAC7CqI,YAAa,CAAExI,KAAM,IAAK0B,MAAO,IAE/BoI,EAAY,IAAI,OAClB,IAAI,QAA0B,EAAKb,WAAY,EAAKC,YAAa,EAAG,GACpE,IAAI,QAAqB,CACrB5H,SAAWsI,EACXnI,aAAkBgI,EAClBjI,eAAkBkI,KAGtBK,EAAUJ,GAAK,EAAKf,iBAAmB,GAAK,EAChDkB,EAAUE,SAAS3G,GAAM0G,EAAS,EAAKR,mBACvCO,EAAUpH,SAASU,EAAI,EAAKkG,oBAAsB/J,KAAK0K,IAAIF,EAAS,EAAKR,oBACzEO,EAAUpH,SAASY,GAAK,EAAKgG,oBAAsB/J,KAAK2K,IAAIH,EAAS,EAAKR,oBAC1E,EAAKP,OAAOX,KAAK,IAAI,EAAcsB,EAAGG,EAAWF,IACjD,EAAKd,WAAWrG,IAAIqH,GAtCkC,OAwC1D,EAAKd,OAAOmB,SAAQ,SAAAC,GAChB,EAAKC,cAAL,mCAA+C9K,KAAK+K,KAAqB,GAAhB/K,KAAKgL,UAA9D,aAAwFhD,MAAK,SAACoB,GAC1FyB,EAAMI,eAAe7B,SA1C6B,EAblE,uDA4DI,SAAiB8B,EAA4BC,GAAgD,WACrFC,EAAY/M,KAAKoL,OAAOxM,KAAI,SAACmM,GAAD,OAAOA,EAAEX,QACrC4C,EAAaH,EAAUI,iBAAiBF,GAC5C,GAAyB,GAArBC,EAAWxC,OAAa,CACxB,IAAM0C,EAAeF,EAAW,GAAGG,OACnC,GAAID,aAAwB,OAAY,CACpC,IAAIE,EAAiBL,EAAUM,QAAQH,GACnCI,EAAMR,EAAcM,GACxBpN,KAAKyM,cAAca,GAAK3D,MAAK,SAACoB,GAC1B,EAAKK,OAAOgC,GAAgBR,eAAe7B,UArE/D,2BA2EI,SAAc8B,EAA4BC,GACtC,IAAIC,EAAY/M,KAAKoL,OAAOxM,KAAI,SAACmM,GAAD,OAAOA,EAAEX,QACrC4C,EAAaH,EAAUI,iBAAiBF,GAC5C,GAAyB,GAArBC,EAAWxC,OAAa,CACxB,IAAM0C,EAAeF,EAAW,GAAGG,OACnC,GAAID,aAAwB,OAAY,CACpC,IAAIE,EAAiBL,EAAUM,QAAQH,GACnCK,EAAOvN,KAAKoL,OAAOgC,GAAgBjD,MAAQnK,KAAKmL,cAAgBxJ,KAAK6L,MAAMxN,KAAKoL,OAAOZ,OAAS,GAChG+C,EAAO,EACPvN,KAAKyN,UAAUF,EAAMT,GAEhBS,EAAO,GACZvN,KAAK0N,UAAUH,EAAMT,OAvFzC,sBA6FI,WAA+E,WAAtEa,EAAsE,uDAAnD,EAAGb,EAAgD,uCAC3E,IAAI9M,KAAKiL,WAAT,CAGAjL,KAAKiL,YAAa,EAElB,IAN2E,eAMlEc,GACL,EAAKX,OAAOwC,MAAK,SAACC,EAAIC,GAAL,OAAYA,EAAG3D,MAAQ0D,EAAG1D,SAC3C,IAAM4D,EAAe,EAAK3C,OAAO,GACjC2C,EAAa5D,MAAQ,EAAKiB,OAAO,EAAKA,OAAOZ,OAAS,GAAGL,MAAQ,EACjE,IAAIgC,EAAU4B,EAAa5D,OAAS,EAAKa,iBAAmB,GAAK,EACjE+C,EAAa3D,KAAKgC,SAAS3G,GAAM0G,EAAS,EAAKR,mBAC/CoC,EAAa3D,KAAKtF,SAASU,EAAI,EAAKkG,oBAAsB/J,KAAK0K,IAAIF,EAAS,EAAKR,oBACjFoC,EAAa3D,KAAKtF,SAASY,GAAK,EAAKgG,oBAAsB/J,KAAK2K,IAAIH,EAAS,EAAKR,oBAClF,IAAI2B,EAAMR,EAAciB,EAAa5D,OACrC,EAAKsC,cAAca,GAAK3D,MAAK,SAACoB,GAC1BgD,EAAanB,eAAe7B,OAV3BgB,EAAI,EAAGA,EAAI4B,EAAU5B,IAAK,EAA1BA,GAaT,OAAWjB,YAAY,EAAG6C,GAAU,SAAC5C,GACjC,IAAIiD,EAAuB,EAAKrC,oBAAsB,EAAKR,cAAgBJ,GAC3E,EAAKG,WAAWkB,SAAS3G,EAAIuI,KAC9B,WACC,EAAK7C,eAAiBwC,EACtB,EAAK1C,YAAa,IACnB,QAtHX,uBAyHI,WAAgF,WAAtE0C,EAAsE,uDAAnD,EAAGb,EAAgD,uCAC5E,IAAI9M,KAAKiL,WAAT,CAGAjL,KAAKiL,YAAa,EAElB,IAN4E,eAMnEc,GACL,EAAKX,OAAOwC,MAAK,SAACC,EAAIC,GAAL,OAAYD,EAAG1D,MAAQ2D,EAAG3D,SAC3C,IAAM8D,EAAc,EAAK7C,OAAO,GAChC6C,EAAY9D,MAAQ,EAAKiB,OAAO,EAAKA,OAAOZ,OAAS,GAAGL,MAAQ,EAChE,IAAIgC,EAAU8B,EAAY9D,OAAS,EAAKa,iBAAmB,GAAK,EAChEiD,EAAY7D,KAAKgC,SAAS3G,GAAM0G,EAAS,EAAKR,mBAC9CsC,EAAY7D,KAAKtF,SAASU,EAAI,EAAKkG,oBAAsB/J,KAAK0K,IAAIF,EAAS,EAAKR,oBAChFsC,EAAY7D,KAAKtF,SAASY,GAAK,EAAKgG,oBAAsB/J,KAAK2K,IAAIH,EAAS,EAAKR,oBACjF,IAAI2B,EAAMR,EAAcmB,EAAY9D,OACpC,EAAKsC,cAAca,GAAK3D,MAAK,SAACoB,GAC1BkD,EAAYrB,eAAe7B,OAV1BgB,EAAI,EAAGA,EAAI4B,EAAU5B,IAAK,EAA1BA,GAaT,OAAWjB,YAAY,EAAG6C,GAAU,SAAC5C,GACjC,IAAIiD,EAAuB,EAAKrC,oBAAsB,EAAKR,cAAgBJ,GAC3E,EAAKG,WAAWkB,SAAS3G,EAAIuI,KAC9B,WACC,EAAK7C,eAAiBwC,EACtB,EAAK1C,YAAa,IACnB,QAlJX,uEAsJI,WAAoBiD,GAApB,8FACUpE,EAAO9J,KADjB,kBAEW,IAAI0J,SAAuB,SAAClK,EAAS0J,GACpCY,EAAK0B,YAAY0C,IACjB1O,EAAQsK,EAAK0B,YAAY0C,IAE7B,IAAIC,EAAc,IAAI,OACtBA,EAAYC,eAAgB,aAC5BD,EAAYrG,KAAKoG,GAAQ,SAACG,GACtB,IAAItK,EAAU,IAAI,QAAesK,GAKjC,GAJAtK,EAAQuK,aAAc,EACtBxE,EAAK0B,YAAY0C,GAAUnK,EAGvBxE,OAAOD,KAAKwK,EAAK0B,aAAahB,QAAUV,EAAK2B,mBAE7C,IAAK,IAAI8C,KAAKzE,EAAK0B,YAAa,CAG5B,IAFA,IAAIgD,EAAS1E,EAAK0B,YAAY+C,GAC1BE,GAAe,EACVC,EAAa,EAAGA,EAAa5E,EAAKsB,OAAOZ,OAAQkE,IACtD,GAAI5E,EAAKsB,OAAOsD,GAAYhL,SAASmH,UAAU/G,MAAMuJ,QAAQmB,IAAW,EAAG,CACvEC,GAAe,EACf,MAGR,GAAIA,EAAc,CAEdD,EAAOrH,iBACA2C,EAAK0B,YAAY+C,GACxB,OAIZ/O,EAAQuE,UAjCpB,gDAtJJ,+DAA8B,QClD9B,MAAM,UAAkB,OAEvB,YAAa4K,GAEZxM,MAAOwM,GAEP3O,KAAK4O,OAAQ,EAEb5O,KAAK+I,MAAQ,KAEb/I,KAAK6O,UAAY,GACjB7O,KAAK8O,OAAS,GAaf,KAAMC,EAAKC,EAAQC,EAAYC,GAE9B,MAAM7M,EAAQrC,KAERmP,EAAuB,KAAdnP,KAAKmP,KAAgB,OAAYC,eAAgBL,GAAQ/O,KAAKmP,KAEvEE,EAAS,IAAI,OAAYrP,KAAK2O,SACpCU,EAAOC,QAAStP,KAAKmP,MACrBE,EAAOE,gBAAiB,eACxBF,EAAOG,iBAAkBxP,KAAKyP,eAC9BJ,EAAOK,mBAAoB1P,KAAK2P,iBAEhCN,EAAOvH,KAAMiH,GAAK,SAAWa,GAE5B,IAECZ,EAAQ3M,EAAMwN,MAAOD,EAAMT,IAE1B,MAAQhQ,GAEJ+P,EAEJA,EAAS/P,GAIT2Q,QAAQtG,MAAOrK,GAIhBkD,EAAMsM,QAAQoB,UAAWhB,MAIxBE,EAAYC,GAYhB,MAAOc,EAAab,GAEnBnP,KAAK+I,MAAQ,IAAI,OACjB/I,KAAK6O,UAAY,GACjB7O,KAAK8O,OAAS,GAEd9O,KAAKiQ,SAAUD,EAAab,GAE5B,IAAM,IAAIpD,EAAI,EAAGA,EAAI/L,KAAK8O,OAAOtE,OAAQuB,IAExC/L,KAAK+I,MAAMlE,IAAK7E,KAAK8O,OAAQ/C,IAI9B,OAAO/L,KAAK+I,MAWb,SAAUiH,EAAab,GAEtB,MAAMS,EAAO,IAAIM,SAAUF,GACrBG,EAAQ,IAAIC,EAAOR,EAAM,EAAG5P,KAAKqQ,cAEvC,GAAKF,EAAMpR,KAAOuR,GAAaH,EAAMpR,KAAOwR,GAAUJ,EAAMpR,KAAOyR,EAAW,CAE7E,IAAIC,EAAON,EAAMO,YAEjB,MAAQD,EAAO,CAEd,GAAKA,EAAK1R,KAAO4R,EAAc,CAE9B,MAAMC,EAAUH,EAAKI,YACrB7Q,KAAKqQ,aAAc,qBAAuBO,QAE/BH,EAAK1R,KAAO+R,EAEvB9Q,KAAK+Q,aAAcN,EAAMtB,GAIzBnP,KAAKqQ,aAAc,uBAAyBI,EAAKO,OAIlDP,EAAON,EAAMO,aAMf1Q,KAAKqQ,aAAc,UAAYrQ,KAAK8O,OAAOtE,OAAS,WAWrD,aAAc2F,EAAOhB,GAEpB,IAAIsB,EAAON,EAAMO,YAEjB,MAAQD,EAAO,CAEd,GAAKA,EAAK1R,KAAOkS,EAAe,CAE/B,MAAML,GAAYH,EAAKI,YACvB7Q,KAAKqQ,aAAc,iBAAmBO,QAEhC,GAAKH,EAAK1R,KAAOmS,EAAe,CAEtC,MAAMxJ,EAAQ+I,EAAKU,YACnBnR,KAAKqQ,aAAc,iBAAmB3I,GACtC1H,KAAK+I,MAAMrB,MAAMnD,IAAKmD,EAAOA,EAAOA,QAEzB+I,EAAK1R,KAAOqS,IAEvBpR,KAAKqQ,aAAc,gBACnBrQ,KAAKqR,gBAAiBZ,IAEXA,EAAK1R,KAAOuS,GAEvBtR,KAAKqQ,aAAc,YACnBrQ,KAAKuR,kBAAmBd,EAAMtB,IAI9BnP,KAAKqQ,aAAc,wBAA0BI,EAAKO,OAInDP,EAAON,EAAMO,aAYf,gBAAiBP,GAEhB,MAAMqB,EAAOrB,EAAMsB,aAEnB,IAAIhB,EAAON,EAAMO,YACjB,MAAQD,EAAO,CAEd,GAAKA,EAAK1R,KAAO2S,GAAe,CAE/B,MAAMtH,EAAOpK,KAAK2R,SAAUlB,GAC5BrG,EAAKoH,KAAOA,EACZxR,KAAK8O,OAAOrE,KAAML,QAIlBpK,KAAKqQ,aAAc,+BAAiCI,EAAKO,OAI1DP,EAAON,EAAMO,aAaf,kBAAmBP,EAAOhB,GAEzB,IAAIsB,EAAON,EAAMO,YACjB,MAAMjN,EAAW,IAAI,OAErB,MAAQgN,EAAO,CAEd,GAAKA,EAAK1R,KAAO6S,EAEhBnO,EAAS+N,KAAOf,EAAKgB,aACrBzR,KAAKqQ,aAAc,YAAc5M,EAAS+N,WAEpC,GAAKf,EAAK1R,KAAO8S,EAEvB7R,KAAKqQ,aAAc,gBACnB5M,EAASqO,WAAY,OAEf,GAAKrB,EAAK1R,KAAOgT,EAAgB,CAEvC,MAAMjO,EAAQ2M,EAAKuB,WACnBvO,EAASwO,mBAAqBnO,EAC9B9D,KAAKqQ,aAAc,2BAA6BvM,QAE1C,GAAK2M,EAAK1R,KAAOmT,EAEvBzO,EAAS0O,KAAO,OAChBnS,KAAKqQ,aAAc,uBAEb,GAAKI,EAAK1R,KAAOqT,EAEvBpS,KAAKqQ,aAAc,wBACnB5M,EAAS4O,SAAW,YAEd,GAAK5B,EAAK1R,KAAOuT,EAEvBtS,KAAKqQ,aAAc,oBACnB5M,EAASnB,MAAQtC,KAAKuS,UAAW9B,QAE3B,GAAKA,EAAK1R,KAAOyT,EAEvBxS,KAAKqQ,aAAc,qBACnB5M,EAASgP,SAAWzS,KAAKuS,UAAW9B,QAE9B,GAAKA,EAAK1R,KAAO2T,EAEvB1S,KAAKqQ,aAAc,oBACnB5M,EAASnB,MAAQtC,KAAKuS,UAAW9B,QAE3B,GAAKA,EAAK1R,KAAO4T,EAAgB,CAEvC,MAAMC,EAAY5S,KAAK6S,eAAgBpC,GACvChN,EAASmP,UAAwB,IAAZA,EACrB5S,KAAKqQ,aAAc,kBAAoBuC,QAEjC,GAAKnC,EAAK1R,KAAO+T,EAAmB,CAE1C,MAAMC,EAAe/S,KAAK6S,eAAgBpC,GAC1ChN,EAASuP,QAAU,EAAID,EACvB/S,KAAKqQ,aAAc,oBAAsB0C,GACzCtP,EAASkF,YAAclF,EAASuP,QAAU,OAE/BvC,EAAK1R,KAAOkU,GAEvBjT,KAAKqQ,aAAc,eACnB5M,EAAS7E,IAAMoB,KAAKkT,QAASzC,EAAMtB,IAExBsB,EAAK1R,KAAOoU,IAEvBnT,KAAKqQ,aAAc,cACnB5M,EAAS2P,QAAUpT,KAAKkT,QAASzC,EAAMtB,IAE5BsB,EAAK1R,KAAOsU,IAEvBrT,KAAKqQ,aAAc,iBACnB5M,EAAS6P,SAAWtT,KAAKkT,QAASzC,EAAMtB,IAE7BsB,EAAK1R,KAAOwU,IAEvBvT,KAAKqQ,aAAc,kBACnB5M,EAAS+P,YAAcxT,KAAKkT,QAASzC,EAAMtB,IAI3CnP,KAAKqQ,aAAc,8BAAgCI,EAAKO,OAIzDP,EAAON,EAAMO,YAId1Q,KAAK6O,UAAWpL,EAAS+N,MAAS/N,EAWnC,SAAU0M,GAET,IAAIM,EAAON,EAAMO,YAEjB,MAAMzO,EAAW,IAAI,OAEfwB,EAAW,IAAI,OACf2G,EAAO,IAAI,OAAMnI,EAAUwB,GACjC2G,EAAKoH,KAAO,OAEZ,MAAQf,EAAO,CAEd,GAAKA,EAAK1R,KAAO0U,GAAc,CAE9B,MAAMC,EAASjD,EAAKkD,WAEpB3T,KAAKqQ,aAAc,cAAgBqD,GAInC,MAAME,EAAW,GAEjB,IAAM,IAAI7H,EAAI,EAAGA,EAAI2H,EAAQ3H,IAE5B6H,EAASnJ,KAAMgG,EAAKU,aACpByC,EAASnJ,KAAMgG,EAAKU,aACpByC,EAASnJ,KAAMgG,EAAKU,aAIrBlP,EAAS4R,aAAc,WAAY,IAAI,OAAwBD,EAAU,SAEnE,GAAKnD,EAAK1R,KAAO+U,GAEvB9T,KAAK+T,cAAetD,EAAMrG,QAEpB,GAAKqG,EAAK1R,KAAOiV,GAAY,CAEnC,MAAMC,EAASxD,EAAKkD,WAEpB3T,KAAKqQ,aAAc,UAAY4D,GAI/B,MAAMC,EAAM,GAEZ,IAAM,IAAInI,EAAI,EAAGA,EAAIkI,EAAQlI,IAE5BmI,EAAIzJ,KAAMgG,EAAKU,aACf+C,EAAIzJ,KAAMgG,EAAKU,aAIhBlP,EAAS4R,aAAc,KAAM,IAAI,OAAwBK,EAAK,SAGxD,GAAKzD,EAAK1R,KAAOoV,GAAc,CAErCnU,KAAKqQ,aAAc,kCAEnB,MAAM+D,EAAS,GACf,IAAM,IAAIrI,EAAI,EAAGA,EAAI,GAAIA,IAExBqI,EAAQrI,GAAM0E,EAAKU,YAIpB,MAAMkD,EAAS,IAAI,OAGnBA,EAAOxO,SAAU,GAAMuO,EAAQ,GAC/BC,EAAOxO,SAAU,GAAMuO,EAAQ,GAC/BC,EAAOxO,SAAU,GAAMuO,EAAQ,GAC/BC,EAAOxO,SAAU,GAAMuO,EAAQ,GAG/BC,EAAOxO,SAAU,GAAMuO,EAAQ,GAC/BC,EAAOxO,SAAU,GAAMuO,EAAQ,GAC/BC,EAAOxO,SAAU,GAAMuO,EAAQ,GAC/BC,EAAOxO,SAAU,GAAMuO,EAAQ,IAG/BC,EAAOxO,SAAU,GAAMuO,EAAQ,GAC/BC,EAAOxO,SAAU,GAAMuO,EAAQ,GAC/BC,EAAOxO,SAAU,IAAOuO,EAAQ,GAChCC,EAAOxO,SAAU,IAAOuO,EAAQ,IAGhCC,EAAOxO,SAAU,IAAO,EACxBwO,EAAOxO,SAAU,IAAO,EACxBwO,EAAOxO,SAAU,IAAO,EACxBwO,EAAOxO,SAAU,IAAO,EAExBwO,EAAOC,YAEP,MAAMC,EAAU,IAAI,OACpBA,EAAQxP,KAAMsP,GAASG,SACvBvS,EAASuC,aAAc+P,GAEvBF,EAAOI,UAAWrK,EAAKtF,SAAUsF,EAAKsK,WAAYtK,EAAK1C,YAIvD1H,KAAKqQ,aAAc,0BAA4BI,EAAKO,OAIrDP,EAAON,EAAMO,YAMd,OAFAzO,EAAS0S,uBAEFvK,EAWR,cAAe+F,EAAO/F,GAErB,MAAMwK,EAAQzE,EAAMwD,WAEpB3T,KAAKqQ,aAAc,aAAeuE,GAElC,MAAMzK,EAAQ,GAEd,IAAM,IAAI4B,EAAI,EAAGA,EAAI6I,IAAU7I,EAE9B5B,EAAMM,KAAM0F,EAAMwD,WAAaxD,EAAMwD,WAAaxD,EAAMwD,YAExDxD,EAAMwD,WAIPvJ,EAAKnI,SAAS4S,SAAU1K,GAIxB,IAAI2K,EAAgB,EAChBC,EAAQ,EAEZ,OAAU5E,EAAM6E,WAAa,CAE5B,MAAMC,EAAW9E,EAAMO,YAEvB,GAAKuE,EAASlW,KAAOmW,GAAgB,CAEpClV,KAAKqQ,aAAc,wBAEnB,MAAMtH,EAAQ/I,KAAKmV,kBAAmBF,GAChCnV,EAA6B,EAArBiJ,EAAMoB,MAAMK,OAE1BJ,EAAKnI,SAASmT,SAAUL,EAAOjV,EAAOgV,GAEtCC,GAASjV,EACTgV,IAEA,MAAMrR,EAAWzD,KAAK6O,UAAW9F,EAAMyI,OAEC,IAAnC6D,MAAMC,QAASlL,EAAK3G,YAAuB2G,EAAK3G,SAAW,SAE9ClB,IAAbkB,GAEJ2G,EAAK3G,SAASgH,KAAMhH,QAMrBzD,KAAKqQ,aAAc,mCAAqC4E,EAASjE,OAMrC,IAAzB5G,EAAK3G,SAAS+G,SAAeJ,EAAK3G,SAAW2G,EAAK3G,SAAU,IAYlE,QAAS0M,EAAOhB,GAEf,IAAIsB,EAAON,EAAMO,YACb3M,EAAU,GAEd,MAAMsL,EAAS,IAAI,QAAerP,KAAK2O,SACvCU,EAAOC,QAAStP,KAAKuV,cAAgBpG,GAAOf,eAAgBpO,KAAKwV,aAEjE,MAAQ/E,EAAO,CAEd,GAAKA,EAAK1R,KAAO0W,GAAc,CAE9B,MAAMjE,EAAOf,EAAKgB,aAClB1N,EAAUsL,EAAOvH,KAAM0J,GAEvBxR,KAAKqQ,aAAc,eAAiBlB,EAAOqC,QAEhCf,EAAK1R,KAAO2W,IAEvB3R,EAAQoI,OAAO3G,EAAIiL,EAAKU,YACxBnR,KAAKqQ,aAAc,kBAAoBtM,EAAQoI,OAAO3G,IAE3CiL,EAAK1R,KAAO4W,IAEvB5R,EAAQoI,OAAO1G,EAAIgL,EAAKU,YACxBnR,KAAKqQ,aAAc,kBAAoBtM,EAAQoI,OAAO1G,IAE3CgL,EAAK1R,KAAO6W,IAEvB7R,EAAQ1D,OAAOmF,EAAIiL,EAAKU,YACxBnR,KAAKqQ,aAAc,kBAAoBtM,EAAQ1D,OAAOmF,IAE3CiL,EAAK1R,KAAO8W,IAEvB9R,EAAQ1D,OAAOoF,EAAIgL,EAAKU,YACxBnR,KAAKqQ,aAAc,kBAAoBtM,EAAQ1D,OAAOoF,IAItDzF,KAAKqQ,aAAc,4BAA8BI,EAAKO,OAIvDP,EAAON,EAAMO,YAId,OAAO3M,EAWR,kBAAmBoM,GAElB,MAAMqB,EAAOrB,EAAMsB,aACbqE,EAAW3F,EAAMwD,WAEvB3T,KAAKqQ,aAAc,kBAAoBmB,GACvCxR,KAAKqQ,aAAc,mBAAqByF,GAExC,MAAM3L,EAAQ,GACd,IAAM,IAAI4B,EAAI,EAAGA,EAAI+J,IAAa/J,EAEjC5B,EAAMM,KAAM0F,EAAMwD,YAInB,MAAO,CAAEnC,KAAMA,EAAMrH,MAAOA,GAW7B,UAAWgG,GAEV,MAAM4F,EAAW5F,EAAMO,YACjBpO,EAAQ,IAAI,OAElB,GAAKyT,EAAShX,KAAOiX,GAAYD,EAAShX,KAAOkX,EAAe,CAE/D,MAAMC,EAAIH,EAAS/D,WACbmE,EAAIJ,EAAS/D,WACboE,EAAIL,EAAS/D,WAEnB1P,EAAM+T,OAAQH,EAAI,IAAKC,EAAI,IAAKC,EAAI,KAEpCpW,KAAKqQ,aAAc,gBAAkB/N,EAAM4T,EAAI,KAAO5T,EAAM6T,EAAI,KAAO7T,EAAM8T,QAEvE,GAAKL,EAAShX,KAAOuX,GAAWP,EAAShX,KAAOwX,EAAc,CAEpE,MAAML,EAAIH,EAAS5E,YACbgF,EAAIJ,EAAS5E,YACbiF,EAAIL,EAAS5E,YAEnB7O,EAAM+T,OAAQH,EAAGC,EAAGC,GAEpBpW,KAAKqQ,aAAc,gBAAkB/N,EAAM4T,EAAI,KAAO5T,EAAM6T,EAAI,KAAO7T,EAAM8T,QAI7EpW,KAAKqQ,aAAc,8BAAgC0F,EAAS/E,OAI7D,OAAO1O,EAWR,eAAgB6N,GAEf,MAAM4F,EAAW5F,EAAMO,YAEvB,OAASqF,EAAShX,IAEjB,KAAKyX,EACJ,OAAST,EAASU,YAAe,IAGlC,KAAKC,EACJ,OAAOX,EAAS5E,YAGjB,QAEC,OADAnR,KAAKqQ,aAAc,mCAAqC0F,EAAS/E,OAC1D,GAcV,aAAc2F,GAER3W,KAAK4O,OAETkB,QAAQ8G,IAAKD,IAUhB,MAAMvG,EAUL,YAAaR,EAAM9K,EAAUuL,GAE5BrQ,KAAK4P,KAAOA,EAEZ5P,KAAKmM,OAASrH,EAEd9E,KAAK8E,SAAWA,EAChB9E,KAAKqQ,aAAeA,EAEfrQ,KAAKqQ,wBAAwBwG,WAEjC7W,KAAKqQ,aAAe,cAIrBrQ,KAAKjB,GAAKiB,KAAK2T,WACf3T,KAAK8W,KAAO9W,KAAK6Q,YACjB7Q,KAAK+W,IAAM/W,KAAKmM,OAASnM,KAAK8W,KAEzB9W,KAAK+W,IAAMnH,EAAKoH,YAEpBhX,KAAKqQ,aAAc,+BAAiCvL,GAYtD,YAEC,GAAK9E,KAAKgV,WAET,OAAO,KAIR,IAEC,MAAMvE,EAAO,IAAIL,EAAOpQ,KAAK4P,KAAM5P,KAAK8E,SAAU9E,KAAKqQ,cAEvD,OADArQ,KAAK8E,UAAY2L,EAAKqG,KACfrG,EAEN,MAAQtR,GAGT,OADAa,KAAKqQ,aAAc,2BAA6BrQ,KAAK8E,UAC9C,MAYT,YAEC,OAAO9E,KAAKjB,GAAGY,SAAU,IAI1B,iBAEC,OAAOK,KAAK8E,UAAY9E,KAAK+W,IAU9B,WAEC,MAAMhM,EAAI/K,KAAK4P,KAAKqH,SAAUjX,KAAK8E,UAAU,GAE7C,OADA9E,KAAK8E,UAAY,EACViG,EAUR,YAEC,IAEC,MAAMA,EAAI/K,KAAK4P,KAAKsH,WAAYlX,KAAK8E,UAAU,GAE/C,OADA9E,KAAK8E,UAAY,EACViG,EAEN,MAAQ5L,GAGT,OADAa,KAAKqQ,aAAclR,EAAI,IAAMa,KAAK8E,SAAW,IAAM9E,KAAK4P,KAAKoH,YACtD,GAYT,UAEC,MAAMjM,EAAI/K,KAAK4P,KAAKuH,SAAUnX,KAAK8E,UAAU,GAE7C,OADA9E,KAAK8E,UAAY,EACViG,EAUR,YAEC,MAAMA,EAAI/K,KAAK4P,KAAKwH,SAAUpX,KAAK8E,UAAU,GAE7C,OADA9E,KAAK8E,UAAY,EACViG,EAUR,YAEC,MAAMA,EAAI/K,KAAK4P,KAAKyH,UAAWrX,KAAK8E,UAAU,GAE9C,OADA9E,KAAK8E,UAAY,EACViG,EAUR,WAEC,MAAMA,EAAI/K,KAAK4P,KAAK0H,UAAWtX,KAAK8E,UAAU,GAE9C,OADA9E,KAAK8E,UAAY,EACViG,EAUR,aAEC,IAAIwM,EAAI,GACJC,EAAIxX,KAAKgS,WACb,MAAQwF,EAEPD,GAAKE,OAAOC,aAAcF,GAC1BA,EAAIxX,KAAKgS,WAIV,OAAOuF,GAOT,MAAM/G,EAAW,MAGXF,EAAY,MAEZC,EAAS,MACTI,EAAc,EAEd2F,EAAU,GACVN,EAAW,GACXC,EAAe,GACfM,EAAc,GACdC,EAAiB,GACjBE,EAAmB,GACnB5F,EAAQ,MACRG,EAAe,MACfC,EAAe,IAwBfI,EAAY,MACZM,EAAW,MACXc,EAAc,MACdJ,EAAc,MACdE,EAAe,MACfG,EAAgB,MAEhBG,EAAmB,MAOnBZ,EAAe,MAEfE,EAAe,MACfP,EAAW,MAKXE,EAAgB,MAChBkB,EAAa,MAQbI,GAAc,MAIdF,GAAc,MAIdI,GAAc,MAgBdkC,GAAc,MAGdG,GAAiB,MACjBC,GAAiB,MACjBH,GAAkB,MAClBC,GAAkB,MAOlBvE,GAAe,MA8BfM,GAAe,MACf+B,GAAc,MAEdK,GAAa,MACboB,GAAgB,MAGhBlB,GAAY,MACZG,GAAc,M,wDCxgCd,G,WAoDF,WAAYwD,EACR3I,EACAC,EACAC,GAA+B,q9CA4TzB,WACN0I,sBAAuB,EAAKC,SAE5B,EAAKC,qBACL,EAAKC,eACL,EAAKC,oBACL,EAAKxX,SACL,EAAKyX,MAAMC,YA/TXlY,KAAKmY,gBAAkB,IACvBnY,KAAKoY,UAAYT,EACjB3X,KAAKmE,OAAS,IAAI,QAAyB,GAAIkU,OAAOC,WAAaD,OAAOE,YAAa,EAAG,KAC1FvY,KAAKiE,SAAW,IAAI,QAAqB,CAACuU,OAAO,IACjDxY,KAAKiE,SAASwU,cAAe,UAC7BzY,KAAKiE,SAASyU,cAAeL,OAAOM,kBACpC3Y,KAAKiE,SAAS2U,QAAQP,OAAOC,WAAYD,OAAOE,aAChDvY,KAAKiE,SAAS4U,WAAWxX,MAAMyD,SAAW,WAC1C9E,KAAKiE,SAAS4U,WAAWxX,MAAMyX,IAAM,MACrC9Y,KAAKiE,SAAS4U,WAAWxX,MAAM0X,KAAO,MACtC/Y,KAAKoY,UAAUY,YAAahZ,KAAKiE,SAAS4U,YAE1C7Y,KAAKiY,MAAQ,IAAI,WACjBjY,KAAKiY,MAAMY,WAAWxX,MAAM4X,OAAS,MACrCjZ,KAAKoY,UAAUY,YAAahZ,KAAKiY,MAAMY,YAEvC7Y,KAAKkE,MAAQ,IAAI,QACjBlE,KAAKkZ,SAAW,IAAI,QACpBlZ,KAAKmZ,gBAAkB,IAAI,QAC3BnZ,KAAKsH,gBAAkB,IAAI,QAG3BtH,KAAKoZ,eAAiB,IAAI,QAAqB,WACvCpK,GACAA,OAEL,SAACD,EAAaxN,EAAgBC,GACzByN,GACAA,EAAWF,EAAKxN,EAAQC,MAE7B,SAACuN,GACIG,GACAA,EAAQH,MAKhB,IAAMmH,EAAI,WACJmD,EAAO,CACTnD,EAAI,SAAUA,EAAI,SAClBA,EAAI,SAAUA,EAAI,SAClBA,EAAI,SAAUA,EAAI,UAEhBoD,EAAc,IAAI,OAAwBtZ,KAAKoZ,gBAAgBtR,KAAMuR,GAC3EC,EAAYC,QAAU,OAEtBvZ,KAAKkE,MAAMsV,YAAcF,EAIzB,IAAIG,EAAQ,IAAI,OAChBA,EAAMC,UAAY,GAClBD,EAAM3U,SAASU,EAAI,GACnBiU,EAAM3U,SAASW,EAAI,GACnBgU,EAAM3U,SAASY,EAAI,IACnB1F,KAAKkE,MAAMW,IAAI4U,GAGfzZ,KAAK2Z,kBAAoB,IAAI,QAAkB3Z,KAAKkE,MAAOlE,KAAKoY,UAAWpY,KAAKiE,SAAUjE,KAAKmE,QAC/F,IAAIyV,EAAa,IAAI,OACjB,IAAIC,GAAA,KAAmB,GAAI,GAAI,GAAI,EAAG,GAEtC,IAAI,OAAwB,KAG5BC,EAA0B,IAAI,OAAW,IAAI,OAAkB,GAAG,GAAG,IAAK,IAAI,OAAwB,KAC1GA,EAAwB5T,SAAU,EAClC0T,EAAW/U,IAAIiV,GAEfF,EAAWxN,SAAS7H,IAAI,EAAE,EAAE,GAC5BvE,KAAK2Z,kBAAkBI,kBAAkBH,GAAY,EAAM,KAAM,MAAU,QAAU,IAAK,IAC1F5Z,KAAKga,qBAAuB,IAAI,QAAwBJ,EAAY,GAAK,IAIzE,IAAMK,EAAc,IAAIC,EAAA,KAAWla,KAAKkE,MAAOlE,KAAKmE,QACpD8V,EAAYhT,OAAQ,EACpB,IAAMkT,EAAc,IAAID,EAAA,KAAWla,KAAKmZ,gBAAiBnZ,KAAKmE,QAC9DgW,EAAYC,YAAa,EACzBD,EAAYlT,OAAQ,EACpBjH,KAAKqa,SAAW,IAAIC,EAAA,KAAeta,KAAKiE,SAAU,IAAI,QAClDjE,KAAKoY,UAAUmC,YAAclC,OAAOM,iBACpC3Y,KAAKoY,UAAUoC,aAAenC,OAAOM,mBAGzC3Y,KAAKqa,SAASI,QAAQR,GACtBja,KAAKqa,SAASI,QAAQN,GACtBna,KAAKqa,SAASK,cAAcC,eAAgB,EAC5C3a,KAAKqa,SAASO,cAAcD,eAAgB,EAK5C,IAAIE,EAAgB,IAAIC,EAAA,KAAW,IAAK,IAAK,IACzC9a,KAAKkE,MAAOlE,KAAKmZ,gBAAiB,IAAI,QAAc,EAAG,IAAK,GAAI,IAAI,OAAe2B,EAAA,KAAgBC,KACnG,MACJF,EAAcG,UAAU1B,GACxB,IAAI2B,EAA8B,IAAI,OAClCC,EAAe,IAAI,QAAoBlb,KAAKoZ,gBAAgBtR,KAAM,eAClEqT,EAAqB,IAAI,OACzB,IAAI,QAA0B,IAAK,GAAI,EAAG,GAC1C,IAAI,OAAwB,CACxB7Y,MAAO,SACPgR,SAAU4H,EACVE,iBAAiB,EACjBzS,aAAa,KAGrBsS,EAA4BpW,IAAIsW,GAChCF,EAA4BnW,SAASC,KAAK8V,EAAcQ,SAASvW,UACjE+V,EAAcS,sBAAsBL,GACpCjb,KAAKub,gBAAkBV,EAAcQ,SAErC,IAAIG,EAAc,IAAIV,EAAA,KAAW,IAAK,IAAK,IACvC9a,KAAKkE,MAAOlE,KAAKmZ,gBAAiB,IAAI,QAAc,EAAG,EAAG,GAAI,IAAI,OAAe2B,EAAA,KAAgBC,KACjG/a,KAAKsH,gBAAiB,UAEtBmU,EAAiB,IAAI,QAAoBzb,KAAKoZ,gBAAgBtR,KAAM,wBACpE4T,EAAgB,IAAI,QAAoB1b,KAAKoZ,gBAAgBtR,KAAM,uBACnE6T,EAAc,IAAI,QAAoB3b,KAAKoZ,gBAAgBtR,KAAM,yBACjE8T,EAAO,CAACH,EAAgBC,EAAeC,GAC3CC,EAAKrP,SAAQ,SAAAsP,GACTA,EAAEhT,MAAQgT,EAAE/S,MAAQ,QACpB+S,EAAExb,OAAOkE,IAAI,EAAG,MAEpB,IAAIuX,EAA4B,IAAI,OAE9BC,EAAW,IAAI,QAAoB/b,KAAKoZ,gBAAgBtR,KAAM,mCAC9DuH,EAAS,IAAI,EAAUrP,KAAKoZ,gBAClC/J,EAAO2M,gBAAgB,yBACvB3M,EAAOvH,KAAM,8BAA8B,SAACmU,GACxC,GAAIA,aAAe,OAAa,CAC5BA,EAAIC,UAAU,SAAWC,GAChBA,aAAiB,SAClBrM,QAAQ8G,IAAIuF,EAAM1Y,UAClB0Y,EAAM1Y,SAASnB,MAAQ,IAAI,OAAY,UAEvC6Z,EAAM1Y,SAAS2Y,UAAYL,MAGnCE,EAAIvU,MAAM3B,eAAe,IACzBkW,EAAInX,SAASU,GAAK,GAClByW,EAAInX,SAASW,GAAK,GAClBwW,EAAInX,SAASY,GAAK,GAClBuW,EAAI7P,SAAS5G,GAAK,EAClByW,EAAI7P,SAAS1G,EAAI,GACjBoW,EAA0BjX,IAAIoX,GAE9B,IAAII,EAAwB,IAAI,OAC5B,IAAI,QAA0B,IAAK,IAAK,EAAG,GAC3C,IAAI,OAA2B,CAC3B/Z,MAAO,SACP1D,IAAK6c,EACLW,UAAWV,EACXY,YAAa,IAAI,QAAc,GAAK,IACpCC,iBAAkBZ,EAClBa,kBAAmB,EACnB/U,aAAc,EACdgV,UAAW,GACXC,UAAW,GACXC,UAAW,MAInBN,EAAsBvX,SAASP,IAAI,EAAG,GAAI,KAC1CuX,EAA0BjX,IAAIwX,GAC9BP,EAA0BhX,SAASC,KAAKyW,EAAYH,SAASvW,UAC7D0W,EAAYF,sBAAsBQ,OAM1C,IAAIc,EAAc,IAAI9B,EAAA,KAAW,IAAK,IAAK,IAAK9a,KAAKkE,MAAOlE,KAAKmZ,gBAAiB,IAAI,QAAc,IAAK,EAAG,GAAI,IAAI,OAAe2B,EAAA,KAAgB+B,OACnJ7c,KAAKsH,gBAAiB,UACtBtH,KAAK8c,UAAY,IAAI,EAAS,CAC1B9R,iBAAkB,EAClBK,WAAY,GACZC,YAAa,GACbI,oBAAqB,MAEzB,IAAIqR,EAAkB,IAAI,QAAoB/c,KAAKoZ,gBAAgBtR,KAAM,gCACrEkV,EAAiB,IAAI,QAAoBhd,KAAKoZ,gBAAgBtR,KAAM,+BACpEmV,EAAe,IAAI,QAAoBjd,KAAKoZ,gBAAgBtR,KAAM,iCACtE8T,EAAO,CAACmB,EAAiBC,EAAgBC,GACzC,IAAIC,EAAuB,IAAI,OAC3B,IAAI,QAA0B,IAAK,IAAK,EAAG,GAC3C,IAAI,OAA2B,CAC3Bte,IAAKme,EACLX,UAAWY,EACXT,iBAAkBU,EAClBX,YAAa,IAAI,QAAc,GAAK,IACpCE,kBAAmB,GACnB/U,aAAc,GACdgV,UAAW,GACXC,UAAW,MAGnBQ,EAAqBpY,SAASP,IAAI,EAAG,GAAI,KAEzC,IAAI4Y,EAA4B,IAAI,OACpCA,EAA0BtY,IAAI7E,KAAK8c,WACnCK,EAA0BtY,IAAIqY,GAC9BC,EAA0BrY,SAASC,KAAK6X,EAAYvB,SAASvW,UAC7D8X,EAAYtB,sBAAsB6B,GAElC,IAAIC,EAAc,IAAItC,EAAA,KAAW,IAAK,IAAK,IAAK9a,KAAKkE,MAAOlE,KAAKmZ,gBAAiB,IAAI,SAAe,IAAK,EAAG,GAAI,IAAI,OAAe2B,EAAA,KAAgB+B,OACpJ7c,KAAKsH,gBAAiB,UACtBtH,KAAKqd,UAAY,IAAI,EAAS,CAC1BrS,iBAAkB,EAClBK,WAAY,GACZC,YAAa,GACbI,oBAAqB,MAEzB,IAAI4R,EAAkB,IAAI,QAAoBtd,KAAKoZ,gBAAgBtR,KAAM,gCACrEyV,EAAiB,IAAI,QAAoBvd,KAAKoZ,gBAAgBtR,KAAM,+BACpE0V,EAAe,IAAI,QAAoBxd,KAAKoZ,gBAAgBtR,KAAM,iCACtE8T,EAAO,CAAC0B,EAAiBC,GAKzBL,EAAuB,IAAI,OACvB,IAAI,QAA0B,IAAK,IAAK,EAAG,GAC3C,IAAI,OAA2B,CAC3B5a,MAAO,SACP1D,IAAK0e,EACLlB,UAAWmB,EACXhB,iBAAkBiB,EAClBlB,YAAa,IAAI,QAAc,GAAK,IACpCE,kBAAmB,GACnB/U,aAAc,GACdgV,UAAW,EACXC,UAAW,MAGnBQ,EAAqBpY,SAASP,IAAI,EAAG,GAAI,KACzC,IAAIkZ,EAA4B,IAAI,OACpCA,EAA0B5Y,IAAI7E,KAAKqd,WACnCI,EAA0B5Y,IAAIqY,GAC9BO,EAA0B3Y,SAASC,KAAKqY,EAAY/B,SAASvW,UAC7DsY,EAAY9B,sBAAsBmC,GAIlC,IAAMC,EAAgB,IAAI,QAAqB,IAAM,KAC/CC,EAAQ,IAAI,EAASD,EAAe1d,KAAKsH,gBAAiB,CAG5DC,cAAe,IAAI,QAAe,EAAG,GACrC/E,aAAc,IACdC,cAAe,MAInBkb,EAAM7Y,SAASY,GAAK,IACpBiY,EAAM7Y,SAASW,GAAK,IACpBkY,EAAMvR,SAAS5G,GAAgB,GAAZ7D,KAAKic,GACxB5d,KAAKkE,MAAMW,IAAK8Y,GAIhB3d,KAAK6d,qBAAuB,IAAI,QAAc,EAAG,EAAG7d,KAAKmY,iBACzDnY,KAAKmE,OAAOW,SAASC,KAAK/E,KAAK6d,sBAC/B7d,KAAKmE,OAAOc,OAAO,EAAG,EAAG,GACzBjF,KAAK8d,0BAA4B,IACjC9d,KAAK+d,4BAA8B,KACnC/d,KAAKge,yBAA2B,IAAI,QAAyBhe,KAAKmE,OAAOW,SAAU,GAAK,KACxFuT,OAAO4F,iBAAiB,aAAa,SAAA9e,GACjC2K,EAAKoU,YAAY/e,MAKrBa,KAAKme,iBAAmB,IAAI,OAC5Bne,KAAKoe,YAAc,IAAI,QACvBpe,KAAKoe,YAAY1E,UAAY,EAC7B1Z,KAAKoe,YAAYC,MAAQ,EACzBre,KAAKoe,YAAYE,SAAW,IAC5Bte,KAAKoe,YAAY9b,MAAQ,IAAI,OAAa,UAC1CtC,KAAKme,iBAAiBtZ,IAAI7E,KAAKoe,aAC/Bpe,KAAKkE,MAAMW,IAAI7E,KAAKme,kBACpBne,KAAKue,sBAAwB,IAAI,QAAwBve,KAAKme,iBAAkB,GAAK,IAIrFne,KAAK6M,UAAY,IAAI,QACrB7M,KAAKwe,wBAA0B,GAC/Bxe,KAAKwe,wBAAwB/T,KAAKoQ,EAAcQ,SAAUG,EAAYH,SAAUuB,EAAYvB,SAAU+B,EAAY/B,UAClHrb,KAAKye,mBAAqB,GAC1Bze,KAAK0e,mBAAgBnc,EACrBvC,KAAK2e,iBAAkB,EACvB3e,KAAKye,mBAAmBhU,KAAKqP,GAI7B9Z,KAAK4e,UAAY,EACjB5e,KAAK6e,UAAY,EACjB7e,KAAK8e,QAAU,IAAI,QACnB,IAAMhV,EAAO9J,KACbqY,OAAO4F,iBAAkB,UAAU,WAC/BnU,EAAKiV,oBAET1G,OAAO4F,iBAAkB,SAAS,SAAC9e,GAC/B2K,EAAKkV,QAAQ7f,MAKjBa,KAAK6X,U,6CAaT,WAEI7X,KAAKqa,SAAS7Z,SACdR,KAAKiE,SAASmW,aACdpa,KAAK2Z,kBAAkBnZ,SACnBR,KAAKif,aACLjf,KAAKif,YAAYze,OAAOR,KAAKkZ,SAAUlZ,KAAKmE,U,4BAIpD,WACInE,KAAKmE,OAAO+a,OAAS7G,OAAOC,WAAaD,OAAOE,YAChDvY,KAAKmE,OAAOgb,yBACZnf,KAAK2Z,kBAAkBoF,iBACvB/e,KAAKiE,SAAS2U,QAASP,OAAOC,WAAYD,OAAOE,aACjDvY,KAAKqa,SAASzB,QAASP,OAAOC,WAAYD,OAAOE,aAC7CvY,KAAKif,aACLjf,KAAKif,YAAYrG,QAASP,OAAOC,WAAYD,OAAOE,e,yBAI5D,SAAYpZ,GAAa,WACrBa,KAAK4e,UAAYzf,EAAEigB,QACnBpf,KAAK6e,UAAY1f,EAAEkgB,QACnBrf,KAAK8e,QAAQtZ,EAAMrG,EAAEigB,QAAU/G,OAAOC,WAAe,EAAI,EAC/DtY,KAAK8e,QAAQrZ,GAAQtG,EAAEkgB,QAAUhH,OAAOE,YAAgB,EAAI,EAEtDvY,KAAK6M,UAAUyS,cAAetf,KAAK8e,QAAS9e,KAAKmE,QACjD,IAAM6I,EAAahN,KAAK6M,UAAUI,iBAAkBjN,KAAKye,oBAAoB,GAC7E,GAAyB,GAArBzR,EAAWxC,QAAgBxK,KAAK2e,iBAAmB3e,KAAK0e,gBAAkB1R,EAAW,GAAGG,OAAOoS,QAqB9F,GAAyB,GAArBvS,EAAWxC,SAAgBxK,KAAK2e,sBAA0Cpc,IAAvBvC,KAAK0e,cAA6B,CAC1F5O,QAAQ8G,IAAI,OACZ5W,KAAK2e,iBAAkB,EACvB,IAAIa,EAAYxf,KAAK0e,cACf,EAAS1e,KAAK0e,cAAc,oBAClC,OAAWe,WAAWzf,KAAK0e,cAActS,SAAU,IAAI,OAAY,EAAE,EAAE,IAAI,SAACrB,GACxEyU,EAAUpT,SAASrH,KAAKgG,MAExB,WAAO,EAAK4T,iBAAkB,IAC9B,KAEJ,OAAW7T,YAAY,EAAG,GAAG,SAAC4U,GAC1B,EAAOC,2BAA2B,eAAe7b,MAAMsS,EAAIsJ,KAE/D,cACA,KACA1f,KAAK0e,mBAAgBnc,OArCkF,CACvGuN,QAAQ8G,IAAI,MACZ5W,KAAK2e,iBAAkB,EACvB,IAAMzR,EAAeF,EAAW,GAAGG,OAAOoS,OACpCK,EAAS1S,EAAeA,EAAa,oBAAsB,KAC7DA,aAAwB,QAAc0S,aAAkB,UACxD5f,KAAK0e,cAAgBxR,EACrB,OAAWuS,WAAWzf,KAAK0e,cAActS,SAAU,IAAI,OAAY,EAAE,EAAE,IAAI,SAACrB,GACpEmC,EAAad,SAASrH,KAAKgG,MAE/B,WAAO,EAAK4T,iBAAkB,IAC9B,KAEJ,OAAW7T,YAAY,EAAG,GAAG,SAAC4U,GAC1BE,EAAOD,2BAA2B,eAAe7b,MAAMsS,EAAIsJ,KAE/D,cACA,S,qBAwBZ,SAAQvgB,GAAa,WACjB,IAAIa,KAAK0e,cAAT,CAGA,IAAM1R,EAAahN,KAAK6M,UAAUI,iBAAkBjN,KAAKwe,yBAAyB,GAElF,GAAyB,GAArBxR,EAAWxC,OAAa,CACxB,IAAM0C,EAAeF,EAAW,GAChC,OAAW6S,kBACP7f,KAAK6d,qBACL,IAAI,QACA3Q,EAAaC,OAAOrI,SAASU,EAC7B0H,EAAaC,OAAOrI,SAASW,EAC7BzF,KAAK6d,qBAAqBnY,IAE9B,SAACoa,GACG,EAAKjC,qBAAqB9Y,KAAK+a,MAEnC,cACA,KAEJ9f,KAAK8c,UAAUiD,cAAc/f,KAAK6M,WAAW,SAACmT,GAE1C,OADAlQ,QAAQ8G,IAAI,yBAA0BoJ,GACtC,mCAAmCre,KAAK+K,KAAqB,GAAhB/K,KAAKgL,UAAlD,eAEJ3M,KAAKqd,UAAU4C,iBAAiBjgB,KAAK6M,WAAW,SAACmT,GAE7C,OADAlQ,QAAQ8G,IAAI,yBAA0BoJ,GACtC,mCAAmCre,KAAK+K,KAAqB,GAAhB/K,KAAKgL,UAAlD,mB,2BAMZ,SAAcuT,EAAcC,GACxB,IAAI3a,EAAK,EAAM0a,EAAQ7H,OAAOC,WAAa,EACvC7S,EAAI,EAAO,EAAM0a,EAAQ9H,OAAOE,YAGhC6H,EAAM,IAAI,QAAc5a,EAAGC,EAAG,MAElC,OADA2a,EAAIC,UAAUrgB,KAAKmE,QACZic,I,gCAGX,WACI,IAAIE,EAAYtgB,KAAKugB,cAAclI,OAAOC,WAAa,IAAKD,OAAOE,YAAc,GAEjFvY,KAAKga,qBAAqB9B,OAAOoI,K,0BAOrC,WACI,IAAME,EAAOnI,OAAOC,WAAa,EAAItY,KAAK4e,UACpC6B,EAAOpI,OAAOE,YAAc,EAAIvY,KAAK6e,UAErC6B,EAAW,IAAI,SAChBF,EAAOxgB,KAAK8d,0BACb2C,EAAOzgB,KAAK8d,0BACZ,GACDjZ,IAAI7E,KAAK6d,sBAEZ7d,KAAKge,yBAAyB9F,OAAOwI,GACrC,IAAIC,EAAM3gB,KAAKge,yBAAyB4C,SACxC5gB,KAAKmE,OAAOiI,SAAS5G,EAAImb,EAAIlb,EAAIzF,KAAK+d,4BACtC/d,KAAKmE,OAAOiI,SAAS3G,GAAKkb,EAAInb,EAAIxF,KAAK+d,8B,+BAG3C,WACI,IAAK8C,MAAM7gB,KAAK4e,aAAeiC,MAAM7gB,KAAK6e,WAAY,CAClD,IAAIyB,EAAYtgB,KAAKugB,cAAcvgB,KAAK4e,UAAW5e,KAAK6e,WACpDiC,EAAU9gB,KAAKmE,OAAOW,SAASY,EAC/Bqb,GAAe,IAAI,SAAgBhc,KAAKub,GAC5CS,EAAeA,EAAaC,IAAIhhB,KAAKmE,OAAOW,UAC5C,IAAImc,GAAQ,IACRzb,GAAKyb,EAAOH,GAAWC,EAAarb,EACxC4a,EAAUvb,KAAK/E,KAAKmE,OAAOW,UAC3Bic,EAAahb,eAAeP,GAC5B8a,EAAUzb,IAAIkc,GACdT,EAAU5a,GAAK,IACf1F,KAAKue,sBAAsBrG,OAAOoI,M,oCAK1C,SAAuBY,EAA4BC,GAAyF,IAAlErc,EAAkE,uDAAxC,IAAI,QAAiB4C,EAAmB,uDAAH,OAC7GnF,GAApBvC,KAAKif,cACLjf,KAAKif,YAAc,IAAImC,GAAA,KAAoBF,GAC3ClhB,KAAKif,YAAYrG,QAASP,OAAOC,WAAYD,OAAOE,cAGxD,IAAMpL,EAAS,IAAI,QAAmBgU,GAItC,OAHAhU,EAAOrI,SAASC,KAAKD,GACrBqI,EAAOzF,MAAM3B,eAAe2B,GAC5B1H,KAAKkZ,SAASrU,IAAIsI,GACXA,M,KC1gBA,UAAIkU,OAAO,CACtBzR,KADsB,WAElB,MAAO,CACH0R,IAAK,KACLpgB,YAAa,CACTK,OAAQ,EACRC,MAAO,EACPL,UAAU,EACVC,eAAe,KAI3BmgB,QAZsB,WAYf,WACGzX,EAAO9J,KACb,GAAIA,KAAKwhB,MAAM,8BAA+BC,YAAa,CAoBvD,GAnBAzhB,KAAKshB,IAAM,IAAI,GACXthB,KAAKwhB,MAAM,qBACX,WACI1R,QAAQ8G,IAAI,UACZ9M,EAAK5I,YAAYC,UAAW,EAC5BugB,YAAW,WACP5X,EAAK5I,YAAYE,eAAgB,IAClC,QAEP,SAACugB,EAAGpgB,EAAQC,GACR,EAAKN,YAAYK,OAASA,EAC1B,EAAKL,YAAYM,MAAQA,KAE7B,SAACuN,GACGe,QAAQtG,MAAM,yBAA2BuF,GACzCjF,EAAK5I,YAAYC,UAAW,KAIhCnB,KAAKwhB,MAAM,6BAA8BC,aAAezhB,KAAKwhB,MAAM,yBAA0BC,YAAa,CAC1G,IAAMG,EAAc5hB,KAAKshB,IAAIO,uBAAuB7hB,KAAKwhB,MAAM,mBAAoBxhB,KAAKwhB,MAAM,eAAgB,IAAI,QAAc,EAAG,GAAI,KACvII,EAAYE,gBAAgB9hB,KAAKshB,IAAItH,qBAAqB7M,OAAQ,IAAI,SAEtEnN,KAAKwhB,MAAM,6BAA8BC,aAAezhB,KAAKwhB,MAAM,wBAAyBC,aAC5FzhB,KAAKshB,IAAIO,uBAAuB7hB,KAAKwhB,MAAM,mBAAoBxhB,KAAKwhB,MAAM,cAAe,IAAI,SAAe,IAAK,IAAK,MAIlIO,QAAS,CACLjgB,aADK,WAEDkgB,MAAM,sBC1F2X,M,yBCQzYC,GAAY,gBACd,GACAzhB,EACAwB,GACA,EACA,KACA,WACA,MAIa,aAAAigB,G,sEClBf,IAAI7hB,EAAI,EAAQ,QACZ8hB,EAAc,EAAQ,QACtBC,EAAY,EAAQ,QACpBC,EAAW,EAAQ,QACnBC,EAAoB,EAAQ,QAC5B1iB,EAAW,EAAQ,QACnB2iB,EAAQ,EAAQ,QAChBC,EAAe,EAAQ,QACvBC,EAAsB,EAAQ,QAC9BC,EAAK,EAAQ,QACbC,EAAa,EAAQ,QACrBC,EAAK,EAAQ,QACbC,EAAS,EAAQ,QAEjBC,EAAO,GACPC,EAAUZ,EAAYW,EAAKjV,MAC3BnD,EAAOyX,EAAYW,EAAKpY,MAGxBsY,EAAqBT,GAAM,WAC7BO,EAAKjV,UAAKrL,MAGRygB,EAAgBV,GAAM,WACxBO,EAAKjV,KAAK,SAGRqV,EAAgBT,EAAoB,QAEpCU,GAAeZ,GAAM,WAEvB,GAAIK,EAAI,OAAOA,EAAK,GACpB,KAAIF,GAAMA,EAAK,GAAf,CACA,GAAIC,EAAY,OAAO,EACvB,GAAIE,EAAQ,OAAOA,EAAS,IAE5B,IACIvjB,EAAM8jB,EAAKrf,EAAOqG,EADlBlK,EAAS,GAIb,IAAKZ,EAAO,GAAIA,EAAO,GAAIA,IAAQ,CAGjC,OAFA8jB,EAAM1L,OAAOC,aAAarY,GAElBA,GACN,KAAK,GAAI,KAAK,GAAI,KAAK,GAAI,KAAK,GAAIyE,EAAQ,EAAG,MAC/C,KAAK,GAAI,KAAK,GAAIA,EAAQ,EAAG,MAC7B,QAASA,EAAQ,EAGnB,IAAKqG,EAAQ,EAAGA,EAAQ,GAAIA,IAC1B0Y,EAAKpY,KAAK,CAAE8D,EAAG4U,EAAMhZ,EAAOY,EAAGjH,IAMnC,IAFA+e,EAAKjV,MAAK,SAAUwV,EAAGhN,GAAK,OAAOA,EAAErL,EAAIqY,EAAErY,KAEtCZ,EAAQ,EAAGA,EAAQ0Y,EAAKrY,OAAQL,IACnCgZ,EAAMN,EAAK1Y,GAAOoE,EAAE8U,OAAO,GACvBpjB,EAAOojB,OAAOpjB,EAAOuK,OAAS,KAAO2Y,IAAKljB,GAAUkjB,GAG1D,MAAkB,gBAAXljB,MAGLqjB,EAASP,IAAuBC,IAAkBC,IAAkBC,EAEpEK,EAAiB,SAAUC,GAC7B,OAAO,SAAUhe,EAAGC,GAClB,YAAUlD,IAANkD,GAAyB,OACnBlD,IAANiD,EAAwB,OACVjD,IAAdihB,GAAiCA,EAAUhe,EAAGC,IAAM,EACjD9F,EAAS6F,GAAK7F,EAAS8F,GAAK,GAAK,IAM5CrF,EAAE,CAAEE,OAAQ,QAASC,OAAO,EAAMkjB,OAAQH,GAAU,CAClD1V,KAAM,SAAc4V,QACAjhB,IAAdihB,GAAyBrB,EAAUqB,GAEvC,IAAIE,EAAQtB,EAASpiB,MAErB,GAAIkjB,EAAa,YAAqB3gB,IAAdihB,EAA0BV,EAAQY,GAASZ,EAAQY,EAAOF,GAElF,IAEIG,EAAaxZ,EAFbyZ,EAAQ,GACRC,EAAcxB,EAAkBqB,GAGpC,IAAKvZ,EAAQ,EAAGA,EAAQ0Z,EAAa1Z,IAC/BA,KAASuZ,GAAOjZ,EAAKmZ,EAAOF,EAAMvZ,IAGxCoY,EAAaqB,EAAOL,EAAeC,IAEnCG,EAAcC,EAAMpZ,OACpBL,EAAQ,EAER,MAAOA,EAAQwZ,EAAaD,EAAMvZ,GAASyZ,EAAMzZ,KACjD,MAAOA,EAAQ0Z,SAAoBH,EAAMvZ,KAEzC,OAAOuZ,M,uBCtGX,IAAInlB,EAAY,EAAQ,QAEpBulB,EAASvlB,EAAUE,MAAM,wBAE7BC,EAAOC,UAAYmlB,IAAWA,EAAO,I,qBCJrC,IAAIllB,EAAM,CACT,4BAA6B,QAI9B,SAASC,EAAeC,GACvB,IAAIC,EAAKC,EAAsBF,GAC/B,OAAOG,EAAoBF,GAE5B,SAASC,EAAsBF,GAC9B,IAAIG,EAAoBC,EAAEN,EAAKE,GAAM,CACpC,IAAIK,EAAI,IAAIC,MAAM,uBAAyBN,EAAM,KAEjD,MADAK,EAAEE,KAAO,mBACHF,EAEP,OAAOP,EAAIE,GAEZD,EAAeS,KAAO,WACrB,OAAOC,OAAOD,KAAKV,IAEpBC,EAAeW,QAAUR,EACzBN,EAAOC,QAAUE,EACjBA,EAAeE,GAAK,Q,kCCtBpB,kDAKA,MAAMglB,EAAc,IAAI,QAExB,SAASC,EAAOC,EAAenhB,EAAQohB,EAAQC,EAAgBC,EAAQC,GAEtE,MAAMC,EAAe,EAAI3iB,KAAKic,GAAKwG,EAAS,EAGtCG,EAAe5iB,KAAK6iB,IAAKH,EAAa,EAAID,EAAQ,GAClDK,EAAU9iB,KAAKic,GAAK,EAG1BmG,EAAYhf,KAAMjC,GAClBihB,EAAaI,GAAmB,EAChCJ,EAAYW,YAGZ,MAAMC,EAAa,GAAML,GAAiBA,EAAeC,GAGnDK,EAAgB,EAAQb,EAAYc,QAASZ,GAAkBQ,EAErE,GAA4C,IAAvC9iB,KAAKiE,KAAMme,EAAaG,IAE5B,OAAOU,EAAgBD,EAEjB,CAGN,MAAMG,EAAQP,GAAiBD,EAAeC,GAC9C,OAAOO,EAAQH,EAAaA,GAAe,EAAMC,IAMnD,MAAM/K,UAA2B,OAEhC,YAAavY,EAAQ,EAAGyjB,EAAS,EAAGje,EAAQ,EAAGke,EAAW,EAAGZ,EAAS,IAWrE,GARAY,EAAsB,EAAXA,EAAe,EAG1BZ,EAASziB,KAAKsjB,IAAK3jB,EAAQ,EAAGyjB,EAAS,EAAGje,EAAQ,EAAGsd,GAErDjiB,MAAO,EAAG,EAAG,EAAG6iB,EAAUA,EAAUA,GAGlB,IAAbA,EAAiB,OAEtB,MAAME,EAAYllB,KAAKmlB,eAEvBnlB,KAAKmK,MAAQ,KACbnK,KAAKolB,WAAWtgB,SAAWogB,EAAUE,WAAWtgB,SAChD9E,KAAKolB,WAAWtiB,OAASoiB,EAAUE,WAAWtiB,OAC9C9C,KAAKolB,WAAWC,GAAKH,EAAUE,WAAWC,GAI1C,MAAMvgB,EAAW,IAAI,QACfhC,EAAS,IAAI,QAEbwiB,EAAM,IAAI,QAAShkB,EAAOyjB,EAAQje,GAAQye,aAAc,GAAIC,UAAWpB,GAEvEqB,EAAYzlB,KAAKolB,WAAWtgB,SAAS4e,MACrCgC,EAAU1lB,KAAKolB,WAAWtiB,OAAO4gB,MACjCxP,EAAMlU,KAAKolB,WAAWC,GAAG3B,MAEzBiC,EAAWF,EAAUjb,OAAS,EAC9ByZ,EAAgB,IAAI,QACpB2B,EAAkB,GAAMZ,EAE9B,IAAM,IAAIjZ,EAAI,EAAG8Z,EAAI,EAAG9Z,EAAI0Z,EAAUjb,OAAQuB,GAAK,EAAG8Z,GAAK,EAAI,CAE9D/gB,EAASghB,UAAWL,EAAW1Z,GAC/BjJ,EAAOiC,KAAMD,GACbhC,EAAO0C,GAAK7D,KAAKiE,KAAM9C,EAAO0C,GAAMogB,EACpC9iB,EAAO2C,GAAK9D,KAAKiE,KAAM9C,EAAO2C,GAAMmgB,EACpC9iB,EAAO4C,GAAK/D,KAAKiE,KAAM9C,EAAO4C,GAAMkgB,EACpC9iB,EAAO4hB,YAEPe,EAAW1Z,EAAI,GAAMuZ,EAAI9f,EAAI7D,KAAKiE,KAAMd,EAASU,GAAM1C,EAAO0C,EAAI4e,EAClEqB,EAAW1Z,EAAI,GAAMuZ,EAAI7f,EAAI9D,KAAKiE,KAAMd,EAASW,GAAM3C,EAAO2C,EAAI2e,EAClEqB,EAAW1Z,EAAI,GAAMuZ,EAAI5f,EAAI/D,KAAKiE,KAAMd,EAASY,GAAM5C,EAAO4C,EAAI0e,EAElEsB,EAAS3Z,EAAI,GAAMjJ,EAAO0C,EAC1BkgB,EAAS3Z,EAAI,GAAMjJ,EAAO2C,EAC1BigB,EAAS3Z,EAAI,GAAMjJ,EAAO4C,EAE1B,MAAMyM,EAAOxQ,KAAK6L,MAAOzB,EAAI4Z,GAE7B,OAASxT,GAER,KAAK,EAGJ8R,EAAc1f,IAAK,EAAG,EAAG,GACzB2P,EAAK2R,EAAI,GAAM7B,EAAOC,EAAenhB,EAAQ,IAAK,IAAKshB,EAAQtd,GAC/DoN,EAAK2R,EAAI,GAAM,EAAM7B,EAAOC,EAAenhB,EAAQ,IAAK,IAAKshB,EAAQW,GACrE,MAED,KAAK,EAGJd,EAAc1f,KAAO,EAAG,EAAG,GAC3B2P,EAAK2R,EAAI,GAAM,EAAM7B,EAAOC,EAAenhB,EAAQ,IAAK,IAAKshB,EAAQtd,GACrEoN,EAAK2R,EAAI,GAAM,EAAM7B,EAAOC,EAAenhB,EAAQ,IAAK,IAAKshB,EAAQW,GACrE,MAED,KAAK,EAGJd,EAAc1f,IAAK,EAAG,EAAG,GACzB2P,EAAK2R,EAAI,GAAM,EAAM7B,EAAOC,EAAenhB,EAAQ,IAAK,IAAKshB,EAAQ9iB,GACrE4S,EAAK2R,EAAI,GAAM7B,EAAOC,EAAenhB,EAAQ,IAAK,IAAKshB,EAAQtd,GAC/D,MAED,KAAK,EAGJmd,EAAc1f,IAAK,GAAK,EAAG,GAC3B2P,EAAK2R,EAAI,GAAM,EAAM7B,EAAOC,EAAenhB,EAAQ,IAAK,IAAKshB,EAAQ9iB,GACrE4S,EAAK2R,EAAI,GAAM,EAAM7B,EAAOC,EAAenhB,EAAQ,IAAK,IAAKshB,EAAQtd,GACrE,MAED,KAAK,EAGJmd,EAAc1f,IAAK,EAAG,EAAG,GACzB2P,EAAK2R,EAAI,GAAM,EAAM7B,EAAOC,EAAenhB,EAAQ,IAAK,IAAKshB,EAAQ9iB,GACrE4S,EAAK2R,EAAI,GAAM,EAAM7B,EAAOC,EAAenhB,EAAQ,IAAK,IAAKshB,EAAQW,GACrE,MAED,KAAK,EAGJd,EAAc1f,IAAK,EAAG,GAAK,GAC3B2P,EAAK2R,EAAI,GAAM7B,EAAOC,EAAenhB,EAAQ,IAAK,IAAKshB,EAAQ9iB,GAC/D4S,EAAK2R,EAAI,GAAM,EAAM7B,EAAOC,EAAenhB,EAAQ,IAAK,IAAKshB,EAAQW,GACrE,W,kQChJC,SAAUgB,EAAWC,GACvB,IACI,IAAIniB,EAAe,UAAQ,KAAOmiB,EAAa,WAC3CC,EAAa,UAAQ,KAAOD,EAAa,WAC7C,MAAO,CAACniB,EAAcoiB,GAE1B,MAAM/b,GAEF,OADA4F,QAAQtG,MAAM,yBAA0BU,GACjC,CAAC,GAAI,K,IC+JhB,EACA,EAA+B,EAAiCgc,EAChEjO,EACA,EACAkO,E,YApKS,EAAb,gBASI,WAAYjiB,EAAoBkG,EAAkBgc,EAA6BC,EAA6BC,EAA+BC,EACvIC,EAAwBC,EAAqBC,EAA4BC,GAIzE,GAJ0F,2PAC1F3mB,KAAKoK,KAAOA,EACZpK,KAAKoK,KAAK,oBAAsBpK,KAE5BA,KAAKoK,KAAK3G,oBAAoB4R,MAAO,CACrCrV,KAAK4mB,iBAAmB,IAAIvR,MAC5B,IAAK,IAAItJ,EAAI,EAAGA,EAAI/L,KAAKoK,KAAK3G,SAAS+G,OAAQuB,IAC3C/L,KAAK4mB,iBAAiBnc,KAAKzK,KAAKoK,KAAK3G,SAASsI,GAAGpI,cAIrD3D,KAAK4mB,iBAAmB5mB,KAAKoK,KAAK3G,SAASE,QAE/C3D,KAAKwmB,UAAYA,EACjBxmB,KAAK2f,2BAA6B,CAC9B,WAAc,CAAE7b,MAAOsiB,GACvB,YAAkB,CAAEtiB,MAAOuiB,GAC3B,WAAc,CAAEviB,MAAOyiB,GACvB,cAAiB,CAAEziB,MAAOwiB,GAC1B,QAAW,CAAExiB,MAAOI,EAAMsV,aAC1B,iBAAoB,CAAE1V,MAAO4iB,GAC7B,QAAW,CAAE5iB,MAAO6iB,GACpB,YAAe,CAAE7iB,MAAO,IAAI,OAAY2iB,IACxC,aAAgB,CAAE3iB,MAAOsG,EAAKtF,WAElC,MAAmCihB,EAAW,oBAA9C,sBAAKc,EAAL,KAAmBC,EAAnB,KACA9mB,KAAK+mB,mBAAqB,IAAI,QAAe,CACzCljB,aAAgBgjB,EAChBjjB,eAAgBkjB,EAChBpjB,SAAU1D,KAAK2f,2BAKfxN,KAAM,YAKL,EAAb,WAeI,WACI6U,EAA8B5O,EAAwBnU,EAA+BE,GACnD,IAAlC8iB,EAAkC,uDAAH,IAAG,8ZAElCjnB,KAAKoY,UAAYA,EACjBpY,KAAKgnB,gBAAkBA,EACvBhnB,KAAKiE,SAAWA,EAChBjE,KAAKmE,OAASA,EAEdnE,KAAKknB,WAAa,IAAI,QACtBlnB,KAAKmnB,iBAAmB,IAAI,OACxBF,EAAsBA,EACtB,QAEJjnB,KAAKonB,iBAAmB,IAAI,QACxBpnB,KAAKoY,UAAUmC,YAAclC,OAAOM,iBACpC3Y,KAAKoY,UAAUoC,aAAenC,OAAOM,kBAEzC3Y,KAAKonB,iBAAiBC,aAAc,EACpCrnB,KAAKonB,iBAAiBE,aAAetnB,KAAKmnB,iBAC1CnnB,KAAKonB,iBAAiBE,aAAallB,KAAO,QAC1CpC,KAAKknB,WAAWK,WAAavnB,KAAKonB,iBAAiBrjB,QACnD/D,KAAKknB,WAAW1N,YAAcxZ,KAAKgnB,gBAAgBxN,YACnDxZ,KAAKwnB,qBAAuB,GAC5BxnB,KAAKomB,aAAe,IAAI,QACpBpmB,KAAKoY,UAAUmC,YAAclC,OAAOM,iBACpC3Y,KAAKoY,UAAUoC,aAAenC,OAAOM,kBAzCjD,yDA8CI,SAAmBW,GACf,IAAI3W,EAAS,QAAgB8kB,IAAK,WAC9B/jB,EAAW,QAAoBC,MAAOhB,EAAOe,UAEjDA,EAAU,SAAUI,MAAQwV,EAE5B,IAAIoO,EAAa,CAAE9jB,eAAgBjB,EAAOiB,eAAgBC,aAAclB,EAAOkB,aAAcH,SAAUA,GACnGD,EAAW,IAAI,QAAsBikB,GACzC,OAAOjkB,IAtDf,+BAyDI,SAAkB2G,GAG8E,IAH5Dud,IAG4D,yDAF5FC,EAE4F,uCAD5FpB,EAC4F,uDADxE,SACpBC,EAA4F,uDAAtE,EAAUoB,EAA4D,uDAAjC,KAAMC,EAA2B,uDAAH,GACnFC,EAAa,IAAI,OAAYvB,GAC/BmB,IACAvd,EAAK3G,SAAW,IAAI,OAA2B,CAC3CnB,MAAOylB,EACPpf,aAAa,EACbqK,QAAS,GACTyJ,UAAW,EACXhV,aAAc,EACdiV,UAAW,EACXvK,KAAM,UAKdnS,KAAKwnB,qBAAqB/c,KAAK,IAAI,EAC/BzK,KAAKgnB,gBACL5c,EACApK,KAAKomB,aACLpmB,KAAKonB,iBAAiBrjB,QACtB6jB,EACA5nB,KAAKonB,iBAAiBE,aACtBS,EACAtB,EACAoB,EACAC,IAEJ9nB,KAAKgnB,gBAAgBniB,IAAIuF,KAvFjC,4BA0FI,WACIpK,KAAKomB,aAAa5gB,EAAIxF,KAAKoY,UAAUmC,YAAclC,OAAOM,iBAC1D3Y,KAAKomB,aAAa3gB,EAAIzF,KAAKoY,UAAUoC,aAAenC,OAAOM,mBA5FnE,oBA+FI,WAAM,WACF3Y,KAAKwnB,qBAAqBjb,SAAQ,SAAAqT,GAC9BA,EAAOxV,KAAK3G,SAAWmc,EAAOmH,mBAC9B,EAAKG,WAAWriB,IAAI+a,EAAOxV,SAG/BpK,KAAKiE,SAAS0C,gBAAgB,MAC9B3G,KAAKiE,SAASzD,OAAOR,KAAKknB,WAAYlnB,KAAKmE,QAE3CnE,KAAKwnB,qBAAqBjb,SAAQ,SAAAqT,GAC9BA,EAAOxV,KAAK3G,SAAWmc,EAAOgH,iBAC9B,EAAKI,gBAAgBniB,IAAI+a,EAAOxV,aA1G5C,KAqHM,SAAU4d,EAAUrQ,GACtB,EAAYA,EACZ,EAAS,IAAI,QAAyB,GAAIU,OAAOC,WAAaD,OAAOE,YAAa,EAAG,KACrF,EAAOzT,SAASP,IAAI,GAAI,GAAI,KAC5B,EAAOU,OAAO,EAAG,EAAG,GAEpB,EAAQ,IAAI,QAEZ,EAAW,IAAI,QAAqB,CAACgjB,WAAW,EAAMzP,OAAO,IAE7D,EAASC,cAAe,UACxB,EAASC,cAAeL,OAAOM,kBAC/B,EAASC,QAAQP,OAAOC,WAAYD,OAAOE,aAC3C,EAAUS,YAAa,EAASH,YAChCqN,EAAW,IAAIgC,EAAA,KAAc,EAAQ,GACrC,EAAU7mB,MAAMyD,SAAW,WAC3B,EAAUzD,MAAMyX,IAAM,MACtB,EAAUzX,MAAM0X,KAAO,MACvBd,EAAQ,IAAI,WACZA,EAAMY,WAAWxX,MAAM4X,OAAS,MAChC,EAAUD,YAAaf,EAAMY,YAG7B,IAAM3C,EAAI,UAEJmD,EAAO,CACTnD,EAAI,SAAUA,EAAI,SAClBA,EAAI,SAAUA,EAAI,SAClBA,EAAI,SAAUA,EAAI,UAGhBoD,GAAc,IAAI,QAA0BxR,KAAMuR,GACxDC,EAAYC,QAAU,OAEtB,EAAMgO,WAAajO,EACnB,EAAME,YAAcF,EAGpB,IAAIG,EAAQ,IAAI,OAChBA,EAAM3U,SAASU,EAAI,IACnBiU,EAAM3U,SAASW,EAAI,IACnBgU,EAAM3U,SAASY,EAAI,IACnB,EAAMb,IAAI4U,GAGV,IAAI0O,GAAe,IAAI,SAAsBrgB,KAAM,sBACtDqgB,EAAatf,MAAQsf,EAAarf,MAAQ,QAC1Cqf,EAAa9nB,OAAOkE,IAAK,GAAI,IAC1B,IAAI6jB,EAAgB,IAAI,OAAyB,CAAExpB,IAAKupB,EAAchW,KAAM,SAC3EkW,EAAgB,IAAI,QAAoB,IAAM,IAAM,EAAG,GACvD7a,EAAQ,IAAI,OAAW6a,EAAeD,GAC1C5a,EAAM1I,SAASW,GAAK,KACpB+H,EAAMpB,SAAS5G,EAAI7D,KAAKic,GAAK,EAG1BuI,EAAK,IAAI,EAAkB,EAAO,EAAW,EAAU,GAEvD,IAAIvM,EAAa,IAAI,OACjB,IAAIC,EAAA,KAAmB,GAAI,GAAI,GAAI,EAAG,GACtC,IAAI,OAAwB,KAEhCD,EAAW9U,SAASU,GAAK,GACzB,IAAI8iB,EAAa,IAAI,OACjB,IAAI,QAAsB,IAC1B,IAAI,OAAwB,KAE5BC,EAAa,IAAI,OACjB,IAAI,OAAwB,GAAI,GAAI,GAAI,IACxC,IAAI,OAAwB,KAEhCA,EAAWzjB,SAASU,GAAK,GACzB+iB,EAAWzjB,SAASW,GAAK,GAEzB0gB,EAAGpM,kBAAkBH,GAAY,EAAM,KAAM,EAAU,GACvDuM,EAAGpM,kBAAkBuO,GAAY,EAAM,KAAM,MAAU,OACvDnC,EAAGpM,kBAAkBwO,GAAY,EAAM,KAAM,KAAU,MAGvD,IAAIC,EAAW,IAAI,OACf,IAAI,QAAsB,IAC1B,IAAI,OAAwB,CACxBlmB,MAAO,YAGfkmB,EAAS1jB,SAASC,KAAK6U,EAAW9U,UAClC0jB,EAAS1jB,SAASY,GAAK,GACvB,EAAMb,IAAI2jB,GAEVnQ,OAAO4F,iBAAkB,SAAUc,GACnClH,IAIJ,SAASkH,IAEL,EAAOG,OAAS7G,OAAOC,WAAaD,OAAOE,YAC3C,EAAO4G,yBACPgH,EAAGpH,iBACH,EAASnG,QAASP,OAAOC,WAAYD,OAAOE,aAIhD,SAASV,IACLD,sBAAuBC,GACvBrX,IACA0lB,EAAShO,SACTD,EAAMC,SAGV,SAAS1X,IAEL2lB,EAAG3lB,W,uBCrRP,IAAIioB,EAAW,SAAU9pB,GACvB,aAEA,IAEI4D,EAFAmmB,EAAKnpB,OAAO6H,UACZuhB,EAASD,EAAGE,eAEZC,EAA4B,oBAAXC,OAAwBA,OAAS,GAClDC,EAAiBF,EAAQG,UAAY,aACrCC,EAAsBJ,EAAQK,eAAiB,kBAC/CC,EAAoBN,EAAQO,aAAe,gBAE/C,SAASC,EAAOpN,EAAK5S,EAAKvF,GAOxB,OANAvE,OAAO+pB,eAAerN,EAAK5S,EAAK,CAC9BvF,MAAOA,EACPylB,YAAY,EACZC,cAAc,EACdC,UAAU,IAELxN,EAAI5S,GAEb,IAEEggB,EAAO,GAAI,IACX,MAAOnf,GACPmf,EAAS,SAASpN,EAAK5S,EAAKvF,GAC1B,OAAOmY,EAAI5S,GAAOvF,GAItB,SAAS4lB,EAAKC,EAASC,EAAS9f,EAAM+f,GAEpC,IAAIC,EAAiBF,GAAWA,EAAQxiB,qBAAqB2iB,EAAYH,EAAUG,EAC/EC,EAAYzqB,OAAO0qB,OAAOH,EAAe1iB,WACzC8iB,EAAU,IAAIC,EAAQN,GAAe,IAMzC,OAFAG,EAAUI,QAAUC,EAAiBV,EAAS7f,EAAMogB,GAE7CF,EAcT,SAASM,EAASzgB,EAAIoS,EAAK3S,GACzB,IACE,MAAO,CAAElH,KAAM,SAAUkH,IAAKO,EAAG0gB,KAAKtO,EAAK3S,IAC3C,MAAOY,GACP,MAAO,CAAE9H,KAAM,QAASkH,IAAKY,IAhBjCvL,EAAQ+qB,KAAOA,EAoBf,IAAIc,EAAyB,iBACzBC,EAAyB,iBACzBC,EAAoB,YACpBC,EAAoB,YAIpBC,EAAmB,GAMvB,SAASb,KACT,SAASc,KACT,SAASC,KAIT,IAAIC,EAAoB,GACxB1B,EAAO0B,EAAmBhC,GAAgB,WACxC,OAAO/oB,QAGT,IAAIgrB,EAAWzrB,OAAO0rB,eAClBC,EAA0BF,GAAYA,EAASA,EAAS5W,EAAO,MAC/D8W,GACAA,IAA4BxC,GAC5BC,EAAO4B,KAAKW,EAAyBnC,KAGvCgC,EAAoBG,GAGtB,IAAIC,EAAKL,EAA2B1jB,UAClC2iB,EAAU3iB,UAAY7H,OAAO0qB,OAAOc,GAYtC,SAASK,EAAsBhkB,GAC7B,CAAC,OAAQ,QAAS,UAAUmF,SAAQ,SAAS8e,GAC3ChC,EAAOjiB,EAAWikB,GAAQ,SAAS/hB,GACjC,OAAOtJ,KAAKoqB,QAAQiB,EAAQ/hB,SAkClC,SAASgiB,EAActB,EAAWuB,GAChC,SAASC,EAAOH,EAAQ/hB,EAAK9J,EAAS0J,GACpC,IAAIuiB,EAASnB,EAASN,EAAUqB,GAASrB,EAAW1gB,GACpD,GAAoB,UAAhBmiB,EAAOrpB,KAEJ,CACL,IAAInC,EAASwrB,EAAOniB,IAChBxF,EAAQ7D,EAAO6D,MACnB,OAAIA,GACiB,kBAAVA,GACP6kB,EAAO4B,KAAKzmB,EAAO,WACdynB,EAAY/rB,QAAQsE,EAAM4nB,SAAS/hB,MAAK,SAAS7F,GACtD0nB,EAAO,OAAQ1nB,EAAOtE,EAAS0J,MAC9B,SAASgB,GACVshB,EAAO,QAASthB,EAAK1K,EAAS0J,MAI3BqiB,EAAY/rB,QAAQsE,GAAO6F,MAAK,SAASgiB,GAI9C1rB,EAAO6D,MAAQ6nB,EACfnsB,EAAQS,MACP,SAASuJ,GAGV,OAAOgiB,EAAO,QAAShiB,EAAOhK,EAAS0J,MAvBzCA,EAAOuiB,EAAOniB,KA4BlB,IAAIsiB,EAEJ,SAASC,EAAQR,EAAQ/hB,GACvB,SAASwiB,IACP,OAAO,IAAIP,GAAY,SAAS/rB,EAAS0J,GACvCsiB,EAAOH,EAAQ/hB,EAAK9J,EAAS0J,MAIjC,OAAO0iB,EAaLA,EAAkBA,EAAgBjiB,KAChCmiB,EAGAA,GACEA,IAKR9rB,KAAKoqB,QAAUyB,EA2BjB,SAASxB,EAAiBV,EAAS7f,EAAMogB,GACvC,IAAItjB,EAAQ4jB,EAEZ,OAAO,SAAgBa,EAAQ/hB,GAC7B,GAAI1C,IAAU8jB,EACZ,MAAM,IAAItrB,MAAM,gCAGlB,GAAIwH,IAAU+jB,EAAmB,CAC/B,GAAe,UAAXU,EACF,MAAM/hB,EAKR,OAAOyiB,IAGT7B,EAAQmB,OAASA,EACjBnB,EAAQ5gB,IAAMA,EAEd,MAAO,EAAM,CACX,IAAI0iB,EAAW9B,EAAQ8B,SACvB,GAAIA,EAAU,CACZ,IAAIC,EAAiBC,EAAoBF,EAAU9B,GACnD,GAAI+B,EAAgB,CAClB,GAAIA,IAAmBrB,EAAkB,SACzC,OAAOqB,GAIX,GAAuB,SAAnB/B,EAAQmB,OAGVnB,EAAQiC,KAAOjC,EAAQkC,MAAQlC,EAAQ5gB,SAElC,GAAuB,UAAnB4gB,EAAQmB,OAAoB,CACrC,GAAIzkB,IAAU4jB,EAEZ,MADA5jB,EAAQ+jB,EACFT,EAAQ5gB,IAGhB4gB,EAAQmC,kBAAkBnC,EAAQ5gB,SAEN,WAAnB4gB,EAAQmB,QACjBnB,EAAQoC,OAAO,SAAUpC,EAAQ5gB,KAGnC1C,EAAQ8jB,EAER,IAAIe,EAASnB,EAASX,EAAS7f,EAAMogB,GACrC,GAAoB,WAAhBuB,EAAOrpB,KAAmB,CAO5B,GAJAwE,EAAQsjB,EAAQzgB,KACZkhB,EACAF,EAEAgB,EAAOniB,MAAQshB,EACjB,SAGF,MAAO,CACL9mB,MAAO2nB,EAAOniB,IACdG,KAAMygB,EAAQzgB,MAGS,UAAhBgiB,EAAOrpB,OAChBwE,EAAQ+jB,EAGRT,EAAQmB,OAAS,QACjBnB,EAAQ5gB,IAAMmiB,EAAOniB,OAU7B,SAAS4iB,EAAoBF,EAAU9B,GACrC,IAAImB,EAASW,EAAShD,SAASkB,EAAQmB,QACvC,GAAIA,IAAW9oB,EAAW,CAKxB,GAFA2nB,EAAQ8B,SAAW,KAEI,UAAnB9B,EAAQmB,OAAoB,CAE9B,GAAIW,EAAShD,SAAS,YAGpBkB,EAAQmB,OAAS,SACjBnB,EAAQ5gB,IAAM/G,EACd2pB,EAAoBF,EAAU9B,GAEP,UAAnBA,EAAQmB,QAGV,OAAOT,EAIXV,EAAQmB,OAAS,QACjBnB,EAAQ5gB,IAAM,IAAIijB,UAChB,kDAGJ,OAAO3B,EAGT,IAAIa,EAASnB,EAASe,EAAQW,EAAShD,SAAUkB,EAAQ5gB,KAEzD,GAAoB,UAAhBmiB,EAAOrpB,KAIT,OAHA8nB,EAAQmB,OAAS,QACjBnB,EAAQ5gB,IAAMmiB,EAAOniB,IACrB4gB,EAAQ8B,SAAW,KACZpB,EAGT,IAAIrhB,EAAOkiB,EAAOniB,IAElB,OAAMC,EAOFA,EAAKE,MAGPygB,EAAQ8B,EAASQ,YAAcjjB,EAAKzF,MAGpComB,EAAQzZ,KAAOub,EAASS,QAQD,WAAnBvC,EAAQmB,SACVnB,EAAQmB,OAAS,OACjBnB,EAAQ5gB,IAAM/G,GAUlB2nB,EAAQ8B,SAAW,KACZpB,GANErhB,GA3BP2gB,EAAQmB,OAAS,QACjBnB,EAAQ5gB,IAAM,IAAIijB,UAAU,oCAC5BrC,EAAQ8B,SAAW,KACZpB,GAoDX,SAAS8B,EAAaC,GACpB,IAAIC,EAAQ,CAAEC,OAAQF,EAAK,IAEvB,KAAKA,IACPC,EAAME,SAAWH,EAAK,IAGpB,KAAKA,IACPC,EAAMG,WAAaJ,EAAK,GACxBC,EAAMI,SAAWL,EAAK,IAGxB3sB,KAAKitB,WAAWxiB,KAAKmiB,GAGvB,SAASM,EAAcN,GACrB,IAAInB,EAASmB,EAAMO,YAAc,GACjC1B,EAAOrpB,KAAO,gBACPqpB,EAAOniB,IACdsjB,EAAMO,WAAa1B,EAGrB,SAAStB,EAAQN,GAIf7pB,KAAKitB,WAAa,CAAC,CAAEJ,OAAQ,SAC7BhD,EAAYtd,QAAQmgB,EAAc1sB,MAClCA,KAAKotB,OAAM,GA8Bb,SAAShZ,EAAOiZ,GACd,GAAIA,EAAU,CACZ,IAAIC,EAAiBD,EAAStE,GAC9B,GAAIuE,EACF,OAAOA,EAAe/C,KAAK8C,GAG7B,GAA6B,oBAAlBA,EAAS5c,KAClB,OAAO4c,EAGT,IAAKxM,MAAMwM,EAAS7iB,QAAS,CAC3B,IAAIuB,GAAK,EAAG0E,EAAO,SAASA,IAC1B,QAAS1E,EAAIshB,EAAS7iB,OACpB,GAAIme,EAAO4B,KAAK8C,EAAUthB,GAGxB,OAFA0E,EAAK3M,MAAQupB,EAASthB,GACtB0E,EAAKhH,MAAO,EACLgH,EAOX,OAHAA,EAAK3M,MAAQvB,EACbkO,EAAKhH,MAAO,EAELgH,GAGT,OAAOA,EAAKA,KAAOA,GAKvB,MAAO,CAAEA,KAAMsb,GAIjB,SAASA,IACP,MAAO,CAAEjoB,MAAOvB,EAAWkH,MAAM,GA+MnC,OA7mBAohB,EAAkBzjB,UAAY0jB,EAC9BzB,EAAO8B,EAAI,cAAeL,GAC1BzB,EAAOyB,EAA4B,cAAeD,GAClDA,EAAkB0C,YAAclE,EAC9ByB,EACA3B,EACA,qBAaFxqB,EAAQ6uB,oBAAsB,SAASC,GACrC,IAAIC,EAAyB,oBAAXD,GAAyBA,EAAOE,YAClD,QAAOD,IACHA,IAAS7C,GAG2B,uBAAnC6C,EAAKH,aAAeG,EAAKlc,QAIhC7S,EAAQivB,KAAO,SAASH,GAQtB,OAPIluB,OAAOsuB,eACTtuB,OAAOsuB,eAAeJ,EAAQ3C,IAE9B2C,EAAOK,UAAYhD,EACnBzB,EAAOoE,EAAQtE,EAAmB,sBAEpCsE,EAAOrmB,UAAY7H,OAAO0qB,OAAOkB,GAC1BsC,GAOT9uB,EAAQovB,MAAQ,SAASzkB,GACvB,MAAO,CAAEoiB,QAASpiB,IAsEpB8hB,EAAsBE,EAAclkB,WACpCiiB,EAAOiC,EAAclkB,UAAW6hB,GAAqB,WACnD,OAAOjpB,QAETrB,EAAQ2sB,cAAgBA,EAKxB3sB,EAAQqvB,MAAQ,SAASrE,EAASC,EAAS9f,EAAM+f,EAAa0B,QACxC,IAAhBA,IAAwBA,EAAc7hB,SAE1C,IAAIukB,EAAO,IAAI3C,EACb5B,EAAKC,EAASC,EAAS9f,EAAM+f,GAC7B0B,GAGF,OAAO5sB,EAAQ6uB,oBAAoB5D,GAC/BqE,EACAA,EAAKxd,OAAO9G,MAAK,SAAS1J,GACxB,OAAOA,EAAOwJ,KAAOxJ,EAAO6D,MAAQmqB,EAAKxd,WAuKjD2a,EAAsBD,GAEtB9B,EAAO8B,EAAIhC,EAAmB,aAO9BE,EAAO8B,EAAIpC,GAAgB,WACzB,OAAO/oB,QAGTqpB,EAAO8B,EAAI,YAAY,WACrB,MAAO,wBAkCTxsB,EAAQW,KAAO,SAAS6N,GACtB,IAAI7N,EAAO,GACX,IAAK,IAAI+J,KAAO8D,EACd7N,EAAKmL,KAAKpB,GAMZ,OAJA/J,EAAK4uB,UAIE,SAASzd,IACd,MAAOnR,EAAKkL,OAAQ,CAClB,IAAInB,EAAM/J,EAAK6uB,MACf,GAAI9kB,KAAO8D,EAGT,OAFAsD,EAAK3M,MAAQuF,EACboH,EAAKhH,MAAO,EACLgH,EAQX,OADAA,EAAKhH,MAAO,EACLgH,IAsCX9R,EAAQyV,OAASA,EAMjB+V,EAAQ/iB,UAAY,CAClBumB,YAAaxD,EAEbiD,MAAO,SAASgB,GAcd,GAbApuB,KAAKquB,KAAO,EACZruB,KAAKyQ,KAAO,EAGZzQ,KAAKmsB,KAAOnsB,KAAKosB,MAAQ7pB,EACzBvC,KAAKyJ,MAAO,EACZzJ,KAAKgsB,SAAW,KAEhBhsB,KAAKqrB,OAAS,OACdrrB,KAAKsJ,IAAM/G,EAEXvC,KAAKitB,WAAW1gB,QAAQ2gB,IAEnBkB,EACH,IAAK,IAAI5c,KAAQxR,KAEQ,MAAnBwR,EAAK6R,OAAO,IACZsF,EAAO4B,KAAKvqB,KAAMwR,KACjBqP,OAAOrP,EAAK8c,MAAM,MACrBtuB,KAAKwR,GAAQjP,IAMrBgsB,KAAM,WACJvuB,KAAKyJ,MAAO,EAEZ,IAAI+kB,EAAYxuB,KAAKitB,WAAW,GAC5BwB,EAAaD,EAAUrB,WAC3B,GAAwB,UAApBsB,EAAWrsB,KACb,MAAMqsB,EAAWnlB,IAGnB,OAAOtJ,KAAK0uB,MAGdrC,kBAAmB,SAASsC,GAC1B,GAAI3uB,KAAKyJ,KACP,MAAMklB,EAGR,IAAIzE,EAAUlqB,KACd,SAAS4uB,EAAOC,EAAKC,GAYnB,OAXArD,EAAOrpB,KAAO,QACdqpB,EAAOniB,IAAMqlB,EACbzE,EAAQzZ,KAAOoe,EAEXC,IAGF5E,EAAQmB,OAAS,OACjBnB,EAAQ5gB,IAAM/G,KAGNusB,EAGZ,IAAK,IAAI/iB,EAAI/L,KAAKitB,WAAWziB,OAAS,EAAGuB,GAAK,IAAKA,EAAG,CACpD,IAAI6gB,EAAQ5sB,KAAKitB,WAAWlhB,GACxB0f,EAASmB,EAAMO,WAEnB,GAAqB,SAAjBP,EAAMC,OAIR,OAAO+B,EAAO,OAGhB,GAAIhC,EAAMC,QAAU7sB,KAAKquB,KAAM,CAC7B,IAAIU,EAAWpG,EAAO4B,KAAKqC,EAAO,YAC9BoC,EAAarG,EAAO4B,KAAKqC,EAAO,cAEpC,GAAImC,GAAYC,EAAY,CAC1B,GAAIhvB,KAAKquB,KAAOzB,EAAME,SACpB,OAAO8B,EAAOhC,EAAME,UAAU,GACzB,GAAI9sB,KAAKquB,KAAOzB,EAAMG,WAC3B,OAAO6B,EAAOhC,EAAMG,iBAGjB,GAAIgC,GACT,GAAI/uB,KAAKquB,KAAOzB,EAAME,SACpB,OAAO8B,EAAOhC,EAAME,UAAU,OAG3B,KAAIkC,EAMT,MAAM,IAAI5vB,MAAM,0CALhB,GAAIY,KAAKquB,KAAOzB,EAAMG,WACpB,OAAO6B,EAAOhC,EAAMG,gBAU9BT,OAAQ,SAASlqB,EAAMkH,GACrB,IAAK,IAAIyC,EAAI/L,KAAKitB,WAAWziB,OAAS,EAAGuB,GAAK,IAAKA,EAAG,CACpD,IAAI6gB,EAAQ5sB,KAAKitB,WAAWlhB,GAC5B,GAAI6gB,EAAMC,QAAU7sB,KAAKquB,MACrB1F,EAAO4B,KAAKqC,EAAO,eACnB5sB,KAAKquB,KAAOzB,EAAMG,WAAY,CAChC,IAAIkC,EAAerC,EACnB,OAIAqC,IACU,UAAT7sB,GACS,aAATA,IACD6sB,EAAapC,QAAUvjB,GACvBA,GAAO2lB,EAAalC,aAGtBkC,EAAe,MAGjB,IAAIxD,EAASwD,EAAeA,EAAa9B,WAAa,GAItD,OAHA1B,EAAOrpB,KAAOA,EACdqpB,EAAOniB,IAAMA,EAET2lB,GACFjvB,KAAKqrB,OAAS,OACdrrB,KAAKyQ,KAAOwe,EAAalC,WAClBnC,GAGF5qB,KAAKkvB,SAASzD,IAGvByD,SAAU,SAASzD,EAAQuB,GACzB,GAAoB,UAAhBvB,EAAOrpB,KACT,MAAMqpB,EAAOniB,IAcf,MAXoB,UAAhBmiB,EAAOrpB,MACS,aAAhBqpB,EAAOrpB,KACTpC,KAAKyQ,KAAOgb,EAAOniB,IACM,WAAhBmiB,EAAOrpB,MAChBpC,KAAK0uB,KAAO1uB,KAAKsJ,IAAMmiB,EAAOniB,IAC9BtJ,KAAKqrB,OAAS,SACdrrB,KAAKyQ,KAAO,OACa,WAAhBgb,EAAOrpB,MAAqB4qB,IACrChtB,KAAKyQ,KAAOuc,GAGPpC,GAGTuE,OAAQ,SAASpC,GACf,IAAK,IAAIhhB,EAAI/L,KAAKitB,WAAWziB,OAAS,EAAGuB,GAAK,IAAKA,EAAG,CACpD,IAAI6gB,EAAQ5sB,KAAKitB,WAAWlhB,GAC5B,GAAI6gB,EAAMG,aAAeA,EAGvB,OAFA/sB,KAAKkvB,SAAStC,EAAMO,WAAYP,EAAMI,UACtCE,EAAcN,GACPhC,IAKb,MAAS,SAASiC,GAChB,IAAK,IAAI9gB,EAAI/L,KAAKitB,WAAWziB,OAAS,EAAGuB,GAAK,IAAKA,EAAG,CACpD,IAAI6gB,EAAQ5sB,KAAKitB,WAAWlhB,GAC5B,GAAI6gB,EAAMC,SAAWA,EAAQ,CAC3B,IAAIpB,EAASmB,EAAMO,WACnB,GAAoB,UAAhB1B,EAAOrpB,KAAkB,CAC3B,IAAIgtB,EAAS3D,EAAOniB,IACpB4jB,EAAcN,GAEhB,OAAOwC,GAMX,MAAM,IAAIhwB,MAAM,0BAGlBiwB,cAAe,SAAShC,EAAUb,EAAYC,GAa5C,OAZAzsB,KAAKgsB,SAAW,CACdhD,SAAU5U,EAAOiZ,GACjBb,WAAYA,EACZC,QAASA,GAGS,SAAhBzsB,KAAKqrB,SAGPrrB,KAAKsJ,IAAM/G,GAGNqoB,IAQJjsB,EA9sBK,CAqtBiBD,EAAOC,SAGtC,IACE2wB,mBAAqB7G,EACrB,MAAO8G,GAWmB,kBAAfC,WACTA,WAAWF,mBAAqB7G,EAEhC5R,SAAS,IAAK,yBAAdA,CAAwC4R,K,kCC9uB5C,IAAIroB,EAAI,EAAQ,QACZX,EAAS,EAAQ,QACjBgwB,EAAkB,EAAQ,QAC1B/vB,EAAsB,EAAQ,QAC9B2iB,EAAoB,EAAQ,QAC5BD,EAAW,EAAQ,QACnBsN,EAAqB,EAAQ,QAC7BC,EAAiB,EAAQ,QACzBC,EAA+B,EAAQ,QAEvCC,EAAsBD,EAA6B,UAEnDrD,EAAY9sB,EAAO8sB,UACnB/H,EAAM7iB,KAAK6iB,IACXS,EAAMtjB,KAAKsjB,IACX6K,EAAmB,iBACnBC,EAAkC,kCAKtC3vB,EAAE,CAAEE,OAAQ,QAASC,OAAO,EAAMkjB,QAASoM,GAAuB,CAChEnlB,OAAQ,SAAgBqK,EAAOib,GAC7B,IAIIC,EAAaC,EAAmBC,EAAG5hB,EAAG6hB,EAAMC,EAJ5CC,EAAIlO,EAASpiB,MACbuwB,EAAMlO,EAAkBiO,GACxBE,EAAcf,EAAgB1a,EAAOwb,GACrCE,EAAkBzmB,UAAUQ,OAWhC,GATwB,IAApBimB,EACFR,EAAcC,EAAoB,EACL,IAApBO,GACTR,EAAc,EACdC,EAAoBK,EAAMC,IAE1BP,EAAcQ,EAAkB,EAChCP,EAAoBjL,EAAIT,EAAI9kB,EAAoBswB,GAAc,GAAIO,EAAMC,IAEtED,EAAMN,EAAcC,EAAoBJ,EAC1C,MAAMvD,EAAUwD,GAGlB,IADAI,EAAIT,EAAmBY,EAAGJ,GACrB3hB,EAAI,EAAGA,EAAI2hB,EAAmB3hB,IACjC6hB,EAAOI,EAAcjiB,EACjB6hB,KAAQE,GAAGX,EAAeQ,EAAG5hB,EAAG+hB,EAAEF,IAGxC,GADAD,EAAE3lB,OAAS0lB,EACPD,EAAcC,EAAmB,CACnC,IAAK3hB,EAAIiiB,EAAajiB,EAAIgiB,EAAML,EAAmB3hB,IACjD6hB,EAAO7hB,EAAI2hB,EACXG,EAAK9hB,EAAI0hB,EACLG,KAAQE,EAAGA,EAAED,GAAMC,EAAEF,UACbE,EAAED,GAEhB,IAAK9hB,EAAIgiB,EAAKhiB,EAAIgiB,EAAML,EAAoBD,EAAa1hB,WAAY+hB,EAAE/hB,EAAI,QACtE,GAAI0hB,EAAcC,EACvB,IAAK3hB,EAAIgiB,EAAML,EAAmB3hB,EAAIiiB,EAAajiB,IACjD6hB,EAAO7hB,EAAI2hB,EAAoB,EAC/BG,EAAK9hB,EAAI0hB,EAAc,EACnBG,KAAQE,EAAGA,EAAED,GAAMC,EAAEF,UACbE,EAAED,GAGlB,IAAK9hB,EAAI,EAAGA,EAAI0hB,EAAa1hB,IAC3B+hB,EAAE/hB,EAAIiiB,GAAexmB,UAAUuE,EAAI,GAGrC,OADA+hB,EAAE9lB,OAAS+lB,EAAML,EAAoBD,EAC9BE,M,qBCnEX,IAAIO,EAAa,EAAQ,QAErBljB,EAAQ7L,KAAK6L,MAEbmjB,EAAY,SAAUjN,EAAOF,GAC/B,IAAIhZ,EAASkZ,EAAMlZ,OACfomB,EAASpjB,EAAMhD,EAAS,GAC5B,OAAOA,EAAS,EAAIqmB,EAAcnN,EAAOF,GAAa9a,EACpDgb,EACAiN,EAAUD,EAAWhN,EAAO,EAAGkN,GAASpN,GACxCmN,EAAUD,EAAWhN,EAAOkN,GAASpN,GACrCA,IAIAqN,EAAgB,SAAUnN,EAAOF,GACnC,IAEIsN,EAASjL,EAFTrb,EAASkZ,EAAMlZ,OACfuB,EAAI,EAGR,MAAOA,EAAIvB,EAAQ,CACjBqb,EAAI9Z,EACJ+kB,EAAUpN,EAAM3X,GAChB,MAAO8Z,GAAKrC,EAAUE,EAAMmC,EAAI,GAAIiL,GAAW,EAC7CpN,EAAMmC,GAAKnC,IAAQmC,GAEjBA,IAAM9Z,MAAK2X,EAAMmC,GAAKiL,GAC1B,OAAOpN,GAGPhb,EAAQ,SAAUgb,EAAO3K,EAAMgY,EAAOvN,GACxC,IAAIwN,EAAUjY,EAAKvO,OACfymB,EAAUF,EAAMvmB,OAChB0mB,EAAS,EACTC,EAAS,EAEb,MAAOD,EAASF,GAAWG,EAASF,EAClCvN,EAAMwN,EAASC,GAAWD,EAASF,GAAWG,EAASF,EACnDzN,EAAUzK,EAAKmY,GAASH,EAAMI,KAAY,EAAIpY,EAAKmY,KAAYH,EAAMI,KACrED,EAASF,EAAUjY,EAAKmY,KAAYH,EAAMI,KAC9C,OAAOzN,GAGXhlB,EAAOC,QAAUgyB,G,qBC3CjB,IAAIvwB,EAAI,EAAQ,QACZgiB,EAAW,EAAQ,QACnBgP,EAAa,EAAQ,QACrB9O,EAAQ,EAAQ,QAEhB+O,EAAsB/O,GAAM,WAAc8O,EAAW,MAIzDhxB,EAAE,CAAEE,OAAQ,SAAUgxB,MAAM,EAAM7N,OAAQ4N,GAAuB,CAC/D/xB,KAAM,SAAciyB,GAClB,OAAOH,EAAWhP,EAASmP,Q,mBCX/B7yB,EAAOC,QAAU,gxB,kCCCjB,IAAIyB,EAAI,EAAQ,QACZoxB,EAAO,EAAQ,QAAgC5yB,IAC/CgxB,EAA+B,EAAQ,QAEvCC,EAAsBD,EAA6B,OAKvDxvB,EAAE,CAAEE,OAAQ,QAASC,OAAO,EAAMkjB,QAASoM,GAAuB,CAChEjxB,IAAK,SAAa6yB,GAChB,OAAOD,EAAKxxB,KAAMyxB,EAAYznB,UAAUQ,OAAS,EAAIR,UAAU,QAAKzH,O,qBCZxE,IAAImvB,EAAK,EAAQ,QAEjBhzB,EAAOC,QAAU,eAAekkB,KAAK6O,I,mBCFrChzB,EAAOC,QAAU","file":"js/chunk-86717ca2.a441251c.js","sourcesContent":["var userAgent = require('../internals/engine-user-agent');\n\nvar firefox = userAgent.match(/firefox\\/(\\d+)/i);\n\nmodule.exports = !!firefox && +firefox[1];\n","var map = {\n\t\"./GlassFrontShader/F.glsl\": \"f430\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"08fd\";","'use strict';\nvar global = require('../internals/global');\nvar toIntegerOrInfinity = require('../internals/to-integer-or-infinity');\nvar toString = require('../internals/to-string');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\n\nvar RangeError = global.RangeError;\n\n// `String.prototype.repeat` method implementation\n// https://tc39.es/ecma262/#sec-string.prototype.repeat\nmodule.exports = function repeat(count) {\n  var str = toString(requireObjectCoercible(this));\n  var result = '';\n  var n = toIntegerOrInfinity(count);\n  if (n < 0 || n == Infinity) throw RangeError('Wrong number of repetitions');\n  for (;n > 0; (n >>>= 1) && (str += str)) if (n & 1) result += str;\n  return result;\n};\n","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ThreeFrontpageTest.vue?vue&type=style&index=0&id=530f970e&scoped=true&lang=css&\"","var $ = require('../internals/export');\nvar repeat = require('../internals/string-repeat');\n\n// `String.prototype.repeat` method\n// https://tc39.es/ecma262/#sec-string.prototype.repeat\n$({ target: 'String', proto: true }, {\n  repeat: repeat\n});\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('div',{ref:\"canvas-container\",attrs:{\"id\":\"canvas-container\"}},[_c('div',{staticClass:\"loading-container\",class:{\n            'loading-container--hidden': _vm.loadingStat.isLoaded,\n            'loading-container--none': _vm.loadingStat.noLoadingStat\n        }},[_c('div',{staticClass:\"load-stat\"},[_c('div',{staticClass:\"load-pgbar\",style:({\n                    width: 100 * _vm.loadingStat.loaded / _vm.loadingStat.total + '%'\n                })}),_c('div',{staticClass:\"load-text\"},[_vm._v(_vm._s(Math.round(100 * _vm.loadingStat.loaded / _vm.loadingStat.total))+\" %\")])])])]),_c('div',{ref:\"dom3d-container\",attrs:{\"id\":\"dom3d-container\"}},[_c('div',{ref:\"dom3d-test\",attrs:{\"id\":\"dom3d-test\"}},[_c('p',[_vm._v(\"HTML element: Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua\")])]),_c('div',{ref:\"dom3d-glass\",attrs:{\"id\":\"dom3d-glass\"},on:{\"click\":_vm.onGlassClick}},[_vm._m(0)])])])}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"dom3d-glass-ball\"},[_c('div',{staticClass:\"dom3d-glass-ball__text\"},[_vm._v(\"html element following object\")])])}]\n\nexport { render, staticRenderFns }","import {\n\tColor,\n\tMatrix4,\n\tMesh,\n\tPerspectiveCamera,\n\tPlane,\n\tShaderMaterial,\n\tUniformsUtils,\n\tVector3,\n\tVector4,\n\tWebGLRenderTarget\n} from 'three';\n\nclass Reflector extends Mesh {\n\n\tconstructor( geometry, options = {} ) {\n\n\t\tsuper( geometry );\n\n\t\tthis.type = 'Reflector';\n\n\t\tconst scope = this;\n\n\t\tconst color = ( options.color !== undefined ) ? new Color( options.color ) : new Color( 0x7F7F7F );\n\t\tconst textureWidth = options.textureWidth || 512;\n\t\tconst textureHeight = options.textureHeight || 512;\n\t\tconst clipBias = options.clipBias || 0;\n\t\tconst shader = options.shader || Reflector.ReflectorShader;\n\n\t\t//\n\n\t\tconst reflectorPlane = new Plane();\n\t\tconst normal = new Vector3();\n\t\tconst reflectorWorldPosition = new Vector3();\n\t\tconst cameraWorldPosition = new Vector3();\n\t\tconst rotationMatrix = new Matrix4();\n\t\tconst lookAtPosition = new Vector3( 0, 0, - 1 );\n\t\tconst clipPlane = new Vector4();\n\n\t\tconst view = new Vector3();\n\t\tconst target = new Vector3();\n\t\tconst q = new Vector4();\n\n\t\tconst textureMatrix = new Matrix4();\n\t\tconst virtualCamera = new PerspectiveCamera();\n\n\t\tconst renderTarget = new WebGLRenderTarget( textureWidth, textureHeight );\n\n\t\tconst material = new ShaderMaterial( {\n\t\t\tuniforms: UniformsUtils.clone( shader.uniforms ),\n\t\t\tfragmentShader: shader.fragmentShader,\n\t\t\tvertexShader: shader.vertexShader\n\t\t} );\n\n\t\tmaterial.uniforms[ 'tDiffuse' ].value = renderTarget.texture;\n\t\tmaterial.uniforms[ 'color' ].value = color;\n\t\tmaterial.uniforms[ 'textureMatrix' ].value = textureMatrix;\n\n\t\tthis.material = material;\n\n\t\tthis.onBeforeRender = function ( renderer, scene, camera ) {\n\n\t\t\treflectorWorldPosition.setFromMatrixPosition( scope.matrixWorld );\n\t\t\tcameraWorldPosition.setFromMatrixPosition( camera.matrixWorld );\n\n\t\t\trotationMatrix.extractRotation( scope.matrixWorld );\n\n\t\t\tnormal.set( 0, 0, 1 );\n\t\t\tnormal.applyMatrix4( rotationMatrix );\n\n\t\t\tview.subVectors( reflectorWorldPosition, cameraWorldPosition );\n\n\t\t\t// Avoid rendering when reflector is facing away\n\n\t\t\tif ( view.dot( normal ) > 0 ) return;\n\n\t\t\tview.reflect( normal ).negate();\n\t\t\tview.add( reflectorWorldPosition );\n\n\t\t\trotationMatrix.extractRotation( camera.matrixWorld );\n\n\t\t\tlookAtPosition.set( 0, 0, - 1 );\n\t\t\tlookAtPosition.applyMatrix4( rotationMatrix );\n\t\t\tlookAtPosition.add( cameraWorldPosition );\n\n\t\t\ttarget.subVectors( reflectorWorldPosition, lookAtPosition );\n\t\t\ttarget.reflect( normal ).negate();\n\t\t\ttarget.add( reflectorWorldPosition );\n\n\t\t\tvirtualCamera.position.copy( view );\n\t\t\tvirtualCamera.up.set( 0, 1, 0 );\n\t\t\tvirtualCamera.up.applyMatrix4( rotationMatrix );\n\t\t\tvirtualCamera.up.reflect( normal );\n\t\t\tvirtualCamera.lookAt( target );\n\n\t\t\tvirtualCamera.far = camera.far; // Used in WebGLBackground\n\n\t\t\tvirtualCamera.updateMatrixWorld();\n\t\t\tvirtualCamera.projectionMatrix.copy( camera.projectionMatrix );\n\n\t\t\t// Update the texture matrix\n\t\t\ttextureMatrix.set(\n\t\t\t\t0.5, 0.0, 0.0, 0.5,\n\t\t\t\t0.0, 0.5, 0.0, 0.5,\n\t\t\t\t0.0, 0.0, 0.5, 0.5,\n\t\t\t\t0.0, 0.0, 0.0, 1.0\n\t\t\t);\n\t\t\ttextureMatrix.multiply( virtualCamera.projectionMatrix );\n\t\t\ttextureMatrix.multiply( virtualCamera.matrixWorldInverse );\n\t\t\ttextureMatrix.multiply( scope.matrixWorld );\n\n\t\t\t// Now update projection matrix with new clip plane, implementing code from: http://www.terathon.com/code/oblique.html\n\t\t\t// Paper explaining this technique: http://www.terathon.com/lengyel/Lengyel-Oblique.pdf\n\t\t\treflectorPlane.setFromNormalAndCoplanarPoint( normal, reflectorWorldPosition );\n\t\t\treflectorPlane.applyMatrix4( virtualCamera.matrixWorldInverse );\n\n\t\t\tclipPlane.set( reflectorPlane.normal.x, reflectorPlane.normal.y, reflectorPlane.normal.z, reflectorPlane.constant );\n\n\t\t\tconst projectionMatrix = virtualCamera.projectionMatrix;\n\n\t\t\tq.x = ( Math.sign( clipPlane.x ) + projectionMatrix.elements[ 8 ] ) / projectionMatrix.elements[ 0 ];\n\t\t\tq.y = ( Math.sign( clipPlane.y ) + projectionMatrix.elements[ 9 ] ) / projectionMatrix.elements[ 5 ];\n\t\t\tq.z = - 1.0;\n\t\t\tq.w = ( 1.0 + projectionMatrix.elements[ 10 ] ) / projectionMatrix.elements[ 14 ];\n\n\t\t\t// Calculate the scaled plane vector\n\t\t\tclipPlane.multiplyScalar( 2.0 / clipPlane.dot( q ) );\n\n\t\t\t// Replacing the third row of the projection matrix\n\t\t\tprojectionMatrix.elements[ 2 ] = clipPlane.x;\n\t\t\tprojectionMatrix.elements[ 6 ] = clipPlane.y;\n\t\t\tprojectionMatrix.elements[ 10 ] = clipPlane.z + 1.0 - clipBias;\n\t\t\tprojectionMatrix.elements[ 14 ] = clipPlane.w;\n\n\t\t\t// Render\n\n\t\t\trenderTarget.texture.encoding = renderer.outputEncoding;\n\n\t\t\tscope.visible = false;\n\n\t\t\tconst currentRenderTarget = renderer.getRenderTarget();\n\n\t\t\tconst currentXrEnabled = renderer.xr.enabled;\n\t\t\tconst currentShadowAutoUpdate = renderer.shadowMap.autoUpdate;\n\n\t\t\trenderer.xr.enabled = false; // Avoid camera modification\n\t\t\trenderer.shadowMap.autoUpdate = false; // Avoid re-computing shadows\n\n\t\t\trenderer.setRenderTarget( renderTarget );\n\n\t\t\trenderer.state.buffers.depth.setMask( true ); // make sure the depth buffer is writable so it can be properly cleared, see #18897\n\n\t\t\tif ( renderer.autoClear === false ) renderer.clear();\n\t\t\trenderer.render( scene, virtualCamera );\n\n\t\t\trenderer.xr.enabled = currentXrEnabled;\n\t\t\trenderer.shadowMap.autoUpdate = currentShadowAutoUpdate;\n\n\t\t\trenderer.setRenderTarget( currentRenderTarget );\n\n\t\t\t// Restore viewport\n\n\t\t\tconst viewport = camera.viewport;\n\n\t\t\tif ( viewport !== undefined ) {\n\n\t\t\t\trenderer.state.viewport( viewport );\n\n\t\t\t}\n\n\t\t\tscope.visible = true;\n\n\t\t};\n\n\t\tthis.getRenderTarget = function () {\n\n\t\t\treturn renderTarget;\n\n\t\t};\n\n\t\tthis.dispose = function () {\n\n\t\t\trenderTarget.dispose();\n\t\t\tscope.material.dispose();\n\n\t\t};\n\n\t}\n\n}\n\nReflector.prototype.isReflector = true;\n\nReflector.ReflectorShader = {\n\n\tuniforms: {\n\n\t\t'color': {\n\t\t\tvalue: null\n\t\t},\n\n\t\t'tDiffuse': {\n\t\t\tvalue: null\n\t\t},\n\n\t\t'textureMatrix': {\n\t\t\tvalue: null\n\t\t}\n\n\t},\n\n\tvertexShader: /* glsl */`\n\t\tuniform mat4 textureMatrix;\n\t\tvarying vec4 vUv;\n\n\t\t#include <common>\n\t\t#include <logdepthbuf_pars_vertex>\n\n\t\tvoid main() {\n\n\t\t\tvUv = textureMatrix * vec4( position, 1.0 );\n\n\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n\t\t\t#include <logdepthbuf_vertex>\n\n\t\t}`,\n\n\tfragmentShader: /* glsl */`\n\t\tuniform vec3 color;\n\t\tuniform sampler2D tDiffuse;\n\t\tvarying vec4 vUv;\n\n\t\t#include <logdepthbuf_pars_fragment>\n\n\t\tfloat blendOverlay( float base, float blend ) {\n\n\t\t\treturn( base < 0.5 ? ( 2.0 * base * blend ) : ( 1.0 - 2.0 * ( 1.0 - base ) * ( 1.0 - blend ) ) );\n\n\t\t}\n\n\t\tvec3 blendOverlay( vec3 base, vec3 blend ) {\n\n\t\t\treturn vec3( blendOverlay( base.r, blend.r ), blendOverlay( base.g, blend.g ), blendOverlay( base.b, blend.b ) );\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\t#include <logdepthbuf_fragment>\n\n\t\t\tvec4 base = texture2DProj( tDiffuse, vUv );\n\t\t\tgl_FragColor = vec4( blendOverlay( base.rgb, color ), 1.0 );\n\n\t\t}`\n};\n\nexport { Reflector };\n","import {\r\n\tClock,\r\n\tColor,\r\n\tMatrix4,\r\n\tMesh,\r\n\tRepeatWrapping,\r\n\tShaderMaterial,\r\n\tTextureLoader,\r\n\tUniformsLib,\r\n\tUniformsUtils,\r\n\tVector2,\r\n\tVector4,\r\n    BufferGeometry,\r\n    Camera,\r\n    Material,\r\n    Group,\r\n    Scene\r\n} from 'three';\r\nimport { Reflector } from 'three/examples/jsm/objects/Reflector'\r\nimport { Refractor } from 'three/examples/jsm/objects/Refractor'\r\nimport { Water2Options } from 'three/examples/jsm/objects/Water2'\r\n/**\r\n * References:\r\n *\thttps://github.com/mrdoob/three.js/blob/dev/examples/jsm/objects/Water2.js\r\n *\r\n */\r\n\r\nclass SQWater extends Mesh {\r\n\r\n    material: ShaderMaterial\r\n\r\n\tconstructor( geometry: BufferGeometry, reflectionScene: Scene, options: Water2Options = {} ) {\r\n\r\n\t\tsuper( geometry );\r\n\r\n\t\tconst scope = this;\r\n\r\n\t\tconst color = ( options.color !== undefined ) ? new Color( options.color ) : new Color( 0xFFFFFF );\r\n\t\tconst textureWidth = options.textureWidth || 512;\r\n\t\tconst textureHeight = options.textureHeight || 512;\r\n\t\tconst clipBias = options.clipBias || 0;\r\n\t\tconst flowDirection = options.flowDirection || new Vector2( 1, 0 );\r\n\t\tconst flowSpeed = options.flowSpeed || 0.01;\r\n\t\tconst reflectivity = options.reflectivity || 0.5;\r\n\t\tconst scale = options.scale || 1;\r\n\t\tconst shader = WaterShader;\r\n\r\n\t\tconst textureLoader = new TextureLoader();\r\n\r\n\t\tconst normalMap0 = options.normalMap0 || textureLoader.load( './water/Water_1_M_Normal.jpg' );\r\n\t\tconst normalMap1 = options.normalMap1 || textureLoader.load( './water/Water_2_M_Normal.jpg' );\r\n\r\n\t\tconst cycle = 0.15; // a cycle of a flow map phase\r\n\t\tconst halfCycle = cycle * 0.5;\r\n\t\tconst textureMatrix = new Matrix4();\r\n\t\tconst clock = new Clock();\r\n        this.material = new ShaderMaterial()\r\n\t\t// internal components\r\n\r\n\t\tconst reflector = new Reflector( geometry, {\r\n\t\t\ttextureWidth: textureWidth,\r\n\t\t\ttextureHeight: textureHeight,\r\n\t\t\tclipBias: clipBias\r\n\t\t} );\r\n\r\n\t\treflector.matrixAutoUpdate = false\r\n\r\n\t\t// material\r\n\r\n\t\tthis.material = new ShaderMaterial( {\r\n\t\t\tuniforms: UniformsUtils.merge( [\r\n\t\t\t\tUniformsLib[ 'fog' ],\r\n\t\t\t\tshader.uniforms\r\n\t\t\t] ),\r\n\t\t\tvertexShader: shader.vertexShader,\r\n\t\t\tfragmentShader: shader.fragmentShader,\r\n\t\t\ttransparent: true,\r\n\t\t\tfog: true\r\n\t\t} );\r\n\r\n        this.material.uniforms[ 'flowDirection' ].value = flowDirection\r\n\r\n\t\t// maps\r\n\r\n\t\tnormalMap0.wrapS = normalMap0.wrapT = RepeatWrapping;\r\n\t\tnormalMap1.wrapS = normalMap1.wrapT = RepeatWrapping;\r\n\r\n\t\tthis.material.uniforms[ 'tReflectionMap' ].value = reflector.getRenderTarget().texture;\r\n\t\tthis.material.uniforms[ 'tNormalMap0' ].value = normalMap0;\r\n\t\tthis.material.uniforms[ 'tNormalMap1' ].value = normalMap1;\r\n\r\n\t\t// water\r\n\r\n\t\tthis.material.uniforms[ 'reflectivity' ].value = reflectivity;\r\n\t\tthis.material.uniforms[ 'textureMatrix' ].value = textureMatrix;\r\n\r\n\t\t// inital values\r\n\r\n\t\tthis.material.uniforms[ 'config' ].value.x = 0; // flowMapOffset0\r\n\t\tthis.material.uniforms[ 'config' ].value.y = halfCycle; // flowMapOffset1\r\n\t\tthis.material.uniforms[ 'config' ].value.z = halfCycle; // halfCycle\r\n\t\tthis.material.uniforms[ 'config' ].value.w = scale; // scale\r\n\r\n\t\t// functions\r\n\r\n\t\tfunction updateTextureMatrix( camera: Camera ) {\r\n\r\n\t\t\ttextureMatrix.set(\r\n\t\t\t\t0.5, 0.0, 0.0, 0.5,\r\n\t\t\t\t0.0, 0.5, 0.0, 0.5,\r\n\t\t\t\t0.0, 0.0, 0.5, 0.5,\r\n\t\t\t\t0.0, 0.0, 0.0, 1.0\r\n\t\t\t);\r\n\r\n\t\t\ttextureMatrix.multiply( camera.projectionMatrix );\r\n\t\t\ttextureMatrix.multiply( camera.matrixWorldInverse );\r\n\t\t\ttextureMatrix.multiply( scope.matrixWorld );\r\n\r\n\t\t}\r\n\r\n\t\tfunction updateFlow() {\r\n\r\n\t\t\tconst delta = clock.getDelta();\r\n\t\t\tconst config = scope.material.uniforms[ 'config' ];\r\n\r\n\t\t\tconfig.value.x += flowSpeed * delta; // flowMapOffset0\r\n\t\t\tconfig.value.y = config.value.x + halfCycle; // flowMapOffset1\r\n\r\n\t\t\t// Important: The distance between offsets should be always the value of \"halfCycle\".\r\n\t\t\t// Moreover, both offsets should be in the range of [ 0, cycle ].\r\n\t\t\t// This approach ensures a smooth water flow and avoids \"reset\" effects.\r\n\r\n\t\t\tif ( config.value.x >= cycle ) {\r\n\r\n\t\t\t\tconfig.value.x = 0;\r\n\t\t\t\tconfig.value.y = halfCycle;\r\n\r\n\t\t\t} else if ( config.value.y >= cycle ) {\r\n\r\n\t\t\t\tconfig.value.y = config.value.y - cycle;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t//\r\n\r\n\t\tthis.onBeforeRender = function ( renderer, scene, camera: Camera, geometry: BufferGeometry, material: Material, group: Group ) {\r\n\r\n\t\t\tupdateTextureMatrix( camera );\r\n\t\t\tupdateFlow();\r\n\r\n\t\t\tscope.visible = false;\r\n\r\n\t\t\treflector.matrixWorld.copy( scope.matrixWorld );\r\n\r\n\t\t\treflector.onBeforeRender( renderer, reflectionScene, camera, geometry, material, group );\r\n\r\n\t\t\tscope.visible = true;\r\n\r\n\t\t};\r\n\r\n\t}\r\n\r\n}\r\n\r\nconst WaterShader = {\r\n\r\n\tuniforms: {\r\n\r\n\t\t'reflectivity': {\r\n\t\t\ttype: 'f',\r\n\t\t\tvalue: 0\r\n\t\t},\r\n\r\n\t\t'tReflectionMap': {\r\n\t\t\ttype: 't',\r\n\t\t\tvalue: null\r\n\t\t},\r\n\r\n\t\t'tRefractionMap': {\r\n\t\t\ttype: 't',\r\n\t\t\tvalue: null\r\n\t\t},\r\n\r\n\t\t'tNormalMap0': {\r\n\t\t\ttype: 't',\r\n\t\t\tvalue: null\r\n\t\t},\r\n\r\n\t\t'tNormalMap1': {\r\n\t\t\ttype: 't',\r\n\t\t\tvalue: null\r\n\t\t},\r\n\r\n\t\t'textureMatrix': {\r\n\t\t\ttype: 'm4',\r\n\t\t\tvalue: null\r\n\t\t},\r\n\r\n\t\t'config': {\r\n\t\t\ttype: 'v4',\r\n\t\t\tvalue: new Vector4()\r\n\t\t},\r\n\r\n\t\t'flowDirection': {\r\n            type: 'v2',\r\n            value: new Vector2()\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tvertexShader: /* glsl */`\r\n\r\n\t\t#include <common>\r\n\t\t#include <fog_pars_vertex>\r\n\t\t#include <logdepthbuf_pars_vertex>\r\n\r\n\t\tuniform mat4 textureMatrix;\r\n\r\n\t\tvarying vec4 vCoord;\r\n\t\tvarying vec2 vUv;\r\n\t\tvarying vec3 vToEye;\r\n\r\n\t\tvoid main() {\r\n\r\n\t\t\tvUv = uv;\r\n\t\t\tvCoord = textureMatrix * vec4( position, 1.0 );\r\n\r\n\t\t\tvec4 worldPosition = modelMatrix * vec4( position, 1.0 );\r\n\t\t\tvToEye = cameraPosition - worldPosition.xyz;\r\n\r\n\t\t\tvec4 mvPosition =  viewMatrix * worldPosition; // used in fog_vertex\r\n\t\t\tgl_Position = projectionMatrix * mvPosition;\r\n\r\n\t\t\t#include <logdepthbuf_vertex>\r\n\t\t\t#include <fog_vertex>\r\n\r\n\t\t}`,\r\n\r\n\tfragmentShader: /* glsl */`\r\n\r\n\t\t#include <common>\r\n\t\t#include <fog_pars_fragment>\r\n\t\t#include <logdepthbuf_pars_fragment>\r\n\r\n\t\tuniform sampler2D tReflectionMap;\r\n\t\tuniform sampler2D tRefractionMap;\r\n\t\tuniform sampler2D tNormalMap0;\r\n\t\tuniform sampler2D tNormalMap1;\r\n\r\n\t\tuniform vec2 flowDirection;\r\n\r\n\t\tuniform float reflectivity;\r\n\t\tuniform vec4 config;\r\n\r\n\t\tvarying vec4 vCoord;\r\n\t\tvarying vec2 vUv;\r\n\t\tvarying vec3 vToEye;\r\n\r\n\t\tvoid main() {\r\n\r\n\t\t\t#include <logdepthbuf_fragment>\r\n\r\n\t\t\tfloat flowMapOffset0 = config.x;\r\n\t\t\tfloat flowMapOffset1 = config.y;\r\n\t\t\tfloat halfCycle = config.z;\r\n\t\t\tfloat scale = config.w;\r\n\r\n\t\t\tvec3 toEye = normalize( vToEye );\r\n\r\n\t\t\t// determine flow direction\r\n\t\t\tvec2 flow;\r\n\t\t\tflow = flowDirection;\r\n\t\t\tflow.x *= - 1.0;\r\n\r\n\t\t\t// sample normal maps (distort uvs with flowdata)\r\n\t\t\tvec4 normalColor0 = texture2D( tNormalMap0, ( vUv * scale ) + flow * flowMapOffset0 );\r\n\t\t\tvec4 normalColor1 = texture2D( tNormalMap1, ( vUv * scale ) + flow * flowMapOffset1 );\r\n\r\n\t\t\t// linear interpolate to get the final normal color\r\n\t\t\tfloat flowLerp = abs( halfCycle - flowMapOffset0 ) / halfCycle;\r\n\t\t\tvec4 normalColor = mix( normalColor0, normalColor1, flowLerp );\r\n\r\n\t\t\t// calculate normal vector\r\n\t\t\tvec3 normal = normalize( vec3( normalColor.r * 2.0 - 1.0, normalColor.b,  normalColor.g * 2.0 - 1.0 ) );\r\n\r\n\t\t\t// calculate the fresnel term to blend reflection and refraction maps\r\n\t\t\tfloat theta = max( dot( toEye, normal ), 0.0 );\r\n\t\t\tfloat reflectance = reflectivity + ( 1.0 - reflectivity ) * pow( ( 1.0 - theta ), 5.0 );\r\n            reflectance = pow(reflectance + 0.3, 4.0);\r\n            // reflectance = floor(reflectance *  2.0) / 4.0;\r\n            vec4 refractColor = vec4(1.0);\r\n\r\n\t\t\t// calculate final uv coords\r\n\t\t\tvec3 coord = vCoord.xyz / vCoord.w;\r\n\t\t\tvec2 uv = coord.xy + coord.z * normal.xz * 0.05;\r\n\r\n\t\t\tvec4 reflectColor = texture2D( tReflectionMap, vec2( 1.0 - uv.x, uv.y ) );\r\n            reflectColor *= vec4(1.0, 1.0, 0.8, 1.0);\r\n\r\n\t\t\tgl_FragColor = mix(refractColor, reflectColor, reflectance);\r\n\r\n\t\t\t#include <tonemapping_fragment>\r\n\t\t\t#include <encodings_fragment>\r\n\t\t\t#include <fog_fragment>\r\n\r\n\t\t}`\r\n\r\n};\r\n\r\nexport { SQWater };","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","import * as THREE from 'three'\r\nimport { controller } from '../AnimUtils/TweenUtils'\r\nimport { loadShader } from './ShaderLoader';\r\n\r\nexport interface CarouselOptions {\r\n    numOfVisiblePics: number;\r\n    planeWidth?: number;\r\n    planeHeight?: number;\r\n    planeGap?: number;\r\n    carouselArrayRadius?: number\r\n}\r\n\r\ninterface CarouselPlaneUniforms {\r\n    vColor: { type: string, value: THREE.Color };\r\n    vTextures: { type: string, value: Array<THREE.Texture | undefined> };\r\n    vTextureMix: { type: string, value: number };\r\n}\r\n\r\nclass CarouselPlane {\r\n    index: number\r\n    mesh: THREE.Mesh<THREE.PlaneBufferGeometry, THREE.ShaderMaterial>\r\n    uniforms: CarouselPlaneUniforms\r\n    textureList: Array<THREE.Texture | undefined>\r\n    isPushingTexture: Boolean\r\n    constructor(index: number, mesh: THREE.Mesh<THREE.PlaneBufferGeometry, THREE.ShaderMaterial>, uniforms: CarouselPlaneUniforms) {\r\n        this.index = index\r\n        this.mesh = mesh\r\n        this.uniforms = uniforms\r\n        this.mesh = mesh\r\n        this.textureList = []\r\n        this.isPushingTexture = false\r\n    }\r\n    pushNewTexture(newTexture: THREE.Texture) {\r\n        if (this.textureList.length == 0) {\r\n            this.textureList.push(undefined, newTexture)\r\n        }\r\n        else if (this.textureList.length == 1) {\r\n            this.textureList.push(newTexture)\r\n        }\r\n        else {\r\n            this.textureList.splice(1, this.textureList.length-2)\r\n            this.textureList.push(newTexture)\r\n        }\r\n        if (this.isPushingTexture == false) {\r\n            this.recPushTexture()\r\n        }\r\n    }\r\n    recPushTexture() {\r\n        if (this.textureList.length <= 1) {\r\n            this.isPushingTexture = false\r\n            return\r\n        }\r\n        this.isPushingTexture = true\r\n        if (this.textureList.length == 2) {\r\n            this.uniforms.vTextureMix.value = 0\r\n            // this.uniforms.vTexture1.value = undefined\r\n            // this.uniforms.vTexture2.value = undefined\r\n            this.uniforms.vTextures.value[0] = this.textureList[0]\r\n            this.uniforms.vTextures.value[1] = this.textureList[1]\r\n            // this.textureList.splice(0, 1)\r\n            this.isPushingTexture = false\r\n            controller.tweenNumber(0, 1, (v) => {\r\n                this.uniforms.vTextureMix.value = v\r\n            },\r\n            () => {\r\n                this.uniforms.vTextures.value[0] = this.textureList[1]\r\n                this.uniforms.vTextures.value[1] = this.textureList[1]\r\n                this.uniforms.vTextureMix.value = 1\r\n                this.textureList.splice(0, 1)\r\n                this.recPushTexture()\r\n            }, 500)\r\n        }\r\n    }\r\n}\r\n\r\nexport class Carousel extends THREE.Group {\r\n    numOfVisiblePics: number\r\n    rotateNode: THREE.Group\r\n    isRotating: Boolean\r\n    planes: Array<CarouselPlane>\r\n    planeWidth: number\r\n    planeHeight: number\r\n    planeGap: number\r\n    preloadImgs: { [key: string]: THREE.Texture }\r\n    maxPreloadImgCount: number\r\n    carouselArrayRadius: number\r\n    carouselArrayAngle: number\r\n    currentCenter: number\r\n    constructor(options: CarouselOptions = { numOfVisiblePics: 3 }) {\r\n\r\n        super()\r\n\r\n        this.isRotating = false\r\n        this.rotateNode = new THREE.Group()\r\n        this.add(this.rotateNode)\r\n        this.currentCenter = 0\r\n\r\n        this.numOfVisiblePics = options.numOfVisiblePics\r\n        this.planes = []\r\n        this.planeWidth = options.planeWidth || 50\r\n        this.planeHeight = options.planeHeight || 50\r\n        this.planeGap = options.planeGap || 10\r\n        this.preloadImgs = {}\r\n        this.maxPreloadImgCount = this.numOfVisiblePics * 2\r\n        this.carouselArrayRadius = options.carouselArrayRadius || 100\r\n        this.carouselArrayAngle = Math.atan((this.planeWidth + this.planeGap) / (this.carouselArrayRadius * 2)) * 2\r\n        var [vs, fs] = loadShader('CarouselBasicShader')\r\n        for (let i = 0; i < this.numOfVisiblePics; i++) {\r\n            const tempUniforms = {\r\n                vColor: { type: 'c', value: new THREE.Color(0xff0000) },\r\n                vTextures: { type: 'tv', value: [ undefined, undefined ] },\r\n                vTextureMix: { type: 'f', value: 1 },\r\n            }\r\n            const tempPlane = new THREE.Mesh(\r\n                new THREE.PlaneBufferGeometry(this.planeWidth, this.planeHeight, 1, 1),\r\n                new THREE.ShaderMaterial({\r\n                    uniforms : tempUniforms,\r\n                    vertexShader    : vs,\r\n                    fragmentShader  : fs\r\n                })\r\n            )\r\n            let offset = (i - (this.numOfVisiblePics - 1) / 2)\r\n            tempPlane.rotation.y = -(offset * this.carouselArrayAngle)\r\n            tempPlane.position.x = this.carouselArrayRadius * Math.sin(offset * this.carouselArrayAngle)\r\n            tempPlane.position.z = -this.carouselArrayRadius * Math.cos(offset * this.carouselArrayAngle)\r\n            this.planes.push(new CarouselPlane(i, tempPlane, tempUniforms))\r\n            this.rotateNode.add(tempPlane)\r\n        }\r\n        this.planes.forEach(plane => {\r\n            this.__imgSrcToTex(`https://picsum.photos/id/${Math.ceil(Math.random() * 50)}/200/200`).then((v) => {\r\n                plane.pushNewTexture(v)\r\n            })\r\n        })\r\n    }\r\n\r\n    clickToChangeTex(raycaster: THREE.Raycaster, getImgSrcFunc: (carouselIndex: number) => string) {\r\n        let imgMeshes = this.planes.map((v) => v.mesh)\r\n        let intersects = raycaster.intersectObjects(imgMeshes)\r\n        if (intersects.length == 1) {\r\n            const intersectObj = intersects[0].object\r\n            if (intersectObj instanceof THREE.Mesh) {\r\n                let intersectIndex = imgMeshes.indexOf(intersectObj)\r\n                let src = getImgSrcFunc(intersectIndex)\r\n                this.__imgSrcToTex(src).then((v) => {\r\n                    this.planes[intersectIndex].pushNewTexture(v)\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    clickToRotate(raycaster: THREE.Raycaster, getImgSrcFunc: (carouselIndex: number) => string) {\r\n        let imgMeshes = this.planes.map((v) => v.mesh)\r\n        let intersects = raycaster.intersectObjects(imgMeshes)\r\n        if (intersects.length == 1) {\r\n            const intersectObj = intersects[0].object\r\n            if (intersectObj instanceof THREE.Mesh) {\r\n                let intersectIndex = imgMeshes.indexOf(intersectObj)\r\n                let step = this.planes[intersectIndex].index - this.currentCenter - Math.floor(this.planes.length / 2)\r\n                if (step < 0) {\r\n                    this.moveLeft(-step, getImgSrcFunc)\r\n                }\r\n                else if (step > 0) {\r\n                    this.moveRight(step, getImgSrcFunc)\r\n                }\r\n            }\r\n        }\r\n    }\r\n    \r\n    moveLeft(moveStep: number = 1, getImgSrcFunc: (carouselIndex: number) => string) {\r\n        if (this.isRotating) {\r\n            return\r\n        }\r\n        this.isRotating = true\r\n        // move rightmost img to leftmost, change index, rotate rotateNode\r\n        for (let i = 0; i < moveStep; i++) {\r\n            this.planes.sort((v1, v2) => v2.index - v1.index)\r\n            const rightmostImg = this.planes[0]\r\n            rightmostImg.index = this.planes[this.planes.length - 1].index - 1\r\n            let offset = (rightmostImg.index - (this.numOfVisiblePics - 1) / 2)\r\n            rightmostImg.mesh.rotation.y = -(offset * this.carouselArrayAngle)\r\n            rightmostImg.mesh.position.x = this.carouselArrayRadius * Math.sin(offset * this.carouselArrayAngle)\r\n            rightmostImg.mesh.position.z = -this.carouselArrayRadius * Math.cos(offset * this.carouselArrayAngle)\r\n            let src = getImgSrcFunc(rightmostImg.index)\r\n            this.__imgSrcToTex(src).then((v) => {\r\n                rightmostImg.pushNewTexture(v)\r\n            })\r\n        }\r\n        controller.tweenNumber(0, moveStep, (v) => {\r\n            let tempRotationPosition = this.carouselArrayAngle * (this.currentCenter - v)\r\n            this.rotateNode.rotation.y = tempRotationPosition\r\n        }, () => {\r\n            this.currentCenter -= moveStep\r\n            this.isRotating = false\r\n        }, 500)\r\n    }\r\n\r\n    moveRight(moveStep: number = 1, getImgSrcFunc: (carouselIndex: number) => string) {\r\n        if (this.isRotating) {\r\n            return\r\n        }\r\n        this.isRotating = true\r\n        // move leftmost img to rightmost, change index, rotate rotateNode\r\n        for (let i = 0; i < moveStep; i++) {\r\n            this.planes.sort((v1, v2) => v1.index - v2.index)\r\n            const leftmostImg = this.planes[0]\r\n            leftmostImg.index = this.planes[this.planes.length - 1].index + 1\r\n            let offset = (leftmostImg.index - (this.numOfVisiblePics - 1) / 2)\r\n            leftmostImg.mesh.rotation.y = -(offset * this.carouselArrayAngle)\r\n            leftmostImg.mesh.position.x = this.carouselArrayRadius * Math.sin(offset * this.carouselArrayAngle)\r\n            leftmostImg.mesh.position.z = -this.carouselArrayRadius * Math.cos(offset * this.carouselArrayAngle)\r\n            let src = getImgSrcFunc(leftmostImg.index)\r\n            this.__imgSrcToTex(src).then((v) => {\r\n                leftmostImg.pushNewTexture(v)\r\n            })\r\n        }\r\n        controller.tweenNumber(0, moveStep, (v) => {\r\n            let tempRotationPosition = this.carouselArrayAngle * (this.currentCenter + v)\r\n            this.rotateNode.rotation.y = tempRotationPosition\r\n        }, () => {\r\n            this.currentCenter += moveStep\r\n            this.isRotating = false\r\n        }, 500)\r\n    }\r\n\r\n\r\n    async __imgSrcToTex(imgSrc: string): Promise<THREE.Texture> {\r\n        const self = this\r\n        return new Promise<THREE.Texture>((resolve, reject) => {\r\n            if (self.preloadImgs[imgSrc]) {\r\n                resolve(self.preloadImgs[imgSrc])\r\n            }\r\n            let imageLoader = new THREE.ImageLoader()\r\n            imageLoader.setCrossOrigin( 'anonymous' ) // TODO: debug\r\n            imageLoader.load(imgSrc, (tempImageElement) => {\r\n                let texture = new THREE.Texture( tempImageElement )\r\n                texture.needsUpdate = true\r\n                self.preloadImgs[imgSrc] = texture\r\n\r\n                // dispose textures\r\n                if (Object.keys(self.preloadImgs).length >= self.maxPreloadImgCount) {\r\n                    // remove an unused texture\r\n                    for (let k in self.preloadImgs) {\r\n                        let imgTex = self.preloadImgs[k]\r\n                        let canRemoveImg = true\r\n                        for (let planeIndex = 0; planeIndex < self.planes.length; planeIndex ++) {\r\n                            if (self.planes[planeIndex].uniforms.vTextures.value.indexOf(imgTex) > -1) {\r\n                                canRemoveImg = false\r\n                                break\r\n                            }\r\n                        }\r\n                        if (canRemoveImg) {\r\n                            // imgTex is not in use in any carousel card\r\n                            imgTex.dispose()\r\n                            delete self.preloadImgs[k]\r\n                            break\r\n                        }\r\n                    }\r\n                }\r\n                resolve(texture)\r\n            })\r\n        })\r\n    }\r\n}","import {\n\tAdditiveBlending,\n\tBufferGeometry,\n\tColor,\n\tDoubleSide,\n\tFileLoader,\n\tFloat32BufferAttribute,\n\tGroup,\n\tLoader,\n\tLoaderUtils,\n\tMatrix4,\n\tMesh,\n\tMeshPhongMaterial,\n\tTextureLoader\n} from 'three';\n\n/**\n * Autodesk 3DS three.js file loader, based on lib3ds.\n *\n * Loads geometry with uv and materials basic properties with texture support.\n *\n * @class TDSLoader\n * @constructor\n */\n\nclass TDSLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t\tthis.debug = false;\n\n\t\tthis.group = null;\n\n\t\tthis.materials = [];\n\t\tthis.meshes = [];\n\n\t}\n\n\t/**\n\t * Load 3ds file from url.\n\t *\n\t * @method load\n\t * @param {[type]} url URL for the file.\n\t * @param {Function} onLoad onLoad callback, receives group Object3D as argument.\n\t * @param {Function} onProgress onProgress callback.\n\t * @param {Function} onError onError callback.\n\t */\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst path = ( this.path === '' ) ? LoaderUtils.extractUrlBase( url ) : this.path;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\n\t\tloader.load( url, function ( data ) {\n\n\t\t\ttry {\n\n\t\t\t\tonLoad( scope.parse( data, path ) );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\t/**\n\t * Parse arraybuffer data and load 3ds file.\n\t *\n\t * @method parse\n\t * @param {ArrayBuffer} arraybuffer Arraybuffer data to be loaded.\n\t * @param {String} path Path for external resources.\n\t * @return {Group} Group loaded from 3ds file.\n\t */\n\tparse( arraybuffer, path ) {\n\n\t\tthis.group = new Group();\n\t\tthis.materials = [];\n\t\tthis.meshes = [];\n\n\t\tthis.readFile( arraybuffer, path );\n\n\t\tfor ( let i = 0; i < this.meshes.length; i ++ ) {\n\n\t\t\tthis.group.add( this.meshes[ i ] );\n\n\t\t}\n\n\t\treturn this.group;\n\n\t}\n\n\t/**\n\t * Decode file content to read 3ds data.\n\t *\n\t * @method readFile\n\t * @param {ArrayBuffer} arraybuffer Arraybuffer data to be loaded.\n\t * @param {String} path Path for external resources.\n\t */\n\treadFile( arraybuffer, path ) {\n\n\t\tconst data = new DataView( arraybuffer );\n\t\tconst chunk = new Chunk( data, 0, this.debugMessage );\n\n\t\tif ( chunk.id === MLIBMAGIC || chunk.id === CMAGIC || chunk.id === M3DMAGIC ) {\n\n\t\t\tlet next = chunk.readChunk();\n\n\t\t\twhile ( next ) {\n\n\t\t\t\tif ( next.id === M3D_VERSION ) {\n\n\t\t\t\t\tconst version = next.readDWord();\n\t\t\t\t\tthis.debugMessage( '3DS file version: ' + version );\n\n\t\t\t\t} else if ( next.id === MDATA ) {\n\n\t\t\t\t\tthis.readMeshData( next, path );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis.debugMessage( 'Unknown main chunk: ' + next.hexId );\n\n\t\t\t\t}\n\n\t\t\t\tnext = chunk.readChunk();\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.debugMessage( 'Parsed ' + this.meshes.length + ' meshes' );\n\n\t}\n\n\t/**\n\t * Read mesh data chunk.\n\t *\n\t * @method readMeshData\n\t * @param {Chunk} chunk to read mesh from\n\t * @param {String} path Path for external resources.\n\t */\n\treadMeshData( chunk, path ) {\n\n\t\tlet next = chunk.readChunk();\n\n\t\twhile ( next ) {\n\n\t\t\tif ( next.id === MESH_VERSION ) {\n\n\t\t\t\tconst version = + next.readDWord();\n\t\t\t\tthis.debugMessage( 'Mesh Version: ' + version );\n\n\t\t\t} else if ( next.id === MASTER_SCALE ) {\n\n\t\t\t\tconst scale = next.readFloat();\n\t\t\t\tthis.debugMessage( 'Master scale: ' + scale );\n\t\t\t\tthis.group.scale.set( scale, scale, scale );\n\n\t\t\t} else if ( next.id === NAMED_OBJECT ) {\n\n\t\t\t\tthis.debugMessage( 'Named Object' );\n\t\t\t\tthis.readNamedObject( next );\n\n\t\t\t} else if ( next.id === MAT_ENTRY ) {\n\n\t\t\t\tthis.debugMessage( 'Material' );\n\t\t\t\tthis.readMaterialEntry( next, path );\n\n\t\t\t} else {\n\n\t\t\t\tthis.debugMessage( 'Unknown MDATA chunk: ' + next.hexId );\n\n\t\t\t}\n\n\t\t\tnext = chunk.readChunk();\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Read named object chunk.\n\t *\n\t * @method readNamedObject\n\t * @param {Chunk} chunk Chunk in use.\n\t */\n\treadNamedObject( chunk ) {\n\n\t\tconst name = chunk.readString();\n\n\t\tlet next = chunk.readChunk();\n\t\twhile ( next ) {\n\n\t\t\tif ( next.id === N_TRI_OBJECT ) {\n\n\t\t\t\tconst mesh = this.readMesh( next );\n\t\t\t\tmesh.name = name;\n\t\t\t\tthis.meshes.push( mesh );\n\n\t\t\t} else {\n\n\t\t\t\tthis.debugMessage( 'Unknown named object chunk: ' + next.hexId );\n\n\t\t\t}\n\n\t\t\tnext = chunk.readChunk( );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Read material data chunk and add it to the material list.\n\t *\n\t * @method readMaterialEntry\n\t * @param {Chunk} chunk Chunk in use.\n\t * @param {String} path Path for external resources.\n\t */\n\treadMaterialEntry( chunk, path ) {\n\n\t\tlet next = chunk.readChunk();\n\t\tconst material = new MeshPhongMaterial();\n\n\t\twhile ( next ) {\n\n\t\t\tif ( next.id === MAT_NAME ) {\n\n\t\t\t\tmaterial.name = next.readString();\n\t\t\t\tthis.debugMessage( '   Name: ' + material.name );\n\n\t\t\t} else if ( next.id === MAT_WIRE ) {\n\n\t\t\t\tthis.debugMessage( '   Wireframe' );\n\t\t\t\tmaterial.wireframe = true;\n\n\t\t\t} else if ( next.id === MAT_WIRE_SIZE ) {\n\n\t\t\t\tconst value = next.readByte();\n\t\t\t\tmaterial.wireframeLinewidth = value;\n\t\t\t\tthis.debugMessage( '   Wireframe Thickness: ' + value );\n\n\t\t\t} else if ( next.id === MAT_TWO_SIDE ) {\n\n\t\t\t\tmaterial.side = DoubleSide;\n\t\t\t\tthis.debugMessage( '   DoubleSided' );\n\n\t\t\t} else if ( next.id === MAT_ADDITIVE ) {\n\n\t\t\t\tthis.debugMessage( '   Additive Blending' );\n\t\t\t\tmaterial.blending = AdditiveBlending;\n\n\t\t\t} else if ( next.id === MAT_DIFFUSE ) {\n\n\t\t\t\tthis.debugMessage( '   Diffuse Color' );\n\t\t\t\tmaterial.color = this.readColor( next );\n\n\t\t\t} else if ( next.id === MAT_SPECULAR ) {\n\n\t\t\t\tthis.debugMessage( '   Specular Color' );\n\t\t\t\tmaterial.specular = this.readColor( next );\n\n\t\t\t} else if ( next.id === MAT_AMBIENT ) {\n\n\t\t\t\tthis.debugMessage( '   Ambient color' );\n\t\t\t\tmaterial.color = this.readColor( next );\n\n\t\t\t} else if ( next.id === MAT_SHININESS ) {\n\n\t\t\t\tconst shininess = this.readPercentage( next );\n\t\t\t\tmaterial.shininess = shininess * 100;\n\t\t\t\tthis.debugMessage( '   Shininess : ' + shininess );\n\n\t\t\t} else if ( next.id === MAT_TRANSPARENCY ) {\n\n\t\t\t\tconst transparency = this.readPercentage( next );\n\t\t\t\tmaterial.opacity = 1 - transparency;\n\t\t\t\tthis.debugMessage( '  Transparency : ' + transparency );\n\t\t\t\tmaterial.transparent = material.opacity < 1 ? true : false;\n\n\t\t\t} else if ( next.id === MAT_TEXMAP ) {\n\n\t\t\t\tthis.debugMessage( '   ColorMap' );\n\t\t\t\tmaterial.map = this.readMap( next, path );\n\n\t\t\t} else if ( next.id === MAT_BUMPMAP ) {\n\n\t\t\t\tthis.debugMessage( '   BumpMap' );\n\t\t\t\tmaterial.bumpMap = this.readMap( next, path );\n\n\t\t\t} else if ( next.id === MAT_OPACMAP ) {\n\n\t\t\t\tthis.debugMessage( '   OpacityMap' );\n\t\t\t\tmaterial.alphaMap = this.readMap( next, path );\n\n\t\t\t} else if ( next.id === MAT_SPECMAP ) {\n\n\t\t\t\tthis.debugMessage( '   SpecularMap' );\n\t\t\t\tmaterial.specularMap = this.readMap( next, path );\n\n\t\t\t} else {\n\n\t\t\t\tthis.debugMessage( '   Unknown material chunk: ' + next.hexId );\n\n\t\t\t}\n\n\t\t\tnext = chunk.readChunk();\n\n\t\t}\n\n\t\tthis.materials[ material.name ] = material;\n\n\t}\n\n\t/**\n\t * Read mesh data chunk.\n\t *\n\t * @method readMesh\n\t * @param {Chunk} chunk Chunk in use.\n\t * @return {Mesh} The parsed mesh.\n\t */\n\treadMesh( chunk ) {\n\n\t\tlet next = chunk.readChunk( );\n\n\t\tconst geometry = new BufferGeometry();\n\n\t\tconst material = new MeshPhongMaterial();\n\t\tconst mesh = new Mesh( geometry, material );\n\t\tmesh.name = 'mesh';\n\n\t\twhile ( next ) {\n\n\t\t\tif ( next.id === POINT_ARRAY ) {\n\n\t\t\t\tconst points = next.readWord( );\n\n\t\t\t\tthis.debugMessage( '   Vertex: ' + points );\n\n\t\t\t\t//BufferGeometry\n\n\t\t\t\tconst vertices = [];\n\n\t\t\t\tfor ( let i = 0; i < points; i ++ )\t\t{\n\n\t\t\t\t\tvertices.push( next.readFloat( ) );\n\t\t\t\t\tvertices.push( next.readFloat( ) );\n\t\t\t\t\tvertices.push( next.readFloat( ) );\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\n\t\t\t} else if ( next.id === FACE_ARRAY ) {\n\n\t\t\t\tthis.readFaceArray( next, mesh );\n\n\t\t\t} else if ( next.id === TEX_VERTS ) {\n\n\t\t\t\tconst texels = next.readWord( );\n\n\t\t\t\tthis.debugMessage( '   UV: ' + texels );\n\n\t\t\t\t//BufferGeometry\n\n\t\t\t\tconst uvs = [];\n\n\t\t\t\tfor ( let i = 0; i < texels; i ++ ) {\n\n\t\t\t\t\tuvs.push( next.readFloat( ) );\n\t\t\t\t\tuvs.push( next.readFloat( ) );\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\n\t\t\t} else if ( next.id === MESH_MATRIX ) {\n\n\t\t\t\tthis.debugMessage( '   Tranformation Matrix (TODO)' );\n\n\t\t\t\tconst values = [];\n\t\t\t\tfor ( let i = 0; i < 12; i ++ ) {\n\n\t\t\t\t\tvalues[ i ] = next.readFloat( );\n\n\t\t\t\t}\n\n\t\t\t\tconst matrix = new Matrix4();\n\n\t\t\t\t//X Line\n\t\t\t\tmatrix.elements[ 0 ] = values[ 0 ];\n\t\t\t\tmatrix.elements[ 1 ] = values[ 6 ];\n\t\t\t\tmatrix.elements[ 2 ] = values[ 3 ];\n\t\t\t\tmatrix.elements[ 3 ] = values[ 9 ];\n\n\t\t\t\t//Y Line\n\t\t\t\tmatrix.elements[ 4 ] = values[ 2 ];\n\t\t\t\tmatrix.elements[ 5 ] = values[ 8 ];\n\t\t\t\tmatrix.elements[ 6 ] = values[ 5 ];\n\t\t\t\tmatrix.elements[ 7 ] = values[ 11 ];\n\n\t\t\t\t//Z Line\n\t\t\t\tmatrix.elements[ 8 ] = values[ 1 ];\n\t\t\t\tmatrix.elements[ 9 ] = values[ 7 ];\n\t\t\t\tmatrix.elements[ 10 ] = values[ 4 ];\n\t\t\t\tmatrix.elements[ 11 ] = values[ 10 ];\n\n\t\t\t\t//W Line\n\t\t\t\tmatrix.elements[ 12 ] = 0;\n\t\t\t\tmatrix.elements[ 13 ] = 0;\n\t\t\t\tmatrix.elements[ 14 ] = 0;\n\t\t\t\tmatrix.elements[ 15 ] = 1;\n\n\t\t\t\tmatrix.transpose();\n\n\t\t\t\tconst inverse = new Matrix4();\n\t\t\t\tinverse.copy( matrix ).invert();\n\t\t\t\tgeometry.applyMatrix4( inverse );\n\n\t\t\t\tmatrix.decompose( mesh.position, mesh.quaternion, mesh.scale );\n\n\t\t\t} else {\n\n\t\t\t\tthis.debugMessage( '   Unknown mesh chunk: ' + next.hexId );\n\n\t\t\t}\n\n\t\t\tnext = chunk.readChunk( );\n\n\t\t}\n\n\t\tgeometry.computeVertexNormals();\n\n\t\treturn mesh;\n\n\t}\n\n\t/**\n\t * Read face array data chunk.\n\t *\n\t * @method readFaceArray\n\t * @param {Chunk} chunk Chunk in use.\n\t * @param {Mesh} mesh Mesh to be filled with the data read.\n\t */\n\treadFaceArray( chunk, mesh ) {\n\n\t\tconst faces = chunk.readWord( );\n\n\t\tthis.debugMessage( '   Faces: ' + faces );\n\n\t\tconst index = [];\n\n\t\tfor ( let i = 0; i < faces; ++ i ) {\n\n\t\t\tindex.push( chunk.readWord( ), chunk.readWord( ), chunk.readWord( ) );\n\n\t\t\tchunk.readWord( ); // visibility\n\n\t\t}\n\n\t\tmesh.geometry.setIndex( index );\n\n\t\t//The rest of the FACE_ARRAY chunk is subchunks\n\n\t\tlet materialIndex = 0;\n\t\tlet start = 0;\n\n\t\twhile ( ! chunk.endOfChunk ) {\n\n\t\t\tconst subchunk = chunk.readChunk( );\n\n\t\t\tif ( subchunk.id === MSH_MAT_GROUP ) {\n\n\t\t\t\tthis.debugMessage( '      Material Group' );\n\n\t\t\t\tconst group = this.readMaterialGroup( subchunk );\n\t\t\t\tconst count = group.index.length * 3; // assuming successive indices\n\n\t\t\t\tmesh.geometry.addGroup( start, count, materialIndex );\n\n\t\t\t\tstart += count;\n\t\t\t\tmaterialIndex ++;\n\n\t\t\t\tconst material = this.materials[ group.name ];\n\n\t\t\t\tif ( Array.isArray( mesh.material ) === false ) mesh.material = [];\n\n\t\t\t\tif ( material !== undefined )\t{\n\n\t\t\t\t\tmesh.material.push( material );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tthis.debugMessage( '      Unknown face array chunk: ' + subchunk.hexId );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( mesh.material.length === 1 ) mesh.material = mesh.material[ 0 ]; // for backwards compatibility\n\n\t}\n\n\t/**\n\t * Read texture map data chunk.\n\t *\n\t * @method readMap\n\t * @param {Chunk} chunk Chunk in use.\n\t * @param {String} path Path for external resources.\n\t * @return {Texture} Texture read from this data chunk.\n\t */\n\treadMap( chunk, path ) {\n\n\t\tlet next = chunk.readChunk( );\n\t\tlet texture = {};\n\n\t\tconst loader = new TextureLoader( this.manager );\n\t\tloader.setPath( this.resourcePath || path ).setCrossOrigin( this.crossOrigin );\n\n\t\twhile ( next ) {\n\n\t\t\tif ( next.id === MAT_MAPNAME ) {\n\n\t\t\t\tconst name = next.readString();\n\t\t\t\ttexture = loader.load( name );\n\n\t\t\t\tthis.debugMessage( '      File: ' + path + name );\n\n\t\t\t} else if ( next.id === MAT_MAP_UOFFSET ) {\n\n\t\t\t\ttexture.offset.x = next.readFloat( );\n\t\t\t\tthis.debugMessage( '      OffsetX: ' + texture.offset.x );\n\n\t\t\t} else if ( next.id === MAT_MAP_VOFFSET ) {\n\n\t\t\t\ttexture.offset.y = next.readFloat( );\n\t\t\t\tthis.debugMessage( '      OffsetY: ' + texture.offset.y );\n\n\t\t\t} else if ( next.id === MAT_MAP_USCALE ) {\n\n\t\t\t\ttexture.repeat.x = next.readFloat( );\n\t\t\t\tthis.debugMessage( '      RepeatX: ' + texture.repeat.x );\n\n\t\t\t} else if ( next.id === MAT_MAP_VSCALE ) {\n\n\t\t\t\ttexture.repeat.y = next.readFloat( );\n\t\t\t\tthis.debugMessage( '      RepeatY: ' + texture.repeat.y );\n\n\t\t\t} else {\n\n\t\t\t\tthis.debugMessage( '      Unknown map chunk: ' + next.hexId );\n\n\t\t\t}\n\n\t\t\tnext = chunk.readChunk( );\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\t/**\n\t * Read material group data chunk.\n\t *\n\t * @method readMaterialGroup\n\t * @param {Chunk} chunk Chunk in use.\n\t * @return {Object} Object with name and index of the object.\n\t */\n\treadMaterialGroup( chunk ) {\n\n\t\tconst name = chunk.readString();\n\t\tconst numFaces = chunk.readWord();\n\n\t\tthis.debugMessage( '         Name: ' + name );\n\t\tthis.debugMessage( '         Faces: ' + numFaces );\n\n\t\tconst index = [];\n\t\tfor ( let i = 0; i < numFaces; ++ i ) {\n\n\t\t\tindex.push( chunk.readWord( ) );\n\n\t\t}\n\n\t\treturn { name: name, index: index };\n\n\t}\n\n\t/**\n\t * Read a color value.\n\t *\n\t * @method readColor\n\t * @param {Chunk} chunk Chunk.\n\t * @return {Color} Color value read..\n\t */\n\treadColor( chunk ) {\n\n\t\tconst subChunk = chunk.readChunk( );\n\t\tconst color = new Color();\n\n\t\tif ( subChunk.id === COLOR_24 || subChunk.id === LIN_COLOR_24 ) {\n\n\t\t\tconst r = subChunk.readByte( );\n\t\t\tconst g = subChunk.readByte( );\n\t\t\tconst b = subChunk.readByte( );\n\n\t\t\tcolor.setRGB( r / 255, g / 255, b / 255 );\n\n\t\t\tthis.debugMessage( '      Color: ' + color.r + ', ' + color.g + ', ' + color.b );\n\n\t\t}\telse if ( subChunk.id === COLOR_F || subChunk.id === LIN_COLOR_F ) {\n\n\t\t\tconst r = subChunk.readFloat( );\n\t\t\tconst g = subChunk.readFloat( );\n\t\t\tconst b = subChunk.readFloat( );\n\n\t\t\tcolor.setRGB( r, g, b );\n\n\t\t\tthis.debugMessage( '      Color: ' + color.r + ', ' + color.g + ', ' + color.b );\n\n\t\t}\telse {\n\n\t\t\tthis.debugMessage( '      Unknown color chunk: ' + subChunk.hexId );\n\n\t\t}\n\n\t\treturn color;\n\n\t}\n\n\t/**\n\t * Read percentage value.\n\t *\n\t * @method readPercentage\n\t * @param {Chunk} chunk Chunk to read data from.\n\t * @return {Number} Data read from the dataview.\n\t */\n\treadPercentage( chunk ) {\n\n\t\tconst subChunk = chunk.readChunk( );\n\n\t\tswitch ( subChunk.id ) {\n\n\t\t\tcase INT_PERCENTAGE:\n\t\t\t\treturn ( subChunk.readShort( ) / 100 );\n\t\t\t\tbreak;\n\n\t\t\tcase FLOAT_PERCENTAGE:\n\t\t\t\treturn subChunk.readFloat( );\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tthis.debugMessage( '      Unknown percentage chunk: ' + subChunk.hexId );\n\t\t\t\treturn 0;\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Print debug message to the console.\n\t *\n\t * Is controlled by a flag to show or hide debug messages.\n\t *\n\t * @method debugMessage\n\t * @param {Object} message Debug message to print to the console.\n\t */\n\tdebugMessage( message ) {\n\n\t\tif ( this.debug ) {\n\n\t\t\tconsole.log( message );\n\n\t\t}\n\n\t}\n\n}\n\n\n/** Read data/sub-chunks from chunk */\nclass Chunk {\n\n\t/**\n\t * Create a new chunk\n\t *\n\t * @class Chunk\n\t * @param {DataView} data DataView to read from.\n\t * @param {Number} position in data.\n\t * @param {Function} debugMessage logging callback.\n\t */\n\tconstructor( data, position, debugMessage ) {\n\n\t\tthis.data = data;\n\t\t// the offset to the begin of this chunk\n\t\tthis.offset = position;\n\t\t// the current reading position\n\t\tthis.position = position;\n\t\tthis.debugMessage = debugMessage;\n\n\t\tif ( this.debugMessage instanceof Function ) {\n\n\t\t\tthis.debugMessage = function () {};\n\n\t\t}\n\n\t\tthis.id = this.readWord();\n\t\tthis.size = this.readDWord();\n\t\tthis.end = this.offset + this.size;\n\n\t\tif ( this.end > data.byteLength ) {\n\n\t\t\tthis.debugMessage( 'Bad chunk size for chunk at ' + position );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * read a sub cchunk.\n\t *\n\t * @method readChunk\n\t * @return {Chunk | null} next sub chunk\n\t */\n\treadChunk() {\n\n\t\tif ( this.endOfChunk ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\ttry {\n\n\t\t\tconst next = new Chunk( this.data, this.position, this.debugMessage );\n\t\t\tthis.position += next.size;\n\t\t\treturn next;\n\n\t\t}\tcatch ( e ) {\n\n\t\t\tthis.debugMessage( 'Unable to read chunk at ' + this.position );\n\t\t\treturn null;\n\n\t\t}\n\n\t}\n\n\t/**\n\t * return the ID of this chunk as Hex\n\t *\n\t * @method idToString\n\t * @return {String} hex-string of id\n\t */\n\tget hexId() {\n\n\t\treturn this.id.toString( 16 );\n\n\t}\n\n\tget endOfChunk() {\n\n\t\treturn this.position >= this.end;\n\n\t}\n\n\t/**\n\t * Read byte value.\n\t *\n\t * @method readByte\n\t * @return {Number} Data read from the dataview.\n\t */\n\treadByte() {\n\n\t\tconst v = this.data.getUint8( this.position, true );\n\t\tthis.position += 1;\n\t\treturn v;\n\n\t}\n\n\t/**\n\t * Read 32 bit float value.\n\t *\n\t * @method readFloat\n\t * @return {Number} Data read from the dataview.\n\t */\n\treadFloat() {\n\n\t\ttry {\n\n\t\t\tconst v = this.data.getFloat32( this.position, true );\n\t\t\tthis.position += 4;\n\t\t\treturn v;\n\n\t\t}\tcatch ( e ) {\n\n\t\t\tthis.debugMessage( e + ' ' + this.position + ' ' + this.data.byteLength );\n\t\t\treturn 0;\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Read 32 bit signed integer value.\n\t *\n\t * @method readInt\n\t * @return {Number} Data read from the dataview.\n\t */\n\treadInt() {\n\n\t\tconst v = this.data.getInt32( this.position, true );\n\t\tthis.position += 4;\n\t\treturn v;\n\n\t}\n\n\t/**\n\t * Read 16 bit signed integer value.\n\t *\n\t * @method readShort\n\t * @return {Number} Data read from the dataview.\n\t */\n\treadShort() {\n\n\t\tconst v = this.data.getInt16( this.position, true );\n\t\tthis.position += 2;\n\t\treturn v;\n\n\t}\n\n\t/**\n\t * Read 64 bit unsigned integer value.\n\t *\n\t * @method readDWord\n\t * @return {Number} Data read from the dataview.\n\t */\n\treadDWord() {\n\n\t\tconst v = this.data.getUint32( this.position, true );\n\t\tthis.position += 4;\n\t\treturn v;\n\n\t}\n\n\t/**\n\t * Read 32 bit unsigned integer value.\n\t *\n\t * @method readWord\n\t * @return {Number} Data read from the dataview.\n\t */\n\treadWord() {\n\n\t\tconst v = this.data.getUint16( this.position, true );\n\t\tthis.position += 2;\n\t\treturn v;\n\n\t}\n\n\t/**\n\t * Read NULL terminated ASCII string value from chunk-pos.\n\t *\n\t * @method readString\n\t * @return {String} Data read from the dataview.\n\t */\n\treadString() {\n\n\t\tlet s = '';\n\t\tlet c = this.readByte();\n\t\twhile ( c ) {\n\n\t\t\ts += String.fromCharCode( c );\n\t\t\tc = this.readByte();\n\n\t\t}\n\n\t\treturn s;\n\n\t}\n\n}\n\n// const NULL_CHUNK = 0x0000;\nconst M3DMAGIC = 0x4D4D;\n// const SMAGIC = 0x2D2D;\n// const LMAGIC = 0x2D3D;\nconst MLIBMAGIC = 0x3DAA;\n// const MATMAGIC = 0x3DFF;\nconst CMAGIC = 0xC23D;\nconst M3D_VERSION = 0x0002;\n// const M3D_KFVERSION = 0x0005;\nconst COLOR_F = 0x0010;\nconst COLOR_24 = 0x0011;\nconst LIN_COLOR_24 = 0x0012;\nconst LIN_COLOR_F = 0x0013;\nconst INT_PERCENTAGE = 0x0030;\nconst FLOAT_PERCENTAGE = 0x0031;\nconst MDATA = 0x3D3D;\nconst MESH_VERSION = 0x3D3E;\nconst MASTER_SCALE = 0x0100;\n// const LO_SHADOW_BIAS = 0x1400;\n// const HI_SHADOW_BIAS = 0x1410;\n// const SHADOW_MAP_SIZE = 0x1420;\n// const SHADOW_SAMPLES = 0x1430;\n// const SHADOW_RANGE = 0x1440;\n// const SHADOW_FILTER = 0x1450;\n// const RAY_BIAS = 0x1460;\n// const O_CONSTS = 0x1500;\n// const AMBIENT_LIGHT = 0x2100;\n// const BIT_MAP = 0x1100;\n// const SOLID_BGND = 0x1200;\n// const V_GRADIENT = 0x1300;\n// const USE_BIT_MAP = 0x1101;\n// const USE_SOLID_BGND = 0x1201;\n// const USE_V_GRADIENT = 0x1301;\n// const FOG = 0x2200;\n// const FOG_BGND = 0x2210;\n// const LAYER_FOG = 0x2302;\n// const DISTANCE_CUE = 0x2300;\n// const DCUE_BGND = 0x2310;\n// const USE_FOG = 0x2201;\n// const USE_LAYER_FOG = 0x2303;\n// const USE_DISTANCE_CUE = 0x2301;\nconst MAT_ENTRY = 0xAFFF;\nconst MAT_NAME = 0xA000;\nconst MAT_AMBIENT = 0xA010;\nconst MAT_DIFFUSE = 0xA020;\nconst MAT_SPECULAR = 0xA030;\nconst MAT_SHININESS = 0xA040;\n// const MAT_SHIN2PCT = 0xA041;\nconst MAT_TRANSPARENCY = 0xA050;\n// const MAT_XPFALL = 0xA052;\n// const MAT_USE_XPFALL = 0xA240;\n// const MAT_REFBLUR = 0xA053;\n// const MAT_SHADING = 0xA100;\n// const MAT_USE_REFBLUR = 0xA250;\n// const MAT_SELF_ILLUM = 0xA084;\nconst MAT_TWO_SIDE = 0xA081;\n// const MAT_DECAL = 0xA082;\nconst MAT_ADDITIVE = 0xA083;\nconst MAT_WIRE = 0xA085;\n// const MAT_FACEMAP = 0xA088;\n// const MAT_TRANSFALLOFF_IN = 0xA08A;\n// const MAT_PHONGSOFT = 0xA08C;\n// const MAT_WIREABS = 0xA08E;\nconst MAT_WIRE_SIZE = 0xA087;\nconst MAT_TEXMAP = 0xA200;\n// const MAT_SXP_TEXT_DATA = 0xA320;\n// const MAT_TEXMASK = 0xA33E;\n// const MAT_SXP_TEXTMASK_DATA = 0xA32A;\n// const MAT_TEX2MAP = 0xA33A;\n// const MAT_SXP_TEXT2_DATA = 0xA321;\n// const MAT_TEX2MASK = 0xA340;\n// const MAT_SXP_TEXT2MASK_DATA = 0xA32C;\nconst MAT_OPACMAP = 0xA210;\n// const MAT_SXP_OPAC_DATA = 0xA322;\n// const MAT_OPACMASK = 0xA342;\n// const MAT_SXP_OPACMASK_DATA = 0xA32E;\nconst MAT_BUMPMAP = 0xA230;\n// const MAT_SXP_BUMP_DATA = 0xA324;\n// const MAT_BUMPMASK = 0xA344;\n// const MAT_SXP_BUMPMASK_DATA = 0xA330;\nconst MAT_SPECMAP = 0xA204;\n// const MAT_SXP_SPEC_DATA = 0xA325;\n// const MAT_SPECMASK = 0xA348;\n// const MAT_SXP_SPECMASK_DATA = 0xA332;\n// const MAT_SHINMAP = 0xA33C;\n// const MAT_SXP_SHIN_DATA = 0xA326;\n// const MAT_SHINMASK = 0xA346;\n// const MAT_SXP_SHINMASK_DATA = 0xA334;\n// const MAT_SELFIMAP = 0xA33D;\n// const MAT_SXP_SELFI_DATA = 0xA328;\n// const MAT_SELFIMASK = 0xA34A;\n// const MAT_SXP_SELFIMASK_DATA = 0xA336;\n// const MAT_REFLMAP = 0xA220;\n// const MAT_REFLMASK = 0xA34C;\n// const MAT_SXP_REFLMASK_DATA = 0xA338;\n// const MAT_ACUBIC = 0xA310;\nconst MAT_MAPNAME = 0xA300;\n// const MAT_MAP_TILING = 0xA351;\n// const MAT_MAP_TEXBLUR = 0xA353;\nconst MAT_MAP_USCALE = 0xA354;\nconst MAT_MAP_VSCALE = 0xA356;\nconst MAT_MAP_UOFFSET = 0xA358;\nconst MAT_MAP_VOFFSET = 0xA35A;\n// const MAT_MAP_ANG = 0xA35C;\n// const MAT_MAP_COL1 = 0xA360;\n// const MAT_MAP_COL2 = 0xA362;\n// const MAT_MAP_RCOL = 0xA364;\n// const MAT_MAP_GCOL = 0xA366;\n// const MAT_MAP_BCOL = 0xA368;\nconst NAMED_OBJECT = 0x4000;\n// const N_DIRECT_LIGHT = 0x4600;\n// const DL_OFF = 0x4620;\n// const DL_OUTER_RANGE = 0x465A;\n// const DL_INNER_RANGE = 0x4659;\n// const DL_MULTIPLIER = 0x465B;\n// const DL_EXCLUDE = 0x4654;\n// const DL_ATTENUATE = 0x4625;\n// const DL_SPOTLIGHT = 0x4610;\n// const DL_SPOT_ROLL = 0x4656;\n// const DL_SHADOWED = 0x4630;\n// const DL_LOCAL_SHADOW2 = 0x4641;\n// const DL_SEE_CONE = 0x4650;\n// const DL_SPOT_RECTANGULAR = 0x4651;\n// const DL_SPOT_ASPECT = 0x4657;\n// const DL_SPOT_PROJECTOR = 0x4653;\n// const DL_SPOT_OVERSHOOT = 0x4652;\n// const DL_RAY_BIAS = 0x4658;\n// const DL_RAYSHAD = 0x4627;\n// const N_CAMERA = 0x4700;\n// const CAM_SEE_CONE = 0x4710;\n// const CAM_RANGES = 0x4720;\n// const OBJ_HIDDEN = 0x4010;\n// const OBJ_VIS_LOFTER = 0x4011;\n// const OBJ_DOESNT_CAST = 0x4012;\n// const OBJ_DONT_RECVSHADOW = 0x4017;\n// const OBJ_MATTE = 0x4013;\n// const OBJ_FAST = 0x4014;\n// const OBJ_PROCEDURAL = 0x4015;\n// const OBJ_FROZEN = 0x4016;\nconst N_TRI_OBJECT = 0x4100;\nconst POINT_ARRAY = 0x4110;\n// const POINT_FLAG_ARRAY = 0x4111;\nconst FACE_ARRAY = 0x4120;\nconst MSH_MAT_GROUP = 0x4130;\n// const SMOOTH_GROUP = 0x4150;\n// const MSH_BOXMAP = 0x4190;\nconst TEX_VERTS = 0x4140;\nconst MESH_MATRIX = 0x4160;\n// const MESH_COLOR = 0x4165;\n// const MESH_TEXTURE_INFO = 0x4170;\n// const KFDATA = 0xB000;\n// const KFHDR = 0xB00A;\n// const KFSEG = 0xB008;\n// const KFCURTIME = 0xB009;\n// const AMBIENT_NODE_TAG = 0xB001;\n// const OBJECT_NODE_TAG = 0xB002;\n// const CAMERA_NODE_TAG = 0xB003;\n// const TARGET_NODE_TAG = 0xB004;\n// const LIGHT_NODE_TAG = 0xB005;\n// const L_TARGET_NODE_TAG = 0xB006;\n// const SPOTLIGHT_NODE_TAG = 0xB007;\n// const NODE_ID = 0xB030;\n// const NODE_HDR = 0xB010;\n// const PIVOT = 0xB013;\n// const INSTANCE_NAME = 0xB011;\n// const MORPH_SMOOTH = 0xB015;\n// const BOUNDBOX = 0xB014;\n// const POS_TRACK_TAG = 0xB020;\n// const COL_TRACK_TAG = 0xB025;\n// const ROT_TRACK_TAG = 0xB021;\n// const SCL_TRACK_TAG = 0xB022;\n// const MORPH_TRACK_TAG = 0xB026;\n// const FOV_TRACK_TAG = 0xB023;\n// const ROLL_TRACK_TAG = 0xB024;\n// const HOT_TRACK_TAG = 0xB027;\n// const FALL_TRACK_TAG = 0xB028;\n// const HIDE_TRACK_TAG = 0xB029;\n// const POLY_2D = 0x5000;\n// const SHAPE_OK = 0x5010;\n// const SHAPE_NOT_OK = 0x5011;\n// const SHAPE_HOOK = 0x5020;\n// const PATH_3D = 0x6000;\n// const PATH_MATRIX = 0x6005;\n// const SHAPE_2D = 0x6010;\n// const M_SCALE = 0x6020;\n// const M_TWIST = 0x6030;\n// const M_TEETER = 0x6040;\n// const M_FIT = 0x6050;\n// const M_BEVEL = 0x6060;\n// const XZ_CURVE = 0x6070;\n// const YZ_CURVE = 0x6080;\n// const INTERPCT = 0x6090;\n// const DEFORM_LIMIT = 0x60A0;\n// const USE_CONTOUR = 0x6100;\n// const USE_TWEEN = 0x6110;\n// const USE_SCALE = 0x6120;\n// const USE_TWIST = 0x6130;\n// const USE_TEETER = 0x6140;\n// const USE_FIT = 0x6150;\n// const USE_BEVEL = 0x6160;\n// const DEFAULT_VIEW = 0x3000;\n// const VIEW_TOP = 0x3010;\n// const VIEW_BOTTOM = 0x3020;\n// const VIEW_LEFT = 0x3030;\n// const VIEW_RIGHT = 0x3040;\n// const VIEW_FRONT = 0x3050;\n// const VIEW_BACK = 0x3060;\n// const VIEW_USER = 0x3070;\n// const VIEW_CAMERA = 0x3080;\n// const VIEW_WINDOW = 0x3090;\n// const VIEWPORT_LAYOUT_OLD = 0x7000;\n// const VIEWPORT_DATA_OLD = 0x7010;\n// const VIEWPORT_LAYOUT = 0x7001;\n// const VIEWPORT_DATA = 0x7011;\n// const VIEWPORT_DATA_3 = 0x7012;\n// const VIEWPORT_SIZE = 0x7020;\n// const NETWORK_VIEW = 0x7030;\n\nexport { TDSLoader };\n","import * as THREE from 'three'\r\nimport { EffectComposer } from 'three/examples/jsm/postprocessing/EffectComposer'\r\nimport { RenderPass } from 'three/examples/jsm/postprocessing/RenderPass'\r\nimport { SQWater } from './SQWater'\r\n// import { ClearPass } from 'three/examples/jsm/postprocessing/ClearPass'\r\n// import FresnelShader from './FresnelShader'\r\nimport { Stats } from 'three-stats'\r\nimport { TardisCard, TardisCardShape } from './TardisCard'\r\nimport { Carousel } from './Carousel'\r\nimport { TDSLoader } from 'three/examples/jsm/loaders/TDSLoader'\r\nimport { CustomCSS3DObject, CustomCSS3DSprite, CustomCSS3DRenderer } from './CustomCSS3DRenderer'\r\nimport { DampingObjectController, DampingVector3Controller } from './Utils'\r\nimport { RefractionObject, RefractionManager } from '../ThreeRealisticRefraction/ThreeRealisticRefraction'\r\nimport { RoundedBoxGeometry } from 'three/examples/jsm/geometries/RoundedBoxGeometry'\r\n// import { TextGeometry } from 'three/examples/jsm/geometries/TextGeometry'\r\n// import { Font } from 'three/examples/jsm/loaders/FontLoader'\r\n// import { BrickManager } from './Brick'\r\nimport { controller } from '../AnimUtils/TweenUtils'\r\n// import * as GEOM from '../GeomUtils'\r\n\r\nclass FrontPageManager {\r\n    container: HTMLElement\r\n    renderer: THREE.WebGLRenderer\r\n    // controls: OrbitControls\r\n    cardInsideScene: THREE.Scene\r\n    scene: THREE.Scene\r\n    reflectionScene: THREE.Scene\r\n    composer: EffectComposer\r\n    stats: Stats\r\n\r\n    refractionManager: RefractionManager\r\n    glassMesh1Controller: DampingObjectController\r\n\r\n    // cursor position\r\n    mousePosX: number\r\n    mousePosY: number\r\n    pointer: THREE.Vector2\r\n\r\n    // camera\r\n    camera: THREE.PerspectiveCamera\r\n    cameraZPosition: number\r\n    cameraPositionController: DampingVector3Controller\r\n    cameraTargetPosition: THREE.Vector3\r\n    cameraWithMouseMoveFactor: number\r\n    cameraWithMouseRotateFactor: number\r\n\r\n    // cursor light\r\n    cursorLightGroup: THREE.Group\r\n    cursorLight: THREE.PointLight\r\n    cursorLightController: DampingObjectController\r\n\r\n    // intersections\r\n    raycaster: THREE.Raycaster\r\n    intersectTardisCardObjs: Array<THREE.Object3D>\r\n    intersectGlassObjs: Array<THREE.Object3D>\r\n\r\n    // glass intersections\r\n    glassSelected: THREE.Mesh | undefined\r\n    glassIsRotating: Boolean\r\n\r\n    // css\r\n    cssScene: THREE.Scene\r\n    cssRenderer: CustomCSS3DRenderer | undefined\r\n    cssAttachObject: THREE.Mesh\r\n\r\n    // carousel\r\n    carousel1: Carousel\r\n    carousel2: Carousel\r\n\r\n    // loading manager\r\n    loadingManager: THREE.LoadingManager\r\n\r\n    constructor(_container: HTMLElement,\r\n        onLoad?: () => void,\r\n        onProgress?: (url: string, loaded: number, total: number) => void,\r\n        onError?: (url: string) => void\r\n        ) {\r\n\r\n        // *********** basic settings ***********\r\n        this.cameraZPosition = 500\r\n        this.container = _container\r\n        this.camera = new THREE.PerspectiveCamera( 45, window.innerWidth / window.innerHeight, 1, 5000 )\r\n        this.renderer = new THREE.WebGLRenderer( {alpha: true} )\r\n        this.renderer.setClearColor( 0xffffff )\r\n        this.renderer.setPixelRatio( window.devicePixelRatio )\r\n        this.renderer.setSize(window.innerWidth, window.innerHeight)\r\n        this.renderer.domElement.style.position = 'absolute'\r\n        this.renderer.domElement.style.top = '0px'\r\n        this.renderer.domElement.style.left = '0px'\r\n        this.container.appendChild( this.renderer.domElement )\r\n        // TODO: (debug stats)\r\n        this.stats = new Stats()\r\n        this.stats.domElement.style.zIndex = '100'\r\n        this.container.appendChild( this.stats.domElement )\r\n\r\n        this.scene = new THREE.Scene()\r\n        this.cssScene = new THREE.Scene()\r\n        this.cardInsideScene = new THREE.Scene()\r\n        this.reflectionScene = new THREE.Scene()\r\n\r\n        // \r\n        this.loadingManager = new THREE.LoadingManager(() => {\r\n            if (onLoad) {\r\n                onLoad()\r\n            }\r\n        }, (url: string, loaded: number, total: number) => {\r\n            if (onProgress) {\r\n                onProgress(url, loaded, total)\r\n            }\r\n        }, (url) => {\r\n            if (onError) {\r\n                onError(url)\r\n            }\r\n        })\r\n\r\n        // *********** background & env ***********\r\n        const r = './cube1/'\r\n        const urls = [\r\n            r + 'px.jpg', r + 'nx.jpg',\r\n            r + 'py.jpg', r + 'ny.jpg',\r\n            r + 'pz.jpg', r + 'nz.jpg'\r\n        ]\r\n        const textureCube = new THREE.CubeTextureLoader(this.loadingManager).load( urls )\r\n        textureCube.mapping = THREE.CubeRefractionMapping\r\n        // this.scene.background = textureCube\r\n        this.scene.environment = textureCube\r\n\r\n\r\n        // *********** set light ***********\r\n        var light = new THREE.DirectionalLight()\r\n        light.intensity = 0.8\r\n        light.position.x = 80\r\n        light.position.y = 80\r\n        light.position.z = 100\r\n        this.scene.add(light)\r\n\r\n        // *********** refraction objects ***********\r\n        this.refractionManager = new RefractionManager(this.scene, this.container, this.renderer, this.camera)\r\n        var glassMesh1 = new THREE.Mesh(\r\n            new RoundedBoxGeometry(40, 40, 40, 5, 5),\r\n            // new THREE.BoxGeometry(40, 40, 40),\r\n            new THREE.MeshPhongMaterial({})\r\n        )\r\n        // raycast interaction agent with simple shape, to save calculation cost\r\n        var glassMesh1InteractAgent = new THREE.Mesh(new THREE.BoxGeometry(40,40,40), new THREE.MeshBasicMaterial({}))\r\n        glassMesh1InteractAgent.visible = false\r\n        glassMesh1.add(glassMesh1InteractAgent)\r\n\r\n        glassMesh1.rotation.set(1,1,1)\r\n        this.refractionManager.addRefractionMesh(glassMesh1, true, null, 0x00ff00, 0x4060ff, 1.3, 0.8)\r\n        this.glassMesh1Controller = new DampingObjectController(glassMesh1, 0.2, 0.1)\r\n\r\n\r\n        // *********** composers ***********\r\n        const renderPass1 = new RenderPass(this.scene, this.camera)\r\n        renderPass1.clear = true\r\n        const renderPass2 = new RenderPass(this.cardInsideScene, this.camera)\r\n        renderPass2.clearDepth = true\r\n        renderPass2.clear = false\r\n        this.composer = new EffectComposer(this.renderer, new THREE.WebGLMultisampleRenderTarget(\r\n            this.container.offsetWidth * window.devicePixelRatio,\r\n            this.container.offsetHeight * window.devicePixelRatio\r\n        ))\r\n        // this.composer = new EffectComposer(this.renderer)\r\n        this.composer.addPass(renderPass1)\r\n        this.composer.addPass(renderPass2)\r\n        this.composer.renderTarget1.stencilBuffer = true\r\n        this.composer.renderTarget2.stencilBuffer = true\r\n\r\n\r\n        // *********** tardis cards ***********\r\n\r\n        var tardisCardTop = new TardisCard(100, 400, 110,\r\n            this.scene, this.cardInsideScene, new THREE.Vector3(0, 200, 0), new THREE.Euler(), TardisCardShape.RECT,\r\n            null)\r\n        tardisCardTop.addSkybox(textureCube)\r\n        var contentGroupInTardisCardTop = new THREE.Group()\r\n        var titleTexture = new THREE.TextureLoader(this.loadingManager).load( './title.png' )\r\n        var tardisCardTopTitle = new THREE.Mesh(\r\n            new THREE.PlaneBufferGeometry(390, 90, 1, 1),\r\n            new THREE.MeshBasicMaterial({\r\n                color: 0xffffff,\r\n                alphaMap: titleTexture,\r\n                alphaToCoverage: true,\r\n                transparent: true,\r\n            })\r\n        )\r\n        contentGroupInTardisCardTop.add(tardisCardTopTitle)\r\n        contentGroupInTardisCardTop.position.copy(tardisCardTop.cardMesh.position)\r\n        tardisCardTop.addVisibleObjectGroup(contentGroupInTardisCardTop)\r\n        this.cssAttachObject = tardisCardTop.cardMesh\r\n            \r\n        var tardisCard1 = new TardisCard(200, 200, 111,\r\n            this.scene, this.cardInsideScene, new THREE.Vector3(0, 0, 0), new THREE.Euler(), TardisCardShape.RECT,\r\n            this.reflectionScene, 0xc0d0d0)\r\n        \r\n        var diffuseTexture = new THREE.TextureLoader(this.loadingManager).load( './marble/diffuse.jpg' )\r\n        var normalTexture = new THREE.TextureLoader(this.loadingManager).load( './marble/normal.jpg' )\r\n        var specTexture = new THREE.TextureLoader(this.loadingManager).load( './marble/specular.jpg' )\r\n        var texs = [diffuseTexture, normalTexture, specTexture]\r\n        texs.forEach(t => {\r\n            t.wrapS = t.wrapT = THREE.RepeatWrapping\r\n            t.repeat.set(1, 2)\r\n        })\r\n        var contentGroupInTardisCard1 = new THREE.Group()\r\n        // https://github.com/mrdoob/three.js/blob/master/examples/webgl_loader_3ds.html\r\n        const pgnormal = new THREE.TextureLoader(this.loadingManager).load( './jutabag3ds/texture/normal.jpg' )\r\n        const loader = new TDSLoader(this.loadingManager);\r\n        loader.setResourcePath('./jutabag3ds/texture/')\r\n        loader.load( './jutabag3ds/portalgun.3ds', (obj) => {\r\n            if (obj instanceof THREE.Group) {\r\n                obj.traverse( function ( child ) {\r\n                    if ( child instanceof THREE.Mesh ) {\r\n                        console.log(child.material)\r\n                        child.material.color = new THREE.Color(0xffffff)\r\n                        // child.material.map = pgcolor\r\n                        child.material.normalMap = pgnormal\r\n                    }\r\n                } )\r\n                obj.scale.multiplyScalar(80)\r\n                obj.position.x -= 20\r\n                obj.position.y += 10\r\n                obj.position.z -= 80\r\n                obj.rotation.x = -2\r\n                obj.rotation.z = 0.7\r\n                contentGroupInTardisCard1.add(obj)\r\n                \r\n                var tardisCardBackground1 = new THREE.Mesh(\r\n                    new THREE.PlaneBufferGeometry(500, 500, 1, 1),\r\n                    new THREE.MeshPhysicalMaterial({\r\n                        color: 0xccffff,\r\n                        map: diffuseTexture,\r\n                        normalMap: normalTexture,\r\n                        normalScale: new THREE.Vector2(0.1, 0.1),\r\n                        specularColorMap: specTexture,\r\n                        specularIntensity: 4,\r\n                        reflectivity: 1.0,\r\n                        metalness: 0.2,\r\n                        roughness: 0.1,\r\n                        clearcoat: 0.5,\r\n\r\n                    })\r\n                )\r\n                tardisCardBackground1.position.set(0, 0, -150)\r\n                contentGroupInTardisCard1.add(tardisCardBackground1)\r\n                contentGroupInTardisCard1.position.copy(tardisCard1.cardMesh.position)\r\n                tardisCard1.addVisibleObjectGroup(contentGroupInTardisCard1)\r\n            }\r\n            // contentGroupInTardisCard1.add(obj)\r\n        });\r\n\r\n        \r\n        var tardisCard2 = new TardisCard(100, 100, 112, this.scene, this.cardInsideScene, new THREE.Vector3(200, 0, 0), new THREE.Euler(), TardisCardShape.CIRCLE,\r\n        this.reflectionScene, 0xd0c0d0)\r\n        this.carousel1 = new Carousel({\r\n            numOfVisiblePics: 5,\r\n            planeWidth: 80,\r\n            planeHeight: 80,\r\n            carouselArrayRadius: 120\r\n        })\r\n        var diffuseTexture2 = new THREE.TextureLoader(this.loadingManager).load( './painting/crop1_diffuse.png' )\r\n        var normalTexture2 = new THREE.TextureLoader(this.loadingManager).load( './painting/crop1_normal.png' )\r\n        var specTexture2 = new THREE.TextureLoader(this.loadingManager).load( './painting/crop1_specular.png' )\r\n        texs = [diffuseTexture2, normalTexture2, specTexture2]\r\n        var tardisCardBackground = new THREE.Mesh(\r\n            new THREE.PlaneBufferGeometry(500, 500, 1, 1),\r\n            new THREE.MeshPhysicalMaterial({\r\n                map: diffuseTexture2,\r\n                normalMap: normalTexture2,\r\n                specularColorMap: specTexture2,\r\n                normalScale: new THREE.Vector2(0.4, 0.4),\r\n                specularIntensity: 0.2,\r\n                reflectivity: 0.1,\r\n                metalness: 0.1,\r\n                roughness: 0.4\r\n            })\r\n        )\r\n        tardisCardBackground.position.set(0, 0, -150)\r\n        // scene.add(contentInTardisCard)\r\n        var contentGroupInTardisCard2 = new THREE.Group()\r\n        contentGroupInTardisCard2.add(this.carousel1)\r\n        contentGroupInTardisCard2.add(tardisCardBackground)\r\n        contentGroupInTardisCard2.position.copy(tardisCard2.cardMesh.position)\r\n        tardisCard2.addVisibleObjectGroup(contentGroupInTardisCard2)\r\n        \r\n        var tardisCard3 = new TardisCard(100, 100, 113, this.scene, this.cardInsideScene, new THREE.Vector3(-200, 0, 0), new THREE.Euler(), TardisCardShape.CIRCLE,\r\n        this.reflectionScene, 0xa0c090)\r\n        this.carousel2 = new Carousel({\r\n            numOfVisiblePics: 4,\r\n            planeWidth: 70,\r\n            planeHeight: 70,\r\n            carouselArrayRadius: 120\r\n        })\r\n        var diffuseTexture3 = new THREE.TextureLoader(this.loadingManager).load( './painting/crop2_diffuse.png' )\r\n        var normalTexture3 = new THREE.TextureLoader(this.loadingManager).load( './painting/crop2_normal.png' )\r\n        var specTexture3 = new THREE.TextureLoader(this.loadingManager).load( './painting/crop2_specular.png' )\r\n        texs = [diffuseTexture3, normalTexture3]\r\n        // texs.forEach(t => {\r\n        //     t.wrapS = t.wrapT = THREE.RepeatWrapping\r\n        //     t.repeat.set(4, 4)\r\n        // })\r\n        tardisCardBackground = new THREE.Mesh(\r\n            new THREE.PlaneBufferGeometry(500, 500, 1, 1),\r\n            new THREE.MeshPhysicalMaterial({\r\n                color: 0xffff80,\r\n                map: diffuseTexture3,\r\n                normalMap: normalTexture3,\r\n                specularColorMap: specTexture3,\r\n                normalScale: new THREE.Vector2(0.5, 0.5),\r\n                specularIntensity: 0.2,\r\n                reflectivity: 0.8,\r\n                metalness: 0,\r\n                roughness: 0.2,\r\n            })\r\n        )\r\n        tardisCardBackground.position.set(0, 0, -150)\r\n        var contentGroupInTardisCard3 = new THREE.Group()\r\n        contentGroupInTardisCard3.add(this.carousel2)\r\n        contentGroupInTardisCard3.add(tardisCardBackground)\r\n        contentGroupInTardisCard3.position.copy(tardisCard3.cardMesh.position)\r\n        tardisCard3.addVisibleObjectGroup(contentGroupInTardisCard3)\r\n\r\n\r\n        // *********** water ***********\r\n        const waterGeometry = new THREE.PlaneGeometry( 1000, 400 )\r\n        const water = new SQWater( waterGeometry, this.reflectionScene, {\r\n            // color: params.color,\r\n            // scale: params.scale,\r\n            flowDirection: new THREE.Vector2( 1, 1 ),\r\n            textureWidth: 512,\r\n            textureHeight: 512\r\n        } );\r\n\r\n        // water.position.y = 1;\r\n        water.position.z += 200;\r\n        water.position.y -= 110;\r\n        water.rotation.x = Math.PI * - 0.5;\r\n        this.scene.add( water );\r\n\r\n\r\n        // *********** camera movement ***********\r\n        this.cameraTargetPosition = new THREE.Vector3(0, 0, this.cameraZPosition)\r\n        this.camera.position.copy(this.cameraTargetPosition)\r\n        this.camera.lookAt(0, 0, 0)\r\n        this.cameraWithMouseMoveFactor = 0.04\r\n        this.cameraWithMouseRotateFactor = 0.015\r\n        this.cameraPositionController = new DampingVector3Controller(this.camera.position, 0.5, 0.05)\r\n        window.addEventListener('mousemove', e => {\r\n            self.onMouseMove(e)\r\n        })\r\n\r\n\r\n        // *********** cursor light ***********\r\n        this.cursorLightGroup = new THREE.Group()\r\n        this.cursorLight = new THREE.PointLight()\r\n        this.cursorLight.intensity = 1\r\n        this.cursorLight.decay = 1\r\n        this.cursorLight.distance = 200\r\n        this.cursorLight.color = new THREE.Color( 0xaaccff )\r\n        this.cursorLightGroup.add(this.cursorLight)\r\n        this.scene.add(this.cursorLightGroup)\r\n        this.cursorLightController = new DampingObjectController(this.cursorLightGroup, 0.3, 0.1)\r\n        \r\n\r\n        // *********** raycast intersections ***********\r\n        this.raycaster = new THREE.Raycaster()\r\n        this.intersectTardisCardObjs = []\r\n        this.intersectTardisCardObjs.push(tardisCardTop.cardMesh, tardisCard1.cardMesh, tardisCard2.cardMesh, tardisCard3.cardMesh)\r\n        this.intersectGlassObjs = []\r\n        this.glassSelected = undefined\r\n        this.glassIsRotating = false\r\n        this.intersectGlassObjs.push(glassMesh1InteractAgent)\r\n\r\n\r\n        // *********** events ***********\r\n        this.mousePosX = 0\r\n        this.mousePosY = 0\r\n        this.pointer = new THREE.Vector2()\r\n        const self = this\r\n        window.addEventListener( 'resize', () => {\r\n            self.onWindowResize()\r\n        } )\r\n        window.addEventListener( 'click', (e) => {\r\n            self.onClick(e)\r\n        } )\r\n\r\n\r\n        // *********** final animate ***********\r\n        this.animate()\r\n    }\r\n\r\n    animate = () => {\r\n        requestAnimationFrame( this.animate )\r\n        // damping controllers\r\n        this.updatecornerObject()\r\n        this.updateCamera()\r\n        this.updateCursorLight()\r\n        this.render()\r\n        this.stats.update()\r\n    }\r\n\r\n    render()\r\n    {\r\n        this.composer.render()\r\n        this.renderer.clearDepth()\r\n        this.refractionManager.render()\r\n        if (this.cssRenderer) {\r\n            this.cssRenderer.render(this.cssScene, this.camera)\r\n        }\r\n    }\r\n\r\n    onWindowResize() {\r\n        this.camera.aspect = window.innerWidth / window.innerHeight\r\n        this.camera.updateProjectionMatrix()\r\n        this.refractionManager.onWindowResize()\r\n        this.renderer.setSize( window.innerWidth, window.innerHeight )\r\n        this.composer.setSize( window.innerWidth, window.innerHeight )\r\n        if (this.cssRenderer) {\r\n            this.cssRenderer.setSize( window.innerWidth, window.innerHeight )\r\n        }\r\n    }\r\n    \r\n    onMouseMove(e: MouseEvent) {\r\n        this.mousePosX = e.clientX\r\n        this.mousePosY = e.clientY\r\n        this.pointer.x = ( e.clientX / window.innerWidth ) * 2 - 1;\r\n\t\tthis.pointer.y = - ( e.clientY / window.innerHeight ) * 2 + 1;\r\n\r\n        this.raycaster.setFromCamera( this.pointer, this.camera )\r\n        const intersects = this.raycaster.intersectObjects( this.intersectGlassObjs, false )\r\n        if (intersects.length == 1 && !this.glassIsRotating && this.glassSelected !== intersects[0].object.parent) {\r\n            console.log('in')\r\n            this.glassIsRotating = true\r\n            const intersectObj = intersects[0].object.parent\r\n            const refObj = intersectObj ? intersectObj['refractionObject'] : null\r\n            if (intersectObj instanceof THREE.Mesh && refObj instanceof RefractionObject) {\r\n                this.glassSelected = intersectObj\r\n                controller.tweenEuler(this.glassSelected.rotation, new THREE.Euler(1,6,1), (v) => {\r\n                        intersectObj.rotation.copy(v)\r\n                    },\r\n                    () => {this.glassIsRotating = false},\r\n                    500\r\n                )\r\n                controller.tweenNumber(1, 0, (val) => {\r\n                    refObj.refractionMaterialUniforms['absorbColor'].value.b = val\r\n                },\r\n                () => {},\r\n                500)\r\n            }\r\n            // this.glassSelected.rotation.set(1,2,1)\r\n        }\r\n        else if (intersects.length == 0 && !this.glassIsRotating && this.glassSelected !== undefined) {\r\n            console.log('out')\r\n            this.glassIsRotating = true\r\n            let rotateObj = this.glassSelected\r\n            const refObj = this.glassSelected['refractionObject']\r\n            controller.tweenEuler(this.glassSelected.rotation, new THREE.Euler(1,1,1), (v) => {\r\n                rotateObj.rotation.copy(v)\r\n                },\r\n                () => {this.glassIsRotating = false},\r\n                500\r\n            )\r\n            controller.tweenNumber(0, 1, (val) => {\r\n                refObj.refractionMaterialUniforms['absorbColor'].value.b = val\r\n            },\r\n            () => {},\r\n            500)\r\n            this.glassSelected = undefined\r\n        }\r\n    }\r\n\r\n    onClick(e: MouseEvent) {\r\n        if (this.glassSelected) {\r\n            return\r\n        }\r\n        const intersects = this.raycaster.intersectObjects( this.intersectTardisCardObjs, false )\r\n        \r\n        if (intersects.length == 1) {\r\n            const intersectObj = intersects[0]\r\n            controller.tweenThreeVector3(\r\n                this.cameraTargetPosition,\r\n                new THREE.Vector3(\r\n                    intersectObj.object.position.x,\r\n                    intersectObj.object.position.y,\r\n                    this.cameraTargetPosition.z\r\n                ),\r\n                (updatedVec) => {\r\n                    this.cameraTargetPosition.copy(updatedVec)\r\n                },\r\n                () => {},\r\n                750\r\n            )\r\n            this.carousel1.clickToRotate(this.raycaster, (carouselIndex) => {\r\n                console.log('new carousel img index', carouselIndex)\r\n                return `https://picsum.photos/id/${Math.ceil(Math.random() * 50)}/200/200`\r\n            })\r\n            this.carousel2.clickToChangeTex(this.raycaster, (carouselIndex) => {\r\n                console.log('new carousel img index', carouselIndex)\r\n                return `https://picsum.photos/id/${Math.ceil(Math.random() * 50)}/200/200`\r\n            })\r\n            // change carousel\r\n        }\r\n    }\r\n\r\n    getRaycastPos(posX: number, posY: number) {\r\n        let x = (2.0 * posX) / window.innerWidth - 1.0\r\n        let y = 1.0 - (2.0 * posY) / window.innerHeight\r\n        // let z = 1.0\r\n        // let ray_nds = new THREE.Vector3(x, y, z)\r\n        let ray = new THREE.Vector3(x, y, 0.995)\r\n        ray.unproject(this.camera)\r\n        return ray\r\n    }\r\n\r\n    updatecornerObject() {\r\n        let targetPos = this.getRaycastPos(window.innerWidth - 200, window.innerHeight / 2)\r\n        // let lastPos = cornerObject.position\r\n        this.glassMesh1Controller.update(targetPos)\r\n        // let currentPath = targetPos.sub(lastPos)\r\n        // cornerObjectVelocity.multiplyScalar(0.3)\r\n        // cornerObjectVelocity.add(currentPath.multiplyScalar(damp))\r\n        // cornerObject.position.add(cornerObjectVelocity)\r\n    }\r\n\r\n    updateCamera() {\r\n        const relX = window.innerWidth / 2 - this.mousePosX\r\n        const relY = window.innerHeight / 2 - this.mousePosY\r\n        // console.log(this.cameraTargetPosition)\r\n        const dampPos = (new THREE.Vector3(\r\n            -relX * this.cameraWithMouseMoveFactor,\r\n            relY * this.cameraWithMouseMoveFactor,\r\n            0\r\n        )).add(this.cameraTargetPosition)\r\n\r\n        this.cameraPositionController.update(dampPos)\r\n        var vel = this.cameraPositionController.velocity\r\n        this.camera.rotation.x = vel.y * this.cameraWithMouseRotateFactor\r\n        this.camera.rotation.y = -vel.x * this.cameraWithMouseRotateFactor\r\n    }\r\n\r\n    updateCursorLight() {\r\n        if (!isNaN(this.mousePosX) && !isNaN(this.mousePosY)) {\r\n            let targetPos = this.getRaycastPos(this.mousePosX, this.mousePosY)\r\n            let camPosZ = this.camera.position.z\r\n            let targetPosVec = new THREE.Vector3().copy(targetPos)\r\n            targetPosVec = targetPosVec.sub(this.camera.position)\r\n            let newz = -200\r\n            let x = (newz - camPosZ) / targetPosVec.z\r\n            targetPos.copy(this.camera.position)\r\n            targetPosVec.multiplyScalar(x)\r\n            targetPos.add(targetPosVec)\r\n            targetPos.z += 100\r\n            this.cursorLightController.update(targetPos)\r\n            // console.log(targetPos)\r\n        }\r\n    }\r\n\r\n    registerCSSCoordinator(htmlContainer: HTMLElement, htmlElem: HTMLElement, position: THREE.Vector3 = new THREE.Vector3(), scale: number = 1.0): CustomCSS3DObject {\r\n        if (this.cssRenderer == undefined) {\r\n            this.cssRenderer = new CustomCSS3DRenderer(htmlContainer)\r\n            this.cssRenderer.setSize( window.innerWidth, window.innerHeight )\r\n        }\r\n        // controls = new OrbitControls(camera, cssRenderer.domElement)\r\n        const object = new CustomCSS3DObject( htmlElem )\r\n        object.position.copy(position)\r\n        object.scale.multiplyScalar(scale)\r\n        this.cssScene.add(object)\r\n        return object\r\n        // cssCoordinators.push(new ThreeCSSCoordinator(htmlContainer, htmlCamera, htmlElem, camera, position))\r\n    }\r\n\r\n\r\n\r\n    \r\n}\r\n\r\n\r\n\r\nexport {\r\n    FrontPageManager\r\n}","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\r\nimport * as THREE from 'three'\r\nimport Vue from 'vue'\r\nimport { FrontPageManager } from '../scripts/Three/FrontPage'\r\n\r\ntype Data = {\r\n    fpm: FrontPageManager | null,\r\n    loadingStat: {\r\n        loaded: number,\r\n        total: number,\r\n        isLoaded: boolean,\r\n        noLoadingStat: boolean\r\n    }\r\n}\r\n\r\nexport default Vue.extend({\r\n    data(): Data {\r\n        return {\r\n            fpm: null,\r\n            loadingStat: {\r\n                loaded: 1,\r\n                total: 2,\r\n                isLoaded: false,\r\n                noLoadingStat: false\r\n            }\r\n        }\r\n    },\r\n    mounted() {\r\n        const self = this\r\n        if (this.$refs['canvas-container'] instanceof HTMLElement) {\r\n            this.fpm = new FrontPageManager(\r\n                this.$refs['canvas-container'],\r\n                () => {\r\n                    console.log('loaded')\r\n                    self.loadingStat.isLoaded = true\r\n                    setTimeout(() => {\r\n                        self.loadingStat.noLoadingStat = true\r\n                    }, 501)\r\n                },\r\n                (_, loaded, total) => {\r\n                    this.loadingStat.loaded = loaded\r\n                    this.loadingStat.total = total\r\n                },\r\n                (url) => {\r\n                    console.error('failed to load asset: ' + url)\r\n                    self.loadingStat.isLoaded = true\r\n                }\r\n            )\r\n            // ThreeGlassRefraction.initScene(this.$refs['canvas-container'])\r\n            if (this.$refs['dom3d-container'] instanceof HTMLElement && this.$refs['dom3d-glass'] instanceof HTMLElement) {\r\n                const glassCSSObj = this.fpm.registerCSSCoordinator(this.$refs['dom3d-container'], this.$refs['dom3d-glass'], new THREE.Vector3(0, 20, 10))\r\n                glassCSSObj.setFollowObject(this.fpm.glassMesh1Controller.object, new THREE.Vector3())\r\n            }\r\n            if (this.$refs['dom3d-container'] instanceof HTMLElement && this.$refs['dom3d-test'] instanceof HTMLElement) {\r\n                this.fpm.registerCSSCoordinator(this.$refs['dom3d-container'], this.$refs['dom3d-test'], new THREE.Vector3(-200, 110, 0))\r\n            }\r\n        }\r\n    },\r\n    methods: {\r\n        onGlassClick() {\r\n            alert('glass clicked!')\r\n        }\r\n    }\r\n})\r\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--15-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/ts-loader/index.js??ref--15-3!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ThreeFrontpageTest.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--15-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/ts-loader/index.js??ref--15-3!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ThreeFrontpageTest.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./ThreeFrontpageTest.vue?vue&type=template&id=530f970e&scoped=true&\"\nimport script from \"./ThreeFrontpageTest.vue?vue&type=script&lang=ts&\"\nexport * from \"./ThreeFrontpageTest.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./ThreeFrontpageTest.vue?vue&type=style&index=0&id=530f970e&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"530f970e\",\n  null\n  \n)\n\nexport default component.exports","'use strict';\nvar $ = require('../internals/export');\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar aCallable = require('../internals/a-callable');\nvar toObject = require('../internals/to-object');\nvar lengthOfArrayLike = require('../internals/length-of-array-like');\nvar toString = require('../internals/to-string');\nvar fails = require('../internals/fails');\nvar internalSort = require('../internals/array-sort');\nvar arrayMethodIsStrict = require('../internals/array-method-is-strict');\nvar FF = require('../internals/engine-ff-version');\nvar IE_OR_EDGE = require('../internals/engine-is-ie-or-edge');\nvar V8 = require('../internals/engine-v8-version');\nvar WEBKIT = require('../internals/engine-webkit-version');\n\nvar test = [];\nvar un$Sort = uncurryThis(test.sort);\nvar push = uncurryThis(test.push);\n\n// IE8-\nvar FAILS_ON_UNDEFINED = fails(function () {\n  test.sort(undefined);\n});\n// V8 bug\nvar FAILS_ON_NULL = fails(function () {\n  test.sort(null);\n});\n// Old WebKit\nvar STRICT_METHOD = arrayMethodIsStrict('sort');\n\nvar STABLE_SORT = !fails(function () {\n  // feature detection can be too slow, so check engines versions\n  if (V8) return V8 < 70;\n  if (FF && FF > 3) return;\n  if (IE_OR_EDGE) return true;\n  if (WEBKIT) return WEBKIT < 603;\n\n  var result = '';\n  var code, chr, value, index;\n\n  // generate an array with more 512 elements (Chakra and old V8 fails only in this case)\n  for (code = 65; code < 76; code++) {\n    chr = String.fromCharCode(code);\n\n    switch (code) {\n      case 66: case 69: case 70: case 72: value = 3; break;\n      case 68: case 71: value = 4; break;\n      default: value = 2;\n    }\n\n    for (index = 0; index < 47; index++) {\n      test.push({ k: chr + index, v: value });\n    }\n  }\n\n  test.sort(function (a, b) { return b.v - a.v; });\n\n  for (index = 0; index < test.length; index++) {\n    chr = test[index].k.charAt(0);\n    if (result.charAt(result.length - 1) !== chr) result += chr;\n  }\n\n  return result !== 'DGBEFHACIJK';\n});\n\nvar FORCED = FAILS_ON_UNDEFINED || !FAILS_ON_NULL || !STRICT_METHOD || !STABLE_SORT;\n\nvar getSortCompare = function (comparefn) {\n  return function (x, y) {\n    if (y === undefined) return -1;\n    if (x === undefined) return 1;\n    if (comparefn !== undefined) return +comparefn(x, y) || 0;\n    return toString(x) > toString(y) ? 1 : -1;\n  };\n};\n\n// `Array.prototype.sort` method\n// https://tc39.es/ecma262/#sec-array.prototype.sort\n$({ target: 'Array', proto: true, forced: FORCED }, {\n  sort: function sort(comparefn) {\n    if (comparefn !== undefined) aCallable(comparefn);\n\n    var array = toObject(this);\n\n    if (STABLE_SORT) return comparefn === undefined ? un$Sort(array) : un$Sort(array, comparefn);\n\n    var items = [];\n    var arrayLength = lengthOfArrayLike(array);\n    var itemsLength, index;\n\n    for (index = 0; index < arrayLength; index++) {\n      if (index in array) push(items, array[index]);\n    }\n\n    internalSort(items, getSortCompare(comparefn));\n\n    itemsLength = items.length;\n    index = 0;\n\n    while (index < itemsLength) array[index] = items[index++];\n    while (index < arrayLength) delete array[index++];\n\n    return array;\n  }\n});\n","var userAgent = require('../internals/engine-user-agent');\n\nvar webkit = userAgent.match(/AppleWebKit\\/(\\d+)\\./);\n\nmodule.exports = !!webkit && +webkit[1];\n","var map = {\n\t\"./GlassFrontShader/V.glsl\": \"c444\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"5303\";","import {\n\tBoxGeometry,\n\tVector3\n} from 'three';\n\nconst _tempNormal = new Vector3();\n\nfunction getUv( faceDirVector, normal, uvAxis, projectionAxis, radius, sideLength ) {\n\n\tconst totArcLength = 2 * Math.PI * radius / 4;\n\n\t// length of the planes between the arcs on each axis\n\tconst centerLength = Math.max( sideLength - 2 * radius, 0 );\n\tconst halfArc = Math.PI / 4;\n\n\t// Get the vector projected onto the Y plane\n\t_tempNormal.copy( normal );\n\t_tempNormal[ projectionAxis ] = 0;\n\t_tempNormal.normalize();\n\n\t// total amount of UV space alloted to a single arc\n\tconst arcUvRatio = 0.5 * totArcLength / ( totArcLength + centerLength );\n\n\t// the distance along one arc the point is at\n\tconst arcAngleRatio = 1.0 - ( _tempNormal.angleTo( faceDirVector ) / halfArc );\n\n\tif ( Math.sign( _tempNormal[ uvAxis ] ) === 1 ) {\n\n\t\treturn arcAngleRatio * arcUvRatio;\n\n\t} else {\n\n\t\t// total amount of UV space alloted to the plane between the arcs\n\t\tconst lenUv = centerLength / ( totArcLength + centerLength );\n\t\treturn lenUv + arcUvRatio + arcUvRatio * ( 1.0 - arcAngleRatio );\n\n\t}\n\n}\n\nclass RoundedBoxGeometry extends BoxGeometry {\n\n\tconstructor( width = 1, height = 1, depth = 1, segments = 2, radius = 0.1 ) {\n\n\t\t// ensure segments is odd so we have a plane connecting the rounded corners\n\t\tsegments = segments * 2 + 1;\n\n\t\t// ensure radius isn't bigger than shortest side\n\t\tradius = Math.min( width / 2, height / 2, depth / 2, radius );\n\n\t\tsuper( 1, 1, 1, segments, segments, segments );\n\n\t\t// if we just have one segment we're the same as a regular box\n\t\tif ( segments === 1 ) return;\n\n\t\tconst geometry2 = this.toNonIndexed();\n\n\t\tthis.index = null;\n\t\tthis.attributes.position = geometry2.attributes.position;\n\t\tthis.attributes.normal = geometry2.attributes.normal;\n\t\tthis.attributes.uv = geometry2.attributes.uv;\n\n\t\t//\n\n\t\tconst position = new Vector3();\n\t\tconst normal = new Vector3();\n\n\t\tconst box = new Vector3( width, height, depth ).divideScalar( 2 ).subScalar( radius );\n\n\t\tconst positions = this.attributes.position.array;\n\t\tconst normals = this.attributes.normal.array;\n\t\tconst uvs = this.attributes.uv.array;\n\n\t\tconst faceTris = positions.length / 6;\n\t\tconst faceDirVector = new Vector3();\n\t\tconst halfSegmentSize = 0.5 / segments;\n\n\t\tfor ( let i = 0, j = 0; i < positions.length; i += 3, j += 2 ) {\n\n\t\t\tposition.fromArray( positions, i );\n\t\t\tnormal.copy( position );\n\t\t\tnormal.x -= Math.sign( normal.x ) * halfSegmentSize;\n\t\t\tnormal.y -= Math.sign( normal.y ) * halfSegmentSize;\n\t\t\tnormal.z -= Math.sign( normal.z ) * halfSegmentSize;\n\t\t\tnormal.normalize();\n\n\t\t\tpositions[ i + 0 ] = box.x * Math.sign( position.x ) + normal.x * radius;\n\t\t\tpositions[ i + 1 ] = box.y * Math.sign( position.y ) + normal.y * radius;\n\t\t\tpositions[ i + 2 ] = box.z * Math.sign( position.z ) + normal.z * radius;\n\n\t\t\tnormals[ i + 0 ] = normal.x;\n\t\t\tnormals[ i + 1 ] = normal.y;\n\t\t\tnormals[ i + 2 ] = normal.z;\n\n\t\t\tconst side = Math.floor( i / faceTris );\n\n\t\t\tswitch ( side ) {\n\n\t\t\t\tcase 0: // right\n\n\t\t\t\t\t// generate UVs along Z then Y\n\t\t\t\t\tfaceDirVector.set( 1, 0, 0 );\n\t\t\t\t\tuvs[ j + 0 ] = getUv( faceDirVector, normal, 'z', 'y', radius, depth );\n\t\t\t\t\tuvs[ j + 1 ] = 1.0 - getUv( faceDirVector, normal, 'y', 'z', radius, height );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 1: // left\n\n\t\t\t\t\t// generate UVs along Z then Y\n\t\t\t\t\tfaceDirVector.set( - 1, 0, 0 );\n\t\t\t\t\tuvs[ j + 0 ] = 1.0 - getUv( faceDirVector, normal, 'z', 'y', radius, depth );\n\t\t\t\t\tuvs[ j + 1 ] = 1.0 - getUv( faceDirVector, normal, 'y', 'z', radius, height );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 2: // top\n\n\t\t\t\t\t// generate UVs along X then Z\n\t\t\t\t\tfaceDirVector.set( 0, 1, 0 );\n\t\t\t\t\tuvs[ j + 0 ] = 1.0 - getUv( faceDirVector, normal, 'x', 'z', radius, width );\n\t\t\t\t\tuvs[ j + 1 ] = getUv( faceDirVector, normal, 'z', 'x', radius, depth );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 3: // bottom\n\n\t\t\t\t\t// generate UVs along X then Z\n\t\t\t\t\tfaceDirVector.set( 0, - 1, 0 );\n\t\t\t\t\tuvs[ j + 0 ] = 1.0 - getUv( faceDirVector, normal, 'x', 'z', radius, width );\n\t\t\t\t\tuvs[ j + 1 ] = 1.0 - getUv( faceDirVector, normal, 'z', 'x', radius, depth );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 4: // front\n\n\t\t\t\t\t// generate UVs along X then Y\n\t\t\t\t\tfaceDirVector.set( 0, 0, 1 );\n\t\t\t\t\tuvs[ j + 0 ] = 1.0 - getUv( faceDirVector, normal, 'x', 'y', radius, width );\n\t\t\t\t\tuvs[ j + 1 ] = 1.0 - getUv( faceDirVector, normal, 'y', 'x', radius, height );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 5: // back\n\n\t\t\t\t\t// generate UVs along X then Y\n\t\t\t\t\tfaceDirVector.set( 0, 0, - 1 );\n\t\t\t\t\tuvs[ j + 0 ] = getUv( faceDirVector, normal, 'x', 'y', radius, width );\n\t\t\t\t\tuvs[ j + 1 ] = 1.0 - getUv( faceDirVector, normal, 'y', 'x', radius, height );\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nexport { RoundedBoxGeometry };\n","export function loadShader(shaderName: string): Array<string> {\r\n    try {\r\n        var vertexShader = require('./' + shaderName + '/V.glsl')\r\n        var fragShader = require('./' + shaderName + '/F.glsl')\r\n        return [vertexShader, fragShader]\r\n    }\r\n    catch(err) {\r\n        console.error('failed to fetch shader', err)\r\n        return ['', '']\r\n    }\r\n}","import * as THREE from 'three'\r\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls'\r\nimport { RoundedBoxGeometry } from 'three/examples/jsm/geometries/RoundedBoxGeometry'\r\nimport { loadShader } from './ShaderLoader'\r\nimport { Stats } from 'three-stats'\r\nimport { ShaderMaterial } from 'three'\r\n\r\nexport class RefractionObject {\r\n    mesh: THREE.Mesh\r\n    originalMaterial: THREE.Material | THREE.Material[]\r\n    refractionMaterial: THREE.ShaderMaterial\r\n    backColor: THREE.Color\r\n    refractionMaterialUniforms: { [uniform: string]: THREE.IUniform }\r\n    // suResolution: THREE.Vector2\r\n    // suBackground: THREE.Texture\r\n    // suDepth: THREE.DepthTexture\r\n    constructor(scene: THREE.Scene, mesh: THREE.Mesh, suResolution: THREE.Vector2, suBackground: THREE.Texture, suImage: THREE.Texture | null, suDepth: THREE.DepthTexture,\r\n        backColor: THREE.Color, absorbColor: number, suRefractionFactor: number, suOpacity: number) {\r\n        this.mesh = mesh\r\n        this.mesh['refractionObject'] = this\r\n        // copy material\r\n        if (this.mesh.material instanceof Array) {\r\n            this.originalMaterial = new Array<THREE.Material>()\r\n            for (let i = 0; i < this.mesh.material.length; i++) {\r\n                this.originalMaterial.push(this.mesh.material[i].clone())\r\n            }\r\n        }\r\n        else {\r\n            this.originalMaterial = this.mesh.material.clone()\r\n        }\r\n        this.backColor = backColor\r\n        this.refractionMaterialUniforms = {\r\n            \"resolution\": { value: suResolution },\r\n            \"tBackground\":    { value: suBackground },\r\n            \"tBackDepth\": { value: suDepth },\r\n            \"tDisplayImage\": { value: suImage },\r\n            \"tSkybox\": { value: scene.environment },\r\n            \"refractionFactor\": { value: suRefractionFactor },\r\n            \"opacity\": { value: suOpacity },\r\n            \"absorbColor\": { value: new THREE.Color(absorbColor) },\r\n            \"objectCenter\": { value: mesh.position },\r\n        }\r\n        var [glassFrontVS, glassFrontFS] = loadShader('GlassFrontShader')\r\n        this.refractionMaterial = new ShaderMaterial({\r\n            vertexShader:   glassFrontVS,\r\n            fragmentShader: glassFrontFS,\r\n            uniforms: this.refractionMaterialUniforms,\r\n            // depthTest: false,\r\n            // stencilWrite: true,\r\n            // stencilRef: 999,\r\n            // stencilZPass: THREE.ReplaceStencilOp,  // write if the depth buffer test passes\r\n            side: THREE.FrontSide\r\n        })\r\n    }\r\n}\r\n\r\nexport class RefractionManager {\r\n    container: HTMLElement\r\n    backgroundScene: THREE.Scene\r\n    renderer: THREE.WebGLRenderer\r\n    camera: THREE.PerspectiveCamera\r\n\r\n    frontScene: THREE.Scene\r\n\r\n    backdepthTexture: THREE.DepthTexture\r\n    backRenderTarget: THREE.WebGLRenderTarget\r\n\r\n    refractionObjectList: Array<RefractionObject>\r\n\r\n    suResolution: THREE.Vector2\r\n\r\n    constructor(\r\n        backgroundScene: THREE.Scene, container: HTMLElement, renderer: THREE.WebGLRenderer, camera: THREE.PerspectiveCamera,\r\n        backDepthTextureSize: number = 512\r\n    ) {\r\n        this.container = container\r\n        this.backgroundScene = backgroundScene\r\n        this.renderer = renderer\r\n        this.camera = camera\r\n\r\n        this.frontScene = new THREE.Scene()\r\n        this.backdepthTexture = new THREE.DepthTexture(\r\n            backDepthTextureSize, backDepthTextureSize,\r\n            THREE.FloatType\r\n        )\r\n        this.backRenderTarget = new THREE.WebGLRenderTarget(\r\n            this.container.offsetWidth * window.devicePixelRatio,\r\n            this.container.offsetHeight * window.devicePixelRatio\r\n        )\r\n        this.backRenderTarget.depthBuffer = true;\r\n        this.backRenderTarget.depthTexture = this.backdepthTexture;\r\n        this.backRenderTarget.depthTexture.type = THREE.UnsignedIntType;\r\n        this.frontScene.background = this.backRenderTarget.texture\r\n        this.frontScene.environment = this.backgroundScene.environment\r\n        this.refractionObjectList = []\r\n        this.suResolution = new THREE.Vector2(\r\n            this.container.offsetWidth * window.devicePixelRatio,\r\n            this.container.offsetHeight * window.devicePixelRatio\r\n        )\r\n\r\n    }\r\n\r\n    genFresnelMaterial(textureCube: THREE.Texture | null) {\r\n        var shader = THREE.ShaderLib.lib[ \"fresnel\" ];\r\n        var uniforms = THREE.UniformsUtils.clone( shader.uniforms );\r\n\r\n        uniforms[ \"tCube\" ].value = textureCube;\r\n\r\n        var parameters = { fragmentShader: shader.fragmentShader, vertexShader: shader.vertexShader, uniforms: uniforms };\r\n        var material = new THREE.ShaderMaterial( parameters );\r\n        return material\r\n    }\r\n\r\n    addRefractionMesh(mesh: THREE.Mesh, setDefaultBacksideMaterial: boolean = true,\r\n        image: THREE.Texture | null,\r\n        backColor: number = 0xffffff,\r\n        absorbColor: number = 0x000000, refractionFactor: number = 1.49, opacityFactor: number = 0.2) {\r\n        const _backColor = new THREE.Color(backColor)\r\n        if (setDefaultBacksideMaterial) {\r\n            mesh.material = new THREE.MeshPhysicalMaterial({\r\n                color: _backColor,\r\n                transparent: true,\r\n                opacity: 0.5,\r\n                metalness: 1,\r\n                reflectivity: 0,\r\n                roughness: 0,\r\n                side: THREE.BackSide\r\n                // colorWrite: false\r\n            })\r\n            // mesh.material = this.genFresnelMaterial(this.backgroundScene.environment)\r\n        }\r\n        this.refractionObjectList.push(new RefractionObject(\r\n            this.backgroundScene,\r\n            mesh,\r\n            this.suResolution,\r\n            this.backRenderTarget.texture,\r\n            image,\r\n            this.backRenderTarget.depthTexture,\r\n            _backColor,\r\n            absorbColor,\r\n            refractionFactor,\r\n            opacityFactor\r\n        ))\r\n        this.backgroundScene.add(mesh)\r\n    }\r\n\r\n    onWindowResize() {\r\n        this.suResolution.x = this.container.offsetWidth * window.devicePixelRatio\r\n        this.suResolution.y = this.container.offsetHeight * window.devicePixelRatio\r\n    }\r\n\r\n    render() {\r\n        this.refractionObjectList.forEach(refObj => {\r\n            refObj.mesh.material = refObj.refractionMaterial\r\n            this.frontScene.add(refObj.mesh)\r\n        })\r\n\r\n        this.renderer.setRenderTarget(null)\r\n        this.renderer.render(this.frontScene, this.camera)\r\n\r\n        this.refractionObjectList.forEach(refObj => {\r\n            refObj.mesh.material = refObj.originalMaterial\r\n            this.backgroundScene.add(refObj.mesh)\r\n        })\r\n    }\r\n}\r\n\r\nvar container: HTMLElement\r\nvar renderer: THREE.WebGLRenderer, camera: THREE.PerspectiveCamera, controls: OrbitControls\r\nvar stats: Stats\r\nvar scene: THREE.Scene\r\nvar rm: RefractionManager\r\n\r\nexport function initScene(_container: HTMLElement) {\r\n    container = _container\r\n    camera = new THREE.PerspectiveCamera( 45, window.innerWidth / window.innerHeight, 1, 5000 )\r\n    camera.position.set(30, 20, 200)\r\n    camera.lookAt(0, 0, 0)\r\n\r\n    scene = new THREE.Scene()\r\n\r\n    renderer = new THREE.WebGLRenderer( {antialias: true, alpha: true} )\r\n    \r\n    renderer.setClearColor( 0xffffff )\r\n    renderer.setPixelRatio( window.devicePixelRatio )\r\n    renderer.setSize(window.innerWidth, window.innerHeight)\r\n    container.appendChild( renderer.domElement )\r\n    controls = new OrbitControls(camera, container)\r\n    container.style.position = 'absolute'\r\n    container.style.top = '0px'\r\n    container.style.left = '0px'\r\n    stats = new Stats()\r\n    stats.domElement.style.zIndex = '100'\r\n    container.appendChild( stats.domElement )\r\n\r\n    // set background\r\n    const r = './cube/'\r\n\r\n    const urls = [\r\n        r + 'px.jpg', r + 'nx.jpg',\r\n        r + 'py.jpg', r + 'ny.jpg',\r\n        r + 'pz.jpg', r + 'nz.jpg'\r\n    ]\r\n\r\n    const textureCube = new THREE.CubeTextureLoader().load( urls )\r\n    textureCube.mapping = THREE.CubeRefractionMapping\r\n\r\n    scene.background = textureCube\r\n    scene.environment = textureCube\r\n    \r\n    // set light\r\n    var light = new THREE.DirectionalLight()\r\n    light.position.x = 300\r\n    light.position.y = 200\r\n    light.position.z = 100\r\n    scene.add(light)\r\n\r\n    // set floor\r\n    var floorTexture = new THREE.TextureLoader().load( './checkerboard.jpg' )\r\n\tfloorTexture.wrapS = floorTexture.wrapT = THREE.RepeatWrapping\r\n\tfloorTexture.repeat.set( 10, 10 )\r\n    var floorMaterial = new THREE.MeshBasicMaterial( { map: floorTexture, side: THREE.DoubleSide } )\r\n\tvar floorGeometry = new THREE.PlaneGeometry(1000, 1000, 1, 1)\r\n\tvar floor = new THREE.Mesh(floorGeometry, floorMaterial)\r\n\tfloor.position.y -= 20.1\r\n\tfloor.rotation.x = Math.PI / 2\r\n    // scene.add(floor)\r\n\r\n    rm = new RefractionManager(scene, container, renderer, camera)\r\n\r\n    var glassMesh1 = new THREE.Mesh(\r\n        new RoundedBoxGeometry(40, 40, 40, 5, 5),\r\n        new THREE.MeshPhongMaterial({})\r\n    )\r\n    glassMesh1.position.x -= 40\r\n    var glassMesh2 = new THREE.Mesh(\r\n        new THREE.SphereGeometry( 20 ),\r\n        new THREE.MeshPhongMaterial({})\r\n    )\r\n    var glassMesh3 = new THREE.Mesh(\r\n        new THREE.CylinderGeometry( 20, 20, 80, 36 ),\r\n        new THREE.MeshPhongMaterial({})\r\n    )\r\n    glassMesh3.position.x += 40\r\n    glassMesh3.position.y += 20\r\n\r\n    rm.addRefractionMesh(glassMesh1, true, null, 0x000000, 0x000000)\r\n    rm.addRefractionMesh(glassMesh2, true, null, 0x006000, 0x006000)\r\n    rm.addRefractionMesh(glassMesh3, true, null, 0x000633, 0x000633)\r\n\r\n    // add a few spheres\r\n    var ballMesh = new THREE.Mesh(\r\n        new THREE.SphereGeometry( 20 ),\r\n        new THREE.MeshPhongMaterial({\r\n            color: 0xff0000\r\n        })\r\n    )\r\n    ballMesh.position.copy(glassMesh1.position)\r\n    ballMesh.position.z -= 50\r\n    scene.add(ballMesh)\r\n\r\n    window.addEventListener( 'resize', onWindowResize )\r\n    animate()\r\n\r\n}\r\n\r\nfunction onWindowResize() {\r\n\r\n    camera.aspect = window.innerWidth / window.innerHeight\r\n    camera.updateProjectionMatrix()\r\n    rm.onWindowResize()\r\n    renderer.setSize( window.innerWidth, window.innerHeight )\r\n\r\n}\r\n\r\nfunction animate() {\r\n    requestAnimationFrame( animate )\r\n    render()\r\n    controls.update()\r\n    stats.update()\r\n}\r\n\r\nfunction render()\r\n{\r\n    rm.render()\r\n}","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = GeneratorFunctionPrototype;\n  define(Gp, \"constructor\", GeneratorFunctionPrototype);\n  define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction);\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  });\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  define(Gp, iteratorSymbol, function() {\n    return this;\n  });\n\n  define(Gp, \"toString\", function() {\n    return \"[object Generator]\";\n  });\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, in modern engines\n  // we can explicitly access globalThis. In older engines we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  if (typeof globalThis === \"object\") {\n    globalThis.regeneratorRuntime = runtime;\n  } else {\n    Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n  }\n}\n","'use strict';\nvar $ = require('../internals/export');\nvar global = require('../internals/global');\nvar toAbsoluteIndex = require('../internals/to-absolute-index');\nvar toIntegerOrInfinity = require('../internals/to-integer-or-infinity');\nvar lengthOfArrayLike = require('../internals/length-of-array-like');\nvar toObject = require('../internals/to-object');\nvar arraySpeciesCreate = require('../internals/array-species-create');\nvar createProperty = require('../internals/create-property');\nvar arrayMethodHasSpeciesSupport = require('../internals/array-method-has-species-support');\n\nvar HAS_SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('splice');\n\nvar TypeError = global.TypeError;\nvar max = Math.max;\nvar min = Math.min;\nvar MAX_SAFE_INTEGER = 0x1FFFFFFFFFFFFF;\nvar MAXIMUM_ALLOWED_LENGTH_EXCEEDED = 'Maximum allowed length exceeded';\n\n// `Array.prototype.splice` method\n// https://tc39.es/ecma262/#sec-array.prototype.splice\n// with adding support of @@species\n$({ target: 'Array', proto: true, forced: !HAS_SPECIES_SUPPORT }, {\n  splice: function splice(start, deleteCount /* , ...items */) {\n    var O = toObject(this);\n    var len = lengthOfArrayLike(O);\n    var actualStart = toAbsoluteIndex(start, len);\n    var argumentsLength = arguments.length;\n    var insertCount, actualDeleteCount, A, k, from, to;\n    if (argumentsLength === 0) {\n      insertCount = actualDeleteCount = 0;\n    } else if (argumentsLength === 1) {\n      insertCount = 0;\n      actualDeleteCount = len - actualStart;\n    } else {\n      insertCount = argumentsLength - 2;\n      actualDeleteCount = min(max(toIntegerOrInfinity(deleteCount), 0), len - actualStart);\n    }\n    if (len + insertCount - actualDeleteCount > MAX_SAFE_INTEGER) {\n      throw TypeError(MAXIMUM_ALLOWED_LENGTH_EXCEEDED);\n    }\n    A = arraySpeciesCreate(O, actualDeleteCount);\n    for (k = 0; k < actualDeleteCount; k++) {\n      from = actualStart + k;\n      if (from in O) createProperty(A, k, O[from]);\n    }\n    A.length = actualDeleteCount;\n    if (insertCount < actualDeleteCount) {\n      for (k = actualStart; k < len - actualDeleteCount; k++) {\n        from = k + actualDeleteCount;\n        to = k + insertCount;\n        if (from in O) O[to] = O[from];\n        else delete O[to];\n      }\n      for (k = len; k > len - actualDeleteCount + insertCount; k--) delete O[k - 1];\n    } else if (insertCount > actualDeleteCount) {\n      for (k = len - actualDeleteCount; k > actualStart; k--) {\n        from = k + actualDeleteCount - 1;\n        to = k + insertCount - 1;\n        if (from in O) O[to] = O[from];\n        else delete O[to];\n      }\n    }\n    for (k = 0; k < insertCount; k++) {\n      O[k + actualStart] = arguments[k + 2];\n    }\n    O.length = len - actualDeleteCount + insertCount;\n    return A;\n  }\n});\n","var arraySlice = require('../internals/array-slice-simple');\n\nvar floor = Math.floor;\n\nvar mergeSort = function (array, comparefn) {\n  var length = array.length;\n  var middle = floor(length / 2);\n  return length < 8 ? insertionSort(array, comparefn) : merge(\n    array,\n    mergeSort(arraySlice(array, 0, middle), comparefn),\n    mergeSort(arraySlice(array, middle), comparefn),\n    comparefn\n  );\n};\n\nvar insertionSort = function (array, comparefn) {\n  var length = array.length;\n  var i = 1;\n  var element, j;\n\n  while (i < length) {\n    j = i;\n    element = array[i];\n    while (j && comparefn(array[j - 1], element) > 0) {\n      array[j] = array[--j];\n    }\n    if (j !== i++) array[j] = element;\n  } return array;\n};\n\nvar merge = function (array, left, right, comparefn) {\n  var llength = left.length;\n  var rlength = right.length;\n  var lindex = 0;\n  var rindex = 0;\n\n  while (lindex < llength || rindex < rlength) {\n    array[lindex + rindex] = (lindex < llength && rindex < rlength)\n      ? comparefn(left[lindex], right[rindex]) <= 0 ? left[lindex++] : right[rindex++]\n      : lindex < llength ? left[lindex++] : right[rindex++];\n  } return array;\n};\n\nmodule.exports = mergeSort;\n","var $ = require('../internals/export');\nvar toObject = require('../internals/to-object');\nvar nativeKeys = require('../internals/object-keys');\nvar fails = require('../internals/fails');\n\nvar FAILS_ON_PRIMITIVES = fails(function () { nativeKeys(1); });\n\n// `Object.keys` method\n// https://tc39.es/ecma262/#sec-object.keys\n$({ target: 'Object', stat: true, forced: FAILS_ON_PRIMITIVES }, {\n  keys: function keys(it) {\n    return nativeKeys(toObject(it));\n  }\n});\n","module.exports = \"varying vec2 vUv;\\r\\nvarying vec3 vNormal;\\r\\nvarying vec3 vCameraPosition;\\r\\nvarying vec4 vWorldPosition;\\r\\nvarying mat4 vProjectionMatrix;\\r\\n// varying vec3 vRefract;\\r\\n// varying vec2 vRefractOffset;\\r\\nvarying vec4 vImageUVCenter;\\r\\n\\r\\nuniform vec3 objectCenter;\\r\\n\\r\\n\\r\\nvoid main() {\\r\\n    vWorldPosition = modelMatrix * vec4( position, 1.0 );\\r\\n    vec4 mvPosition = viewMatrix * vWorldPosition;\\r\\n    gl_Position = projectionMatrix * mvPosition;\\r\\n    vUv = uv;\\r\\n\\r\\n    vNormal = normalize( mat3( modelMatrix[0].xyz, modelMatrix[1].xyz, modelMatrix[2].xyz ) * normal );\\r\\n    vCameraPosition = cameraPosition;\\r\\n\\r\\n    vProjectionMatrix = projectionMatrix * modelViewMatrix;\\r\\n    vImageUVCenter = vProjectionMatrix * vec4( objectCenter, 1.0 );\\r\\n}\\r\\n\"","'use strict';\nvar $ = require('../internals/export');\nvar $map = require('../internals/array-iteration').map;\nvar arrayMethodHasSpeciesSupport = require('../internals/array-method-has-species-support');\n\nvar HAS_SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('map');\n\n// `Array.prototype.map` method\n// https://tc39.es/ecma262/#sec-array.prototype.map\n// with adding support of @@species\n$({ target: 'Array', proto: true, forced: !HAS_SPECIES_SUPPORT }, {\n  map: function map(callbackfn /* , thisArg */) {\n    return $map(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n","var UA = require('../internals/engine-user-agent');\n\nmodule.exports = /MSIE|Trident/.test(UA);\n","module.exports = \"uniform vec2 resolution;\\r\\nuniform sampler2D tBackground;\\r\\nuniform sampler2D tBackDepth;\\r\\nuniform sampler2D tDisplayImage;\\r\\n\\r\\nuniform samplerCube tSkybox;\\r\\nuniform vec3 absorbColor;\\r\\nuniform float refractionFactor;\\r\\nuniform float opacity;\\r\\n\\r\\nvarying vec2 vUv;\\r\\nvarying vec3 vNormal;\\r\\nvarying vec3 vCameraPosition;\\r\\nvarying vec4 vWorldPosition;\\r\\nvarying mat4 vProjectionMatrix;\\r\\nvarying vec4 vImageUVCenter;\\r\\n\\r\\nfloat near = 0.1;\\r\\nfloat far  = 5000.0;\\r\\n\\r\\nfloat LinearizeDepth(float depth) \\r\\n{\\r\\n    float z = depth * 2.0 - 1.0; // back to NDC \\r\\n    return (2.0 * near * far) / (far + near - z * (far - near));\\t\\r\\n}\\r\\n\\r\\nvoid main() {\\r\\n\\r\\n    // gl_FragColor = vec4(1.0, 0.0, 0.0, 1.0);\\r\\n    // return;\\r\\n    float backDepth = float(texture2D( tBackDepth, vec2( gl_FragCoord.x / resolution.x, gl_FragCoord.y / resolution.y ) ).x);\\r\\n    float frontDepth = gl_FragCoord.z;\\r\\n\\r\\n    if (frontDepth > backDepth) {\\r\\n        discard;\\r\\n    }\\r\\n\\r\\n    float backDepthlinear = LinearizeDepth(backDepth);\\r\\n    float frontDepthlinear = LinearizeDepth(frontDepth);\\r\\n    \\r\\n    float backToFrontDepth = backDepthlinear - frontDepthlinear;\\r\\n    backToFrontDepth *= 0.5;\\r\\n    \\r\\n    vec3 vCameraRay = vWorldPosition.xyz / vWorldPosition.w - vCameraPosition;\\r\\n    vCameraRay = normalize(vCameraRay);\\r\\n    vec3 vRefract = refract( vCameraRay, vNormal, 1.0 / refractionFactor );\\r\\n    vec4 vOriginalPos = vWorldPosition + vec4(vCameraRay, 0.0);\\r\\n    vec4 vRefractedPos = vWorldPosition + vec4(vRefract, 0.0);\\r\\n    // vRefractedPos = vOriginalPos; //vWorldPosition + vec4(vRefract, 0.0);\\r\\n    vec4 vOriginalProjectedPos = vProjectionMatrix * vOriginalPos;\\r\\n    vec4 vRefractedProjectedPos = vProjectionMatrix * vRefractedPos;\\r\\n    vec2 offset = normalize(vRefractedProjectedPos - vOriginalProjectedPos).xy;\\r\\n    offset = normalize(offset);\\r\\n\\r\\n    // reflect\\r\\n    vec3 vReflect = reflect( vCameraRay, vNormal );\\r\\n    vec3 refCol = vec3(textureCube(tSkybox, vReflect));\\r\\n\\r\\n    // snell's law\\r\\n    float cosTheta1 = dot(vCameraRay, vNormal);\\r\\n    float sinTheta1 = 1.0 - cosTheta1 * cosTheta1;\\r\\n    float sinTheta2 = sinTheta1 / refractionFactor;\\r\\n    float theta2 = asin(sinTheta2);\\r\\n    offset *= sinTheta2;\\r\\n    offset *= 100.0;\\r\\n\\r\\n    offset /= backDepth;\\r\\n\\r\\n    float samplePointX_r = (gl_FragCoord.x + backToFrontDepth * offset.x * 0.9) / resolution.x;\\r\\n    float samplePointY_r = (gl_FragCoord.y + backToFrontDepth * offset.y * 0.9) / resolution.y;\\r\\n\\r\\n    float samplePointX_g = (gl_FragCoord.x + backToFrontDepth * offset.x * 0.95) / resolution.x;\\r\\n    float samplePointY_g = (gl_FragCoord.y + backToFrontDepth * offset.y * 0.95) / resolution.y;\\r\\n\\r\\n    float samplePointX_b = (gl_FragCoord.x + backToFrontDepth * offset.x) / resolution.x;\\r\\n    float samplePointY_b = (gl_FragCoord.y + backToFrontDepth * offset.y) / resolution.y;\\r\\n    \\r\\n    float backColor_r = texture2D( tBackground, vec2( samplePointX_r, samplePointY_r ) * 1.0 ).x;\\r\\n    float backColor_g = texture2D( tBackground, vec2( samplePointX_g, samplePointY_g ) * 1.0 ).y;\\r\\n    float backColor_b = texture2D( tBackground, vec2( samplePointX_b, samplePointY_b ) * 1.0 ).z;\\r\\n\\r\\n    vec3 backColor = vec3(backColor_r, backColor_g, backColor_b);\\r\\n    vec3 absorbColor = absorbColor * sqrt(backToFrontDepth) * opacity;\\r\\n    float sqrtDepth = sqrt(backToFrontDepth) * opacity;\\r\\n    float absorbFactor = sqrtDepth / (1.0 + sqrtDepth);\\r\\n    vec3 refractCol = mix(backColor, absorbColor, absorbFactor);\\r\\n\\r\\n    // backColor = texture2D( tBackground, vec2( (gl_FragCoord.x + backToFrontDepth * offset.x) / resolution.x, (gl_FragCoord.y + backToFrontDepth * offset.y) / resolution.y ) * 1.0 ).xyz;\\r\\n\\r\\n    // gl_FragColor = vec4(refCol, 1.0);\\r\\n    float reflectionCoeff = pow(sinTheta1, 4.0);\\r\\n    // reflectionCoeff = 1.0;\\r\\n\\r\\n    // vec4 image = vec4(vec3(texture2D( tDisplayImage, vec2( (gl_FragCoord.x + vImageUVCenter.x) / resolution.x, (gl_FragCoord.y + vImageUVCenter.y) / resolution.y ) )), 1.0);\\r\\n    // vec4 image = vec4((gl_FragCoord.x + vImageUVCenter.x) / resolution.x, (gl_FragCoord.y + vImageUVCenter.y) / resolution.y, 1.0, 1.0);\\r\\n    // vec4 image = vec4(1.0, 0.0, 0.0, 1.0);\\r\\n\\r\\n    // gl_FragColor = vec4(mix(refractCol, refCol, reflectionCoeff), 1.0);\\r\\n    gl_FragColor = vec4(mix(refractCol, refCol, reflectionCoeff), 1.0);\\r\\n    // gl_FragColor = image;\\r\\n    // if (gl_FragCoord.x < 600.0) {\\r\\n    //     gl_FragColor = vec4(mix(refractCol, refCol, reflectionCoeff), 1.0);\\r\\n    // }\\r\\n    // gl_FragColor = vec4(backColor, 1.0);\\r\\n    // gl_FragColor = vec4(vec3(backDepthlinear * 0.01), 1.0);\\r\\n}\""],"sourceRoot":""}