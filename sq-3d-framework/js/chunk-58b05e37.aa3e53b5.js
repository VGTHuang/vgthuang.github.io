(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-58b05e37"],{"10d1":function(e,t,r){"use strict";var n,i=r("da84"),o=r("e330"),a=r("e2cc"),s=r("f183"),l=r("6d61"),c=r("acac"),h=r("861d"),f=r("4fad"),v=r("69f3").enforce,d=r("7f9a"),u=!i.ActiveXObject&&"ActiveXObject"in i,m=function(e){return function(){return e(this,arguments.length?arguments[0]:void 0)}},p=l("WeakMap",m,c);if(d&&u){n=c.getConstructor(m,"WeakMap",!0),s.enable();var g=p.prototype,b=o(g["delete"]),x=o(g.has),y=o(g.get),C=o(g.set);a(g,{delete:function(e){if(h(e)&&!f(e)){var t=v(this);return t.frozen||(t.frozen=new n),b(this,e)||t.frozen["delete"](e)}return b(this,e)},has:function(e){if(h(e)&&!f(e)){var t=v(this);return t.frozen||(t.frozen=new n),x(this,e)||t.frozen.has(e)}return x(this,e)},get:function(e){if(h(e)&&!f(e)){var t=v(this);return t.frozen||(t.frozen=new n),x(this,e)?y(this,e):t.frozen.get(e)}return y(this,e)},set:function(e,t){if(h(e)&&!f(e)){var r=v(this);r.frozen||(r.frozen=new n),x(this,e)?C(this,e,t):r.frozen.set(e,t)}else C(this,e,t);return this}})}},1333:function(e,t){e.exports="varying vec2 vUv;\r\n\r\nuniform float vTextureMix;\r\n\r\nuniform sampler2D vTextures[ 2 ];\r\n\r\nvoid main()\r\n{\r\n    vec4 tColor1 = vec4(texture2D( vTextures[0], vUv ));\r\n    vec4 tColor2 = vec4(texture2D( vTextures[1], vUv ));\r\n    gl_FragColor = mix( tColor1, tColor2, vTextureMix );\r\n    // gl_FragColor = mix( tColor1, tColor2, 0.5 );\r\n    // gl_FragColor = tColor2;\r\n}"},"16a7":function(e,t){e.exports="uniform vec2 resolution;\r\nuniform sampler2D tBackground;\r\nuniform sampler2D tBackDepth;\r\nuniform samplerCube tSkybox;\r\nuniform vec3 absorbColor;\r\nuniform float refractionFactor;\r\nuniform float opacity;\r\n\r\nvarying vec2 vUv;\r\nvarying vec3 vNormal;\r\nvarying vec3 vCameraPosition;\r\nvarying vec4 vWorldPosition;\r\nvarying mat4 vProjectionMatrix;\r\n\r\nfloat near = 0.1;\r\nfloat far  = 5000.0;\r\n\r\nfloat LinearizeDepth(float depth) \r\n{\r\n    float z = depth * 2.0 - 1.0; // back to NDC \r\n    return (2.0 * near * far) / (far + near - z * (far - near));\t\r\n}\r\n\r\nvoid main() {\r\n    gl_FragColor = vec4(1.0, 0.0, 0.0, 1.0);\r\n}\r\n\r\nvoid main1() {\r\n\r\n    float backDepth = float(texture2D( tBackDepth, vec2( gl_FragCoord.x / resolution.x, gl_FragCoord.y / resolution.y ) ).x);\r\n    float frontDepth = gl_FragCoord.z;\r\n\r\n    float backDepthlinear = LinearizeDepth(backDepth);\r\n    float frontDepthlinear = LinearizeDepth(frontDepth);\r\n    \r\n    float backToFrontDepth = backDepthlinear - frontDepthlinear;\r\n    backToFrontDepth *= 0.25;\r\n    \r\n    vec3 vCameraRay = vWorldPosition.xyz / vWorldPosition.w - vCameraPosition;\r\n    vCameraRay = normalize(vCameraRay);\r\n    vec3 vRefract = refract( vCameraRay, vNormal, 1.0 / refractionFactor );\r\n    vec4 vOriginalPos = vWorldPosition + vec4(vCameraRay, 0.0);\r\n    vec4 vRefractedPos = vWorldPosition + vec4(vRefract, 0.0);\r\n    // vRefractedPos = vOriginalPos; //vWorldPosition + vec4(vRefract, 0.0);\r\n    vec4 vOriginalProjectedPos = vProjectionMatrix * vOriginalPos;\r\n    vec4 vRefractedProjectedPos = vProjectionMatrix * vRefractedPos;\r\n    vec2 offset = normalize(vRefractedProjectedPos - vOriginalProjectedPos).xy;\r\n    offset = normalize(offset);\r\n\r\n    // reflect\r\n    vec3 vReflect = reflect( vCameraRay, vNormal );\r\n    vec3 refCol = vec3(textureCube(tSkybox, vReflect));\r\n\r\n    // snell's law\r\n    float cosTheta1 = dot(vCameraRay, vNormal);\r\n    float sinTheta1 = 1.0 - cosTheta1 * cosTheta1;\r\n    float sinTheta2 = sinTheta1 / refractionFactor;\r\n    float theta2 = asin(sinTheta2);\r\n    offset *= sinTheta2;\r\n    offset *= 50.0;\r\n\r\n    float samplePointX_r = (gl_FragCoord.x + backToFrontDepth * offset.x * 0.9) / resolution.x;\r\n    float samplePointY_r = (gl_FragCoord.y + backToFrontDepth * offset.y * 0.9) / resolution.y;\r\n\r\n    float samplePointX_g = (gl_FragCoord.x + backToFrontDepth * offset.x * 0.95) / resolution.x;\r\n    float samplePointY_g = (gl_FragCoord.y + backToFrontDepth * offset.y * 0.95) / resolution.y;\r\n\r\n    float samplePointX_b = (gl_FragCoord.x + backToFrontDepth * offset.x) / resolution.x;\r\n    float samplePointY_b = (gl_FragCoord.y + backToFrontDepth * offset.y) / resolution.y;\r\n    \r\n    float backColor_r = texture2D( tBackground, vec2( samplePointX_r, samplePointY_r ) * 1.0 ).x;\r\n    float backColor_g = texture2D( tBackground, vec2( samplePointX_g, samplePointY_g ) * 1.0 ).y;\r\n    float backColor_b = texture2D( tBackground, vec2( samplePointX_b, samplePointY_b ) * 1.0 ).z;\r\n\r\n    vec3 backColor = vec3(backColor_r, backColor_g, backColor_b);\r\n    vec3 absorbColor = absorbColor * sqrt(backToFrontDepth) * opacity;\r\n\r\n    // backColor = texture2D( tBackground, vec2( (gl_FragCoord.x + backToFrontDepth * offset.x) / resolution.x, (gl_FragCoord.y + backToFrontDepth * offset.y) / resolution.y ) * 1.0 ).xyz;\r\n\r\n    // gl_FragColor = vec4(refCol, 1.0);\r\n    float reflectionCoeff = 0.5 * pow(sinTheta1, 4.0);\r\n    // reflectionCoeff = 1.0;\r\n    gl_FragColor = vec4(mix(backColor + absorbColor, refCol, reflectionCoeff), 1.0);\r\n    // gl_FragColor = vec4(vec3(backDepthlinear*0.01), 1.0);\r\n}"},"1b53":function(e,t,r){"use strict";r.d(t,"b",(function(){return i})),r.d(t,"a",(function(){return s}));var n=r("5a89");class i{constructor(){this.enabled=!0,this.needsSwap=!0,this.clear=!1,this.renderToScreen=!1}setSize(){}render(){console.error("THREE.Pass: .render() must be implemented in derived pass.")}}const o=new n["bb"](-1,1,1,-1,0,1),a=new n["h"];a.setAttribute("position",new n["A"]([-1,3,0,-1,-1,0,3,-1,0],3)),a.setAttribute("uv",new n["A"]([0,2,0,0,2,0],2));class s{constructor(e){this._mesh=new n["T"](a,e)}dispose(){this._mesh.geometry.dispose()}render(e){e.render(this._mesh,o)}get material(){return this._mesh.material}set material(e){this._mesh.material=e}}},"232b":function(e,t,r){"use strict";r.d(t,"b",(function(){return n})),r.d(t,"a",(function(){return h}));var n,i=r("3835"),o=r("d4ec"),a=r("bee2"),s=r("ade3"),l=(r("d3b7"),r("159b"),r("5a89")),c=r("4e0a");(function(e){e[e["RECT"]=0]="RECT",e[e["CIRCLE"]=1]="CIRCLE"})(n||(n={}));var h=function(){function e(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:100,r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:100,i=arguments.length>2?arguments[2]:void 0,a=arguments.length>3?arguments[3]:void 0,c=arguments.length>4?arguments[4]:void 0,h=arguments.length>5?arguments[5]:void 0,f=arguments.length>6?arguments[6]:void 0,v=arguments.length>7&&void 0!==arguments[7]?arguments[7]:n.RECT,d=arguments.length>8&&void 0!==arguments[8]?arguments[8]:null,u=arguments.length>9&&void 0!==arguments[9]?arguments[9]:16711680;if(Object(o["a"])(this,e),Object(s["a"])(this,"cardGeometry",void 0),Object(s["a"])(this,"cardMaterial",void 0),Object(s["a"])(this,"cardMesh",void 0),Object(s["a"])(this,"stencilId",void 0),Object(s["a"])(this,"cardOutsideScene",void 0),Object(s["a"])(this,"cardInsideScene",void 0),Object(s["a"])(this,"isFocused",void 0),Object(s["a"])(this,"height",void 0),Object(s["a"])(this,"width",void 0),Object(s["a"])(this,"frontWallGeom",void 0),Object(s["a"])(this,"frontWallMesh",void 0),this.stencilId=i,this.height=t,this.width=r,v==n.RECT?this.cardGeometry=new l["gb"](r,t):this.cardGeometry=new l["j"](r,64),this.cardMaterial=new l["U"]({color:15790320,stencilWrite:!0,stencilRef:i,stencilZPass:l["ob"],depthWrite:!1}),this.cardMesh=new l["T"](this.cardGeometry,this.cardMaterial),this.cardMesh["tardis"]=this,this.cardMesh.position.copy(h),this.cardMesh.rotation.copy(f),this.cardOutsideScene=a,this.cardInsideScene=c,this.cardOutsideScene.add(this.cardMesh),this.isFocused=!1,this.frontWallGeom=new l["h"],this.frontWallMesh=new l["T"],null!=d){var m=(new l["T"]).copy(this.cardMesh);m.material=new l["U"]({color:u}),d.add(m)}}return Object(a["a"])(e,[{key:"addVisibleObjectGroup",value:function(e){var t=this;this._recursiveGetGroupProperty(e,(function(e){e.stencilWrite=!0,e.stencilRef=t.stencilId,e.stencilFunc=l["v"]})),this.cardOutsideScene.add(e)}},{key:"_recursiveGetGroupProperty",value:function(e,t){var r=this;e.children.forEach((function(e){e instanceof l["T"]?e.material instanceof l["P"]?t(e.material):e.material instanceof Array&&e.material.forEach((function(e){t(e)})):e instanceof l["D"]&&r._recursiveGetGroupProperty(e,t)}))}},{key:"addFrontWall",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:10,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:void 0,r=[new l["Gb"](-this.width/2,-this.height/2,0),new l["Gb"](-this.width/2,this.height/2,0),new l["Gb"](this.width/2,this.height/2,0),new l["Gb"](this.width/2,-this.height/2,0),new l["Gb"](-this.width/2,-this.height/2,-e),new l["Gb"](-this.width/2,this.height/2,-e),new l["Gb"](this.width/2,this.height/2,-e),new l["Gb"](this.width/2,-this.height/2,-e)],n=[1,0,4,5,1,4,2,1,5,6,2,5,3,2,6,7,3,6,0,3,7,4,0,7],i=[];n.forEach((function(e){var t=new l["Gb"];t.copy(r[e]),i.push(t)})),this.frontWallGeom.setFromPoints(i),this.frontWallGeom.computeVertexNormals();var o=void 0==t?new l["X"]({color:10526880}):t;o.stencilWrite=!0,o.stencilRef=this.stencilId,o.stencilFunc=l["v"],this.frontWallMesh=new l["T"](this.frontWallGeom,o),this.frontWallMesh.position.copy(this.cardMesh.position),this.cardOutsideScene.add(this.frontWallMesh)}},{key:"addSkybox",value:function(e){var t=Object(c["a"])("CardSkyboxShader"),r=Object(i["a"])(t,2),n=r[0],o=r[1],a={tCube:{type:"t",value:e}},s=new l["rb"]({uniforms:a,vertexShader:n,fragmentShader:o,stencilWrite:!0,stencilRef:this.stencilId,stencilZPass:l["ob"],depthWrite:!1});this.cardMaterial=s,this.cardMesh.material=this.cardMaterial}}]),e}()},"32d9":function(e,t,r){"use strict";r.d(t,"a",(function(){return c}));var n=r("5a89"),i={uniforms:{tDiffuse:{value:null},opacity:{value:1}},vertexShader:"\n\n\t\tvarying vec2 vUv;\n\n\t\tvoid main() {\n\n\t\t\tvUv = uv;\n\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n\t\t}",fragmentShader:"\n\n\t\tuniform float opacity;\n\n\t\tuniform sampler2D tDiffuse;\n\n\t\tvarying vec2 vUv;\n\n\t\tvoid main() {\n\n\t\t\tvec4 texel = texture2D( tDiffuse, vUv );\n\t\t\tgl_FragColor = opacity * texel;\n\n\t\t}"},o=r("360d"),a=r("1b53");class s extends a["b"]{constructor(e,t){super(),this.scene=e,this.camera=t,this.clear=!0,this.needsSwap=!1,this.inverse=!1}render(e,t,r){const n=e.getContext(),i=e.state;let o,a;i.buffers.color.setMask(!1),i.buffers.depth.setMask(!1),i.buffers.color.setLocked(!0),i.buffers.depth.setLocked(!0),this.inverse?(o=0,a=1):(o=1,a=0),i.buffers.stencil.setTest(!0),i.buffers.stencil.setOp(n.REPLACE,n.REPLACE,n.REPLACE),i.buffers.stencil.setFunc(n.ALWAYS,o,4294967295),i.buffers.stencil.setClear(a),i.buffers.stencil.setLocked(!0),e.setRenderTarget(r),this.clear&&e.clear(),e.render(this.scene,this.camera),e.setRenderTarget(t),this.clear&&e.clear(),e.render(this.scene,this.camera),i.buffers.color.setLocked(!1),i.buffers.depth.setLocked(!1),i.buffers.stencil.setLocked(!1),i.buffers.stencil.setFunc(n.EQUAL,1,4294967295),i.buffers.stencil.setOp(n.KEEP,n.KEEP,n.KEEP),i.buffers.stencil.setLocked(!0)}}class l extends a["b"]{constructor(){super(),this.needsSwap=!1}render(e){e.state.buffers.stencil.setLocked(!1),e.state.buffers.stencil.setTest(!1)}}class c{constructor(e,t){if(this.renderer=e,void 0===t){const r={minFilter:n["K"],magFilter:n["K"],format:n["lb"]},i=e.getSize(new n["Fb"]);this._pixelRatio=e.getPixelRatio(),this._width=i.width,this._height=i.height,t=new n["Kb"](this._width*this._pixelRatio,this._height*this._pixelRatio,r),t.texture.name="EffectComposer.rt1"}else this._pixelRatio=1,this._width=t.width,this._height=t.height;this.renderTarget1=t,this.renderTarget2=t.clone(),this.renderTarget2.texture.name="EffectComposer.rt2",this.writeBuffer=this.renderTarget1,this.readBuffer=this.renderTarget2,this.renderToScreen=!0,this.passes=[],void 0===i&&console.error("THREE.EffectComposer relies on CopyShader"),void 0===o["a"]&&console.error("THREE.EffectComposer relies on ShaderPass"),this.copyPass=new o["a"](i),this.clock=new n["l"]}swapBuffers(){const e=this.readBuffer;this.readBuffer=this.writeBuffer,this.writeBuffer=e}addPass(e){this.passes.push(e),e.setSize(this._width*this._pixelRatio,this._height*this._pixelRatio)}insertPass(e,t){this.passes.splice(t,0,e),e.setSize(this._width*this._pixelRatio,this._height*this._pixelRatio)}removePass(e){const t=this.passes.indexOf(e);-1!==t&&this.passes.splice(t,1)}isLastEnabledPass(e){for(let t=e+1;t<this.passes.length;t++)if(this.passes[t].enabled)return!1;return!0}render(e){void 0===e&&(e=this.clock.getDelta());const t=this.renderer.getRenderTarget();let r=!1;for(let n=0,i=this.passes.length;n<i;n++){const t=this.passes[n];if(!1!==t.enabled){if(t.renderToScreen=this.renderToScreen&&this.isLastEnabledPass(n),t.render(this.renderer,this.writeBuffer,this.readBuffer,e,r),t.needsSwap){if(r){const t=this.renderer.getContext(),r=this.renderer.state.buffers.stencil;r.setFunc(t.NOTEQUAL,1,4294967295),this.copyPass.render(this.renderer,this.writeBuffer,this.readBuffer,e),r.setFunc(t.EQUAL,1,4294967295)}this.swapBuffers()}void 0!==s&&(t instanceof s?r=!0:t instanceof l&&(r=!1))}}this.renderer.setRenderTarget(t)}reset(e){if(void 0===e){const t=this.renderer.getSize(new n["Fb"]);this._pixelRatio=this.renderer.getPixelRatio(),this._width=t.width,this._height=t.height,e=this.renderTarget1.clone(),e.setSize(this._width*this._pixelRatio,this._height*this._pixelRatio)}this.renderTarget1.dispose(),this.renderTarget2.dispose(),this.renderTarget1=e,this.renderTarget2=e.clone(),this.writeBuffer=this.renderTarget1,this.readBuffer=this.renderTarget2}setSize(e,t){this._width=e,this._height=t;const r=this._width*this._pixelRatio,n=this._height*this._pixelRatio;this.renderTarget1.setSize(r,n),this.renderTarget2.setSize(r,n);for(let i=0;i<this.passes.length;i++)this.passes[i].setSize(r,n)}setPixelRatio(e){this._pixelRatio=e,this.setSize(this._width,this._height)}}new n["bb"](-1,1,1,-1,0,1);const h=new n["h"];h.setAttribute("position",new n["A"]([-1,3,0,-1,-1,0,3,-1,0],3)),h.setAttribute("uv",new n["A"]([0,2,0,0,2,0],2))},"360d":function(e,t,r){"use strict";r.d(t,"a",(function(){return o}));var n=r("5a89"),i=r("1b53");class o extends i["b"]{constructor(e,t){super(),this.textureID=void 0!==t?t:"tDiffuse",e instanceof n["rb"]?(this.uniforms=e.uniforms,this.material=e):e&&(this.uniforms=n["Db"].clone(e.uniforms),this.material=new n["rb"]({defines:Object.assign({},e.defines),uniforms:this.uniforms,vertexShader:e.vertexShader,fragmentShader:e.fragmentShader})),this.fsQuad=new i["a"](this.material)}render(e,t,r){this.uniforms[this.textureID]&&(this.uniforms[this.textureID].value=r.texture),this.fsQuad.material=this.material,this.renderToScreen?(e.setRenderTarget(null),this.fsQuad.render(e)):(e.setRenderTarget(t),this.clear&&e.clear(e.autoClearColor,e.autoClearDepth,e.autoClearStencil),this.fsQuad.render(e))}}},"4e0a":function(e,t,r){"use strict";function n(e){try{var t=r("5d16")("./"+e+"/V.glsl"),n=r("8e1c")("./"+e+"/F.glsl");return[t,n]}catch(i){return console.error("failed to fetch shader",i),["",""]}}r.d(t,"a",(function(){return n}))},"4fad":function(e,t,r){var n=r("d039"),i=r("861d"),o=r("c6b6"),a=r("d86b"),s=Object.isExtensible,l=n((function(){s(1)}));e.exports=l||a?function(e){return!!i(e)&&((!a||"ArrayBuffer"!=o(e))&&(!s||s(e)))}:s},"5d16":function(e,t,r){var n={"./CardSkyboxShader/V.glsl":"8437","./CarouselBasicShader/V.glsl":"f4ce","./FresnelShader/V.glsl":"8c9f","./GlassFrontShader/V.glsl":"c182","./ParticleShader/V.glsl":"b837","./Refraction2.0/GlassFrontShader/V.glsl":"79c3"};function i(e){var t=o(e);return r(t)}function o(e){if(!r.o(n,e)){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}return n[e]}i.keys=function(){return Object.keys(n)},i.resolve=o,e.exports=i,i.id="5d16"},"6d61":function(e,t,r){"use strict";var n=r("23e7"),i=r("da84"),o=r("e330"),a=r("94ca"),s=r("6eeb"),l=r("f183"),c=r("2266"),h=r("19aa"),f=r("1626"),v=r("861d"),d=r("d039"),u=r("1c7e"),m=r("d44e"),p=r("7156");e.exports=function(e,t,r){var g=-1!==e.indexOf("Map"),b=-1!==e.indexOf("Weak"),x=g?"set":"add",y=i[e],C=y&&y.prototype,w=y,P={},_=function(e){var t=o(C[e]);s(C,e,"add"==e?function(e){return t(this,0===e?0:e),this}:"delete"==e?function(e){return!(b&&!v(e))&&t(this,0===e?0:e)}:"get"==e?function(e){return b&&!v(e)?void 0:t(this,0===e?0:e)}:"has"==e?function(e){return!(b&&!v(e))&&t(this,0===e?0:e)}:function(e,r){return t(this,0===e?0:e,r),this})},R=a(e,!f(y)||!(b||C.forEach&&!d((function(){(new y).entries().next()}))));if(R)w=r.getConstructor(t,e,g,x),l.enable();else if(a(e,!0)){var j=new w,O=j[x](b?{}:-0,1)!=j,F=d((function(){j.has(1)})),D=u((function(e){new y(e)})),k=!b&&d((function(){var e=new y,t=5;while(t--)e[x](t,t);return!e.has(-0)}));D||(w=t((function(e,t){h(e,C);var r=p(new y,e,w);return void 0!=t&&c(t,r[x],{that:r,AS_ENTRIES:g}),r})),w.prototype=C,C.constructor=w),(F||k)&&(_("delete"),_("has"),g&&_("get")),(k||O)&&_(x),b&&C.clear&&delete C.clear}return P[e]=w,n({global:!0,forced:w!=y},P),m(w,e),b||r.setStrong(w,e,g),w}},"71cc":function(e,t){e.exports="uniform vec2 resolution;\r\nuniform sampler2D tBackground;\r\nuniform sampler2D tBackDepth;\r\nuniform sampler2D tDisplayImage;\r\n\r\nvarying vec2 vUv;\r\nvarying vec3 vNormal;\r\nvarying vec3 vCameraRay;\r\nvarying vec4 vWorldPosition;\r\nvarying mat4 vProjectionMatrix;\r\n\r\nfloat near = 0.1;\r\nfloat far  = 20000.0; \r\n\r\nfloat LinearizeDepth(float depth) \r\n{\r\n    float z = depth * 2.0 - 1.0; // back to NDC \r\n    return (2.0 * near * far) / (far + near - z * (far - near));\t\r\n}\r\n\r\nfloat refractionFactor = 1.49; // glass\r\n\r\nvoid main() {\r\n\r\n    vec4 image = texture2D( tDisplayImage, vec2( gl_FragCoord.x / resolution.x, gl_FragCoord.y / resolution.y ) );\r\n    float backDepth = float(texture2D( tBackDepth, vec2( gl_FragCoord.x / resolution.x, gl_FragCoord.y / resolution.y ) ).x);\r\n    float frontDepth = gl_FragCoord.z;\r\n\r\n    float backDepthlinear = LinearizeDepth(backDepth);\r\n    float frontDepthlinear = LinearizeDepth(frontDepth);\r\n    \r\n    float backToFrontDepth = backDepthlinear - frontDepthlinear;\r\n    backToFrontDepth *= 0.005;\r\n    \r\n    vec3 vRefract = refract( vCameraRay, vNormal, 1.0 / refractionFactor );\r\n    vec4 vOriginalPos = vWorldPosition + vec4(vCameraRay, 0.0);\r\n    vec4 vRefractedPos = vWorldPosition + vec4(vRefract, 0.0);\r\n    // vRefractedPos = vOriginalPos; //vWorldPosition + vec4(vRefract, 0.0);\r\n    vec4 vOriginalProjectedPos = vProjectionMatrix * vOriginalPos;\r\n    vec4 vRefractedProjectedPos = vProjectionMatrix * vRefractedPos;\r\n    vec4 offset = normalize(vRefractedProjectedPos - vOriginalProjectedPos);\r\n\r\n    // snell's law\r\n    float cosTheta1 = dot(vCameraRay, vNormal);\r\n    float sinTheta1 = 1.0 - cosTheta1 * cosTheta1;\r\n    float sinTheta2 = sinTheta1 / refractionFactor;\r\n    float theta2 = asin(sinTheta2);\r\n    offset *= theta2;\r\n\r\n    float samplePointX = gl_FragCoord.x / resolution.x + backToFrontDepth * offset.x;\r\n    float samplePointY = gl_FragCoord.y / resolution.y + backToFrontDepth * offset.y;\r\n    \r\n    vec3 backColor = texture2D( tBackground, vec2( samplePointX, samplePointY ) ).xyz;\r\n    // vec4 vNewSample = projectionMatrix * (vec4(vRefract, 0.0) + worldPosition);\r\n    // vRefractOffset = vNewSample.xy / vNewSample.w;\r\n    // // vNormal = normal;\r\n    // vec3 vRefractOffsetT = vRefract + 0.5;\r\n    // gl_FragColor = vec4(backColor * 0.5 + vNormal * 0.2 + depthColor * 0.1, 1.0);\r\n    gl_FragColor = vec4(backColor, 1.0);\r\n    // gl_FragColor = vec4(vec3(backToFrontDepth) * 100.0, 1.0);\r\n    // gl_FragColor = vec4(offset.xy / offset.w + 0.5, 0.0, 1.0);\r\n    // gl_FragColor = vec4(vec3(theta2), 1.0);\r\n\r\n    // gl_FragColor = vec4(vec3(gl_FragCoord.z / gl_FragCoord.w - fragColor2.x * 10.0) / 2000.0, 1.0);\r\n}"},"79c3":function(e,t){e.exports="varying vec2 vUv;\r\nvarying vec3 vNormal;\r\nvarying vec3 vCameraPosition;\r\nvarying vec4 vWorldPosition;\r\nvarying mat4 vProjectionMatrix;\r\n// varying vec3 vRefract;\r\n// varying vec2 vRefractOffset;\r\n\r\n\r\nvoid main() {\r\n    vWorldPosition = modelMatrix * vec4( position, 1.0 );\r\n    vec4 mvPosition = viewMatrix * vWorldPosition;\r\n    gl_Position = projectionMatrix * mvPosition;\r\n    vUv = uv;\r\n\r\n    vNormal = normalize( mat3( modelMatrix[0].xyz, modelMatrix[1].xyz, modelMatrix[2].xyz ) * normal );\r\n    vCameraPosition = cameraPosition;\r\n\r\n    vProjectionMatrix = projectionMatrix * modelViewMatrix;\r\n}\r\n"},"7bcb":function(e,t){e.exports="uniform samplerCube tCube;\r\nvarying vec3 vReflect;\r\nvarying vec3 vRefract[3];\r\nvarying float vReflectionFactor;\r\nvarying vec2 vUv;\r\n\r\nuniform sampler2D tNormal;\r\n\r\nvoid main() {\r\n\r\n    vec4 reflectedColor = textureCube( tCube, vec3( -vReflect.x, vReflect.yz ) );\r\n    vec4 refractedColor = vec4( 1.0 );\r\n\r\n    vec3 tnm = vec3(texture2D(tNormal, vUv));\r\n    tnm = tnm * 2.0 - 1.0;\r\n    tnm = 0.0 * tnm;\r\n    // tnm *= 0.01;\r\n    refractedColor.r = textureCube( tCube, vec3( -vRefract[0].x, vRefract[0].yz ) - tnm ).r;\r\n    refractedColor.g = textureCube( tCube, vec3( -vRefract[1].x, vRefract[1].yz ) - tnm ).g;\r\n    refractedColor.b = textureCube( tCube, vec3( -vRefract[2].x, vRefract[2].yz ) - tnm ).b;\r\n\r\n    gl_FragColor = mix( refractedColor, reflectedColor, clamp( vReflectionFactor, 0.0, 1.0 ) );\r\n}"},8437:function(e,t){e.exports="varying vec3 vPos;\r\n\r\nvoid main() {\r\n    vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\r\n    gl_Position = projectionMatrix * mvPosition;\r\n    vec4 worldPosition = modelMatrix * vec4( position, 1.0 );\r\n    vPos = worldPosition.xyz - cameraPosition;\r\n}\r\n"},"8c9f":function(e,t){e.exports="uniform float mRefractionRatio;\r\nuniform float mFresnelBias;\r\nuniform float mFresnelScale;\r\nuniform float mFresnelPower;\r\n\r\nvarying vec3 vReflect;\r\nvarying vec3 vRefract[3];\r\nvarying float vReflectionFactor;\r\nvarying vec2 vUv;\r\n\r\nvoid main() {\r\n\r\n    vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\r\n    vec4 worldPosition = modelMatrix * vec4( position, 1.0 );\r\n\r\n    vec3 worldNormal = normalize( mat3( modelMatrix[0].xyz, modelMatrix[1].xyz, modelMatrix[2].xyz ) * normal );\r\n\r\n    vec3 I = worldPosition.xyz - cameraPosition;\r\n\r\n    vReflect = reflect( I, worldNormal );\r\n    vRefract[0] = refract( normalize( I ), worldNormal, mRefractionRatio );\r\n    vRefract[1] = refract( normalize( I ), worldNormal, mRefractionRatio * 0.99 );\r\n    vRefract[2] = refract( normalize( I ), worldNormal, mRefractionRatio * 0.98 );\r\n    vReflectionFactor = mFresnelBias + mFresnelScale * pow( 1.0 + dot( normalize( I ), worldNormal ), mFresnelPower );\r\n\r\n    gl_Position = projectionMatrix * mvPosition;\r\n    vUv = uv;\r\n\r\n}\r\n"},"8e1c":function(e,t,r){var n={"./CardSkyboxShader/F.glsl":"91bc","./CarouselBasicShader/F.glsl":"1333","./FresnelShader/F.glsl":"7bcb","./GlassFrontShader/F.glsl":"71cc","./ParticleShader/F.glsl":"d32d","./Refraction2.0/GlassFrontShader/F.glsl":"16a7"};function i(e){var t=o(e);return r(t)}function o(e){if(!r.o(n,e)){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}return n[e]}i.keys=function(){return Object.keys(n)},i.resolve=o,e.exports=i,i.id="8e1c"},"91bc":function(e,t){e.exports="uniform samplerCube tCube;\r\nvarying vec3 vPos;\r\n\r\nvoid main() {\r\n    vec4 reflectedColor = textureCube( tCube, vec3(-vPos.x, vPos.yz) );\r\n    gl_FragColor = reflectedColor;\r\n}"},"93e9":function(e,t,r){"use strict";r.d(t,"a",(function(){return o}));var n=r("5a89"),i=r("1b53");class o extends i["b"]{constructor(e,t,r,i,o){super(),this.scene=e,this.camera=t,this.overrideMaterial=r,this.clearColor=i,this.clearAlpha=void 0!==o?o:0,this.clear=!0,this.clearDepth=!1,this.needsSwap=!1,this._oldClearColor=new n["m"]}render(e,t,r){const n=e.autoClear;let i,o;e.autoClear=!1,void 0!==this.overrideMaterial&&(o=this.scene.overrideMaterial,this.scene.overrideMaterial=this.overrideMaterial),this.clearColor&&(e.getClearColor(this._oldClearColor),i=e.getClearAlpha(),e.setClearColor(this.clearColor,this.clearAlpha)),this.clearDepth&&e.clearDepth(),e.setRenderTarget(this.renderToScreen?null:r),this.clear&&e.clear(e.autoClearColor,e.autoClearDepth,e.autoClearStencil),e.render(this.scene,this.camera),this.clearColor&&e.setClearColor(this._oldClearColor,i),void 0!==this.overrideMaterial&&(this.scene.overrideMaterial=o),e.autoClear=n}}},acac:function(e,t,r){"use strict";var n=r("e330"),i=r("e2cc"),o=r("f183").getWeakData,a=r("825a"),s=r("861d"),l=r("19aa"),c=r("2266"),h=r("b727"),f=r("1a2d"),v=r("69f3"),d=v.set,u=v.getterFor,m=h.find,p=h.findIndex,g=n([].splice),b=0,x=function(e){return e.frozen||(e.frozen=new y)},y=function(){this.entries=[]},C=function(e,t){return m(e.entries,(function(e){return e[0]===t}))};y.prototype={get:function(e){var t=C(this,e);if(t)return t[1]},has:function(e){return!!C(this,e)},set:function(e,t){var r=C(this,e);r?r[1]=t:this.entries.push([e,t])},delete:function(e){var t=p(this.entries,(function(t){return t[0]===e}));return~t&&g(this.entries,t,1),!!~t}},e.exports={getConstructor:function(e,t,r,n){var h=e((function(e,i){l(e,v),d(e,{type:t,id:b++,frozen:void 0}),void 0!=i&&c(i,e[n],{that:e,AS_ENTRIES:r})})),v=h.prototype,m=u(t),p=function(e,t,r){var n=m(e),i=o(a(t),!0);return!0===i?x(n).set(t,r):i[n.id]=r,e};return i(v,{delete:function(e){var t=m(this);if(!s(e))return!1;var r=o(e);return!0===r?x(t)["delete"](e):r&&f(r,t.id)&&delete r[t.id]},has:function(e){var t=m(this);if(!s(e))return!1;var r=o(e);return!0===r?x(t).has(e):r&&f(r,t.id)}}),i(v,r?{get:function(e){var t=m(this);if(s(e)){var r=o(e);return!0===r?x(t).get(e):r?r[t.id]:void 0}},set:function(e,t){return p(this,e,t)}}:{add:function(e){return p(this,e,!0)}}),h}}},b837:function(e,t){e.exports="precision highp float;\r\n\r\nuniform mat4 modelViewMatrix;\r\nuniform mat4 projectionMatrix;\r\n// uniform vec2 uv;\r\n\r\nattribute vec3 position;\r\nattribute vec3 vPos;\r\n\r\nattribute vec3  customColor;\r\nattribute float customOpacity;\r\nattribute float customSize;\r\nattribute float customVisible;  // float used as boolean (0 = false, 1 = true)\r\n\r\n// varying vec2 vUv;\r\nvarying vec4  vColor;\r\nvarying float vAngle;\r\n\r\nvoid main()\r\n{\r\n\tif ( customVisible > 0.5 ) \t\t\t\t// true\r\n\t\tvColor = vec4( customColor, customOpacity ); //     set color associated to vertex; use later in fragment shader.\r\n\telse\t\t\t\t\t\t\t// false\r\n\t\tvColor = vec4(0.0, 0.0, 0.0, 0.0); \t\t//     make particle invisible.\r\n    mat3 scaleMatrix = mat3(customSize, 0.0, 0.0, 0.0, customSize, 0.0, 0.0, 0.0, customSize);\r\n\tvec4 mvPosition = modelViewMatrix * vec4( vPos + scaleMatrix * position, 1.0 );\r\n\tgl_PointSize = customSize * ( 300.0 / length( mvPosition.xyz ) );     // scale particles as objects in 3D space\r\n\tgl_Position = projectionMatrix * mvPosition;\r\n    // vUv = uv;\r\n    // vUv = vec2(1.0, 0.4);\r\n    // gl_Position = projectionMatrix * modelViewMatrix * vec4( vPos + position, 1.0 );\r\n}"},bb2f:function(e,t,r){var n=r("d039");e.exports=!n((function(){return Object.isExtensible(Object.preventExtensions({}))}))},c182:function(e,t){e.exports="varying vec2 vUv;\r\nvarying vec3 vNormal;\r\nvarying vec3 vCameraRay;\r\nvarying vec4 vWorldPosition;\r\nvarying mat4 vProjectionMatrix;\r\n// varying vec3 vRefract;\r\n// varying vec2 vRefractOffset;\r\n\r\n\r\nvoid main() {\r\n    vWorldPosition = modelMatrix * vec4( position, 1.0 );\r\n    vec4 mvPosition = viewMatrix * vWorldPosition;\r\n    gl_Position = projectionMatrix * mvPosition;\r\n    vUv = uv;\r\n\r\n    vNormal = normalize( mat3( modelMatrix[0].xyz, modelMatrix[1].xyz, modelMatrix[2].xyz ) * normal );\r\n    vCameraRay = normalize(vWorldPosition.xyz - cameraPosition);\r\n\r\n    vProjectionMatrix = projectionMatrix * modelViewMatrix;\r\n}\r\n"},d32d:function(e,t){e.exports="precision highp float;\r\n\r\nuniform sampler2D texture;\r\n\r\n// varying vec2 vUv;\r\nvarying vec4 vColor;\r\nvarying float vAngle;\r\n\r\nvoid main()\r\n{\r\n\tgl_FragColor = vColor;\r\n\t\r\n\t// float c = cos(vAngle);\r\n\t// float s = sin(vAngle);\r\n\t// vec2 rotatedUV = vec2(c * (gl_PointCoord.x - 0.5) + s * (gl_PointCoord.y - 0.5) + 0.5,\r\n\t//                       c * (gl_PointCoord.y - 0.5) - s * (gl_PointCoord.x - 0.5) + 0.5);  // rotate UV coordinates to rotate texture\r\n    // vec4 rotatedTexture = texture2D( texture,  rotatedUV );\r\n    // vec4 rotatedTexture = texture2D( texture,  vUv );\r\n\t// gl_FragColor = rotatedTexture;    // sets an otherwise white particle texture to desired color\r\n    // gl_FragColor = vec4(vUv.x, vUv.y, 0.0, 1.0);\r\n}"},d86b:function(e,t,r){var n=r("d039");e.exports=n((function(){if("function"==typeof ArrayBuffer){var e=new ArrayBuffer(8);Object.isExtensible(e)&&Object.defineProperty(e,"a",{value:8})}}))},f183:function(e,t,r){var n=r("23e7"),i=r("e330"),o=r("d012"),a=r("861d"),s=r("1a2d"),l=r("9bf2").f,c=r("241c"),h=r("057f"),f=r("4fad"),v=r("90e3"),d=r("bb2f"),u=!1,m=v("meta"),p=0,g=function(e){l(e,m,{value:{objectID:"O"+p++,weakData:{}}})},b=function(e,t){if(!a(e))return"symbol"==typeof e?e:("string"==typeof e?"S":"P")+e;if(!s(e,m)){if(!f(e))return"F";if(!t)return"E";g(e)}return e[m].objectID},x=function(e,t){if(!s(e,m)){if(!f(e))return!0;if(!t)return!1;g(e)}return e[m].weakData},y=function(e){return d&&u&&f(e)&&!s(e,m)&&g(e),e},C=function(){w.enable=function(){},u=!0;var e=c.f,t=i([].splice),r={};r[m]=1,e(r).length&&(c.f=function(r){for(var n=e(r),i=0,o=n.length;i<o;i++)if(n[i]===m){t(n,i,1);break}return n},n({target:"Object",stat:!0,forced:!0},{getOwnPropertyNames:h.f}))},w=e.exports={enable:C,fastKey:b,getWeakData:x,onFreeze:y};o[m]=!0},f4ce:function(e,t){e.exports="varying vec2 vUv;\r\nvoid main() {\r\n    vUv = vec2(1.0, 0.5);\r\n    gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\r\n}"},fb12:function(e,t,r){"use strict";r.d(t,"a",(function(){return d})),r.d(t,"b",(function(){return g}));var n=r("d4ec"),i=r("bee2"),o=r("257e"),a=r("262e"),s=r("2caf"),l=r("ade3"),c=(r("d3b7"),r("3ca3"),r("10d1"),r("ddb0"),r("ac1f"),r("00b4"),r("5a89")),h=new c["Gb"],f=new c["jb"],v=new c["Gb"],d=function(e){Object(a["a"])(r,e);var t=Object(s["a"])(r);function r(){var e,i=arguments.length>0&&void 0!==arguments[0]?arguments[0]:document.createElement("div");return Object(n["a"])(this,r),e=t.call(this),Object(l["a"])(Object(o["a"])(e),"element",void 0),Object(l["a"])(Object(o["a"])(e),"followObject",void 0),Object(l["a"])(Object(o["a"])(e),"followObjectOffset",void 0),e.element=i,e.element.style.position="absolute",e.element.style.pointerEvents="all",null!==i.parentNode?i.parentNode.removeChild(i):document.removeChild(i),e.followObject=null,e.followObjectOffset=new c["Gb"],e}return Object(i["a"])(r,[{key:"setFollowObject",value:function(e,t){this.followObject=e,this.followObjectOffset=t}}]),r}(c["ab"]),u=function(e){Object(a["a"])(r,e);var t=Object(s["a"])(r);function r(e){var i;return Object(n["a"])(this,r),i=t.call(this,e),Object(l["a"])(Object(o["a"])(i),"rotation2D",void 0),i.rotation2D=0,i}return Object(i["a"])(r)}(d),m=new c["S"],p=new c["S"],g=function(){function e(t){Object(n["a"])(this,e),Object(l["a"])(this,"domElement",void 0),Object(l["a"])(this,"cameraElement",void 0),Object(l["a"])(this,"_width",void 0),Object(l["a"])(this,"_height",void 0),Object(l["a"])(this,"_widthHalf",void 0),Object(l["a"])(this,"_heightHalf",void 0),Object(l["a"])(this,"cache",void 0),this._width=0,this._height=0,this._widthHalf=0,this._heightHalf=0,this.cache={camera:{fov:0,style:""},objects:new WeakMap},this.domElement=void 0!==t?t:document.createElement("div"),this.domElement.style.position="absolute",this.domElement.style.overflow="visible",this.domElement.style.pointerEvents="none",this.cameraElement=document.createElement("div"),this.cameraElement.style.overflow="visible",this.cameraElement.style.transformStyle="preserve-3d",this.cameraElement.style.pointerEvents="none",t.appendChild(this.cameraElement)}return Object(i["a"])(e,[{key:"getSize",value:function(){return{width:this._width,height:this._height}}},{key:"render",value:function(e,t){var r=t.projectionMatrix.elements[5]*this._heightHalf;this.cache.camera.fov!==r&&(this.domElement.style.perspective=r+"px",this.cache.camera.fov=r),!0===e.autoUpdate&&e.updateMatrixWorld(),null===t.parent&&t.updateMatrixWorld();var n="translateZ("+r+"px)"+this.getCameraCSSMatrix(t.matrixWorldInverse),i=n+"translate("+this._widthHalf+"px,"+this._heightHalf+"px)";this.cache.camera.style!==i&&(this.cameraElement.style.transform=i,this.cache.camera.style=i),this.renderObject(e,e,t,n)}},{key:"setSize",value:function(e,t){this._width=e,this._height=t,this._widthHalf=this._width/2,this._heightHalf=this._height/2,this.domElement.style.width=this._width+"px",this.domElement.style.height=this._height+"px",this.cameraElement.style.width=this._width+"px",this.cameraElement.style.height=this._height+"px"}},{key:"epsilon",value:function(e){return Math.abs(e)<1e-10?0:e}},{key:"getCameraCSSMatrix",value:function(e){var t=e.elements;return"matrix3d("+this.epsilon(t[0])+","+this.epsilon(-t[1])+","+this.epsilon(t[2])+","+this.epsilon(t[3])+","+this.epsilon(t[4])+","+this.epsilon(-t[5])+","+this.epsilon(t[6])+","+this.epsilon(t[7])+","+this.epsilon(t[8])+","+this.epsilon(-t[9])+","+this.epsilon(t[10])+","+this.epsilon(t[11])+","+this.epsilon(t[12])+","+this.epsilon(-t[13])+","+this.epsilon(t[14])+","+this.epsilon(t[15])+")"}},{key:"getObjectCSSMatrix",value:function(e){var t=e.elements,r="matrix3d("+this.epsilon(t[0])+","+this.epsilon(t[1])+","+this.epsilon(t[2])+","+this.epsilon(t[3])+","+this.epsilon(-t[4])+","+this.epsilon(-t[5])+","+this.epsilon(-t[6])+","+this.epsilon(-t[7])+","+this.epsilon(t[8])+","+this.epsilon(t[9])+","+this.epsilon(t[10])+","+this.epsilon(t[11])+","+this.epsilon(t[12])+","+this.epsilon(t[13])+","+this.epsilon(t[14])+","+this.epsilon(t[15])+")";return r}},{key:"renderObject",value:function(e,t,r,n){if(e instanceof d){var i=e.visible&&e.layers.test(r.layers);if(e.element.style.display=i?"":"none",i){var o;void 0!=e.followObject&&(e.position.copy(e.followObject.position),e.position.add(e.followObjectOffset)),e instanceof u?(m.copy(r.matrixWorldInverse),m.transpose(),0!==e.rotation2D&&m.multiply(p.makeRotationZ(e.rotation2D)),e.matrixWorld.decompose(h,f,v),m.setPosition(h),m.scale(v),m.elements[3]=0,m.elements[7]=0,m.elements[11]=0,m.elements[15]=1,o=this.getObjectCSSMatrix(m)):o=this.getObjectCSSMatrix(e.matrixWorld);var a=e.element,s=this.cache.objects.get(e);if(void 0===s||s.style!==o){a.style.transform=o;var l={style:o};this.cache.objects.set(e,l)}a.parentNode!==this.cameraElement&&this.cameraElement.appendChild(a)}}for(var c=0,g=e.children.length;c<g;c++)e.children[c]instanceof d&&this.renderObject(e.children[c],t,r,n)}}]),e}()}}]);
//# sourceMappingURL=chunk-58b05e37.aa3e53b5.js.map