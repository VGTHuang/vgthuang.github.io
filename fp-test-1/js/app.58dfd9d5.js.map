{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/App.vue?4a62","webpack:///./src/scripts/ThreeRealisticRefraction sync ^\\.\\/.*\\/F\\.glsl$","webpack:///./src/scripts/Three/CarouselBasicShader/F.glsl","webpack:///./src/scripts/Three/Refraction2.0/GlassFrontShader/F.glsl","webpack:///./src/scripts/Three/TardisCard.ts","webpack:///./src/scripts/Three/Utils.ts","webpack:///./src/views/ThreeFrontpageTest.vue?b037","webpack:///./src/views/ThreeFrontpageTest.vue?8e9f","webpack:///./src/scripts/Three/SQWater.ts","webpack:///./src/scripts/AnimUtils/TweenUtils.ts","webpack:///./src/scripts/Three/Carousel.ts","webpack:///./src/scripts/Three/FrontPage.ts","webpack:///./src/views/ThreeFrontpageTest.vue","webpack:///./src/views/ThreeFrontpageTest.vue?e700","webpack:///./src/views/ThreeFrontpageTest.vue?5b81","webpack:///./src/scripts/Three/ShaderLoader.ts","webpack:///./src/scripts/ThreeRealisticRefraction sync ^\\.\\/.*\\/V\\.glsl$","webpack:///./src/scripts/Three sync ^\\.\\/.*\\/V\\.glsl$","webpack:///./src/scripts/Three/GlassFrontShader/F.glsl","webpack:///./src/scripts/Three/Refraction2.0/GlassFrontShader/V.glsl","webpack:///./src/scripts/Three/FresnelShader/F.glsl","webpack:///./src/scripts/ThreeRealisticRefraction/ShaderLoader.ts","webpack:///./src/scripts/ThreeRealisticRefraction/ThreeRealisticRefraction.ts","webpack:///./src/scripts/Three/CardSkyboxShader/V.glsl","webpack:///./src/scripts/Three/FresnelShader/V.glsl","webpack:///./src/scripts/Three sync ^\\.\\/.*\\/F\\.glsl$","webpack:///./src/scripts/Three/CardSkyboxShader/F.glsl","webpack:///./src/scripts/Three/ParticleShader/V.glsl","webpack:///./src/scripts/Three/GlassFrontShader/V.glsl","webpack:///./src/scripts/ThreeRealisticRefraction/GlassFrontShader/V.glsl","webpack:///./src/App.vue?6997","webpack:///./src/App.vue","webpack:///./src/App.vue?198c","webpack:///./src/App.vue?315a","webpack:///./src/router/index.ts","webpack:///./src/store/index.ts","webpack:///./src/main.ts","webpack:///./src/scripts/Three/ParticleShader/F.glsl","webpack:///./src/scripts/ThreeRealisticRefraction/GlassFrontShader/F.glsl","webpack:///./src/scripts/Three/CarouselBasicShader/V.glsl","webpack:///./src/scripts/Three/CustomCSS3DRenderer.ts"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","installedCssChunks","jsonpScriptSrc","p","exports","module","l","e","promises","cssChunks","Promise","resolve","reject","href","fullhref","existingLinkTags","document","getElementsByTagName","tag","dataHref","getAttribute","rel","existingStyleTags","linkTag","createElement","type","onload","onerror","event","request","target","src","err","Error","code","parentNode","removeChild","head","appendChild","then","installedChunkData","promise","onScriptComplete","script","charset","timeout","nc","setAttribute","error","clearTimeout","chunk","errorType","realSrc","message","name","undefined","setTimeout","all","m","c","d","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","oe","console","jsonpArray","window","oldJsonpFunction","slice","map","webpackContext","req","id","webpackContextResolve","keys","TardisCardShape","TardisCard","height","width","stencilId","cardOutsideScene","cardInsideScene","position","rotation","shape","RECT","reflectionScene","reflectionColor","this","cardGeometry","cardMaterial","color","stencilWrite","stencilRef","stencilZPass","depthWrite","cardMesh","copy","add","isFocused","frontWallGeom","frontWallMesh","cardReflectionMesh","material","group","_recursiveGetGroupProperty","stencilFunc","setFunc","children","forEach","v","Array","mat","thickness","positions","indices","points","tv","setFromPoints","computeVertexNormals","frontWallMat","textureCube","vs","fs","uniforms","customMaterial","vertexShader","fragmentShader","DampingObjectController","damp","attract","velocity","childObjects","multiplyScalar","currentPath","sub","obj","DampingVector3Controller","currentVec3","render","_vm","_h","$createElement","_c","_self","ref","attrs","staticClass","class","loadingStat","isLoaded","noLoadingStat","style","loaded","total","_v","_s","Math","round","on","onGlassClick","_m","staticRenderFns","geometry","options","scope","textureWidth","textureHeight","clipBias","flowDirection","flowSpeed","reflectivity","scale","shader","WaterShader","textureLoader","normalMap0","load","normalMap1","cycle","halfCycle","textureMatrix","clock","reflector","Reflector","updateTextureMatrix","camera","set","multiply","projectionMatrix","matrixWorldInverse","matrixWorld","updateFlow","delta","getDelta","config","x","y","matrixAutoUpdate","merge","transparent","fog","wrapS","wrapT","getRenderTarget","texture","z","w","onBeforeRender","renderer","scene","visible","requestId","requestAnimationFrame","loopAnim","cancelAnimationFrame","animationObjectCount","startAnim","stopAnim","fromValue","toValue","onUpdateFunc","onCompleteFunc","duration","easing","Quadratic","InOut","a","addTweenAnimObject","to","onUpdate","onComplete","removeTweenAnimObject","start","v1","v2","controller","index","mesh","textureList","isPushingTexture","newTexture","recPushTexture","vTextureMix","vTextures","tweenNumber","numOfVisiblePics","isRotating","rotateNode","currentCenter","planes","planeWidth","planeHeight","planeGap","preloadImgs","maxPreloadImgCount","carouselArrayRadius","carouselArrayAngle","atan","tempUniforms","vColor","tempPlane","offset","sin","cos","plane","__imgSrcToTex","ceil","random","pushNewTexture","raycaster","getImgSrcFunc","imgMeshes","intersects","intersectObjects","intersectObj","intersectIndex","indexOf","step","floor","moveLeft","moveRight","moveStep","sort","rightmostImg","tempRotationPosition","leftmostImg","imgSrc","self","imageLoader","setCrossOrigin","tempImageElement","needsUpdate","k","imgTex","canRemoveImg","planeIndex","dispose","_container","onLoad","onProgress","onError","animate","updatecornerObject","updateCamera","updateCursorLight","stats","update","cameraZPosition","container","innerWidth","innerHeight","alpha","setClearColor","setPixelRatio","devicePixelRatio","setSize","domElement","top","left","zIndex","cssScene","loadingManager","url","urls","mapping","environment","light","intensity","refractionManager","glassMesh1","RoundedBoxGeometry","glassMesh1InteractAgent","addRefractionMesh","glassMesh1Controller","renderPass1","RenderPass","clear","renderPass2","clearDepth","composer","EffectComposer","offsetWidth","offsetHeight","addPass","renderTarget1","stencilBuffer","renderTarget2","background","tardisCardTop","addSkybox","contentGroupInTardisCardTop","titleTexture","tardisCardTopTitle","alphaMap","alphaToCoverage","addVisibleObjectGroup","cssAttachObject","tardisCard1","diffuseTexture","normalTexture","specTexture","texs","repeat","contentGroupInTardisCard1","pgnormal","loader","TDSLoader","setResourcePath","traverse","child","log","normalMap","tardisCardBackground1","normalScale","specularColorMap","specularIntensity","metalness","roughness","clearcoat","tardisCard2","CIRCLE","carousel1","diffuseTexture2","normalTexture2","specTexture2","tardisCardBackground","contentGroupInTardisCard2","tardisCard3","carousel2","diffuseTexture3","normalTexture3","specTexture3","contentGroupInTardisCard3","waterGeometry","water","PI","cameraTargetPosition","lookAt","cameraWithMouseMoveFactor","cameraWithMouseRotateFactor","cameraPositionController","addEventListener","onMouseMove","cursorLightGroup","cursorLight","decay","distance","cursorLightController","intersectTardisCardObjs","intersectGlassObjs","glassSelected","glassIsRotating","mousePosX","mousePosY","pointer","onWindowResize","onClick","cssRenderer","aspect","updateProjectionMatrix","clientX","clientY","setFromCamera","parent","rotateObj","tweenEuler","val","refractionMaterialUniforms","b","refObj","tweenThreeVector3","updatedVec","clickToRotate","carouselIndex","clickToChangeTex","posX","posY","ray","unproject","targetPos","getRaycastPos","relX","relY","dampPos","vel","isNaN","camPosZ","targetPosVec","newz","htmlContainer","htmlElem","CustomCSS3DRenderer","extend","fpm","mounted","$refs","HTMLElement","_","glassCSSObj","registerCSSCoordinator","setFollowObject","methods","alert","component","loadShader","shaderName","fragShader","controls","rm","suResolution","suBackground","suDepth","backColor","absorbColor","suRefractionFactor","suOpacity","originalMaterial","clone","glassFrontVS","glassFrontFS","refractionMaterial","side","backgroundScene","backDepthTextureSize","frontScene","backdepthTexture","backRenderTarget","depthBuffer","depthTexture","refractionObjectList","setDefaultBacksideMaterial","refractionFactor","opacityFactor","_backColor","opacity","setRenderTarget","initScene","antialias","OrbitControls","floorTexture","floorMaterial","floorGeometry","glassMesh2","glassMesh3","ballMesh","components","ThreeFrontpageTest","use","routes","path","router","base","store","Store","state","mouseX","mouseY","mutations","mouseMoveEvent","productionTip","h","App","$mount","_position","_quaternion","_scale","CustomCSS3DObject","element","pointerEvents","followObject","followObjectOffset","CustomCSS3DSprite","rotation2D","_matrix","_matrix2","_width","_height","_widthHalf","_heightHalf","cache","fov","objects","WeakMap","overflow","cameraElement","transformStyle","elements","perspective","autoUpdate","updateMatrixWorld","cameraCSSMatrix","getCameraCSSMatrix","transform","renderObject","abs","matrix","epsilon","matrix3d","layers","test","display","transpose","makeRotationZ","decompose","setPosition","getObjectCSSMatrix","cachedObject","objectData"],"mappings":"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","file":"js/app.58dfd9d5.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded CSS chunks\n \tvar installedCssChunks = {\n \t\t\"app\": 0\n \t}\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// script path function\n \tfunction jsonpScriptSrc(chunkId) {\n \t\treturn __webpack_require__.p + \"js/\" + ({}[chunkId]||chunkId) + \".\" + {\"chunk-2d22d746\":\"83e5083b\",\"chunk-35cc0210\":\"52b3c3e7\",\"chunk-728f3a93\":\"c6339a01\"}[chunkId] + \".js\"\n \t}\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n \t// This file contains only the entry chunk.\n \t// The chunk loading function for additional chunks\n \t__webpack_require__.e = function requireEnsure(chunkId) {\n \t\tvar promises = [];\n\n\n \t\t// mini-css-extract-plugin CSS loading\n \t\tvar cssChunks = {\"chunk-35cc0210\":1,\"chunk-728f3a93\":1};\n \t\tif(installedCssChunks[chunkId]) promises.push(installedCssChunks[chunkId]);\n \t\telse if(installedCssChunks[chunkId] !== 0 && cssChunks[chunkId]) {\n \t\t\tpromises.push(installedCssChunks[chunkId] = new Promise(function(resolve, reject) {\n \t\t\t\tvar href = \"css/\" + ({}[chunkId]||chunkId) + \".\" + {\"chunk-2d22d746\":\"31d6cfe0\",\"chunk-35cc0210\":\"5f404623\",\"chunk-728f3a93\":\"914bdefd\"}[chunkId] + \".css\";\n \t\t\t\tvar fullhref = __webpack_require__.p + href;\n \t\t\t\tvar existingLinkTags = document.getElementsByTagName(\"link\");\n \t\t\t\tfor(var i = 0; i < existingLinkTags.length; i++) {\n \t\t\t\t\tvar tag = existingLinkTags[i];\n \t\t\t\t\tvar dataHref = tag.getAttribute(\"data-href\") || tag.getAttribute(\"href\");\n \t\t\t\t\tif(tag.rel === \"stylesheet\" && (dataHref === href || dataHref === fullhref)) return resolve();\n \t\t\t\t}\n \t\t\t\tvar existingStyleTags = document.getElementsByTagName(\"style\");\n \t\t\t\tfor(var i = 0; i < existingStyleTags.length; i++) {\n \t\t\t\t\tvar tag = existingStyleTags[i];\n \t\t\t\t\tvar dataHref = tag.getAttribute(\"data-href\");\n \t\t\t\t\tif(dataHref === href || dataHref === fullhref) return resolve();\n \t\t\t\t}\n \t\t\t\tvar linkTag = document.createElement(\"link\");\n \t\t\t\tlinkTag.rel = \"stylesheet\";\n \t\t\t\tlinkTag.type = \"text/css\";\n \t\t\t\tlinkTag.onload = resolve;\n \t\t\t\tlinkTag.onerror = function(event) {\n \t\t\t\t\tvar request = event && event.target && event.target.src || fullhref;\n \t\t\t\t\tvar err = new Error(\"Loading CSS chunk \" + chunkId + \" failed.\\n(\" + request + \")\");\n \t\t\t\t\terr.code = \"CSS_CHUNK_LOAD_FAILED\";\n \t\t\t\t\terr.request = request;\n \t\t\t\t\tdelete installedCssChunks[chunkId]\n \t\t\t\t\tlinkTag.parentNode.removeChild(linkTag)\n \t\t\t\t\treject(err);\n \t\t\t\t};\n \t\t\t\tlinkTag.href = fullhref;\n\n \t\t\t\tvar head = document.getElementsByTagName(\"head\")[0];\n \t\t\t\thead.appendChild(linkTag);\n \t\t\t}).then(function() {\n \t\t\t\tinstalledCssChunks[chunkId] = 0;\n \t\t\t}));\n \t\t}\n\n \t\t// JSONP chunk loading for javascript\n\n \t\tvar installedChunkData = installedChunks[chunkId];\n \t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n \t\t\t// a Promise means \"currently loading\".\n \t\t\tif(installedChunkData) {\n \t\t\t\tpromises.push(installedChunkData[2]);\n \t\t\t} else {\n \t\t\t\t// setup Promise in chunk cache\n \t\t\t\tvar promise = new Promise(function(resolve, reject) {\n \t\t\t\t\tinstalledChunkData = installedChunks[chunkId] = [resolve, reject];\n \t\t\t\t});\n \t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n \t\t\t\t// start chunk loading\n \t\t\t\tvar script = document.createElement('script');\n \t\t\t\tvar onScriptComplete;\n\n \t\t\t\tscript.charset = 'utf-8';\n \t\t\t\tscript.timeout = 120;\n \t\t\t\tif (__webpack_require__.nc) {\n \t\t\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n \t\t\t\t}\n \t\t\t\tscript.src = jsonpScriptSrc(chunkId);\n\n \t\t\t\t// create error before stack unwound to get useful stacktrace later\n \t\t\t\tvar error = new Error();\n \t\t\t\tonScriptComplete = function (event) {\n \t\t\t\t\t// avoid mem leaks in IE.\n \t\t\t\t\tscript.onerror = script.onload = null;\n \t\t\t\t\tclearTimeout(timeout);\n \t\t\t\t\tvar chunk = installedChunks[chunkId];\n \t\t\t\t\tif(chunk !== 0) {\n \t\t\t\t\t\tif(chunk) {\n \t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n \t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n \t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n \t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n \t\t\t\t\t\t\terror.type = errorType;\n \t\t\t\t\t\t\terror.request = realSrc;\n \t\t\t\t\t\t\tchunk[1](error);\n \t\t\t\t\t\t}\n \t\t\t\t\t\tinstalledChunks[chunkId] = undefined;\n \t\t\t\t\t}\n \t\t\t\t};\n \t\t\t\tvar timeout = setTimeout(function(){\n \t\t\t\t\tonScriptComplete({ type: 'timeout', target: script });\n \t\t\t\t}, 120000);\n \t\t\t\tscript.onerror = script.onload = onScriptComplete;\n \t\t\t\tdocument.head.appendChild(script);\n \t\t\t}\n \t\t}\n \t\treturn Promise.all(promises);\n \t};\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/fp-test-1/\";\n\n \t// on error function for async loading\n \t__webpack_require__.oe = function(err) { console.error(err); throw err; };\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../node_modules/cache-loader/dist/cjs.js??ref--1-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=style&index=0&lang=css&\"","var map = {\n\t\"./GlassFrontShader/F.glsl\": \"f430\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"08fd\";","module.exports = \"varying vec2 vUv;\\r\\n\\r\\nuniform float vTextureMix;\\r\\n\\r\\nuniform sampler2D vTextures[ 2 ];\\r\\n\\r\\nvoid main()\\r\\n{\\r\\n    vec4 tColor1 = vec4(texture2D( vTextures[0], vUv ));\\r\\n    vec4 tColor2 = vec4(texture2D( vTextures[1], vUv ));\\r\\n    gl_FragColor = mix( tColor1, tColor2, vTextureMix );\\r\\n    // gl_FragColor = mix( tColor1, tColor2, 0.5 );\\r\\n    // gl_FragColor = tColor2;\\r\\n}\"","module.exports = \"uniform vec2 resolution;\\r\\nuniform sampler2D tBackground;\\r\\nuniform sampler2D tBackDepth;\\r\\nuniform samplerCube tSkybox;\\r\\nuniform vec3 absorbColor;\\r\\nuniform float refractionFactor;\\r\\nuniform float opacity;\\r\\n\\r\\nvarying vec2 vUv;\\r\\nvarying vec3 vNormal;\\r\\nvarying vec3 vCameraPosition;\\r\\nvarying vec4 vWorldPosition;\\r\\nvarying mat4 vProjectionMatrix;\\r\\n\\r\\nfloat near = 0.1;\\r\\nfloat far  = 5000.0;\\r\\n\\r\\nfloat LinearizeDepth(float depth) \\r\\n{\\r\\n    float z = depth * 2.0 - 1.0; // back to NDC \\r\\n    return (2.0 * near * far) / (far + near - z * (far - near));\\t\\r\\n}\\r\\n\\r\\nvoid main() {\\r\\n    gl_FragColor = vec4(1.0, 0.0, 0.0, 1.0);\\r\\n}\\r\\n\\r\\nvoid main1() {\\r\\n\\r\\n    float backDepth = float(texture2D( tBackDepth, vec2( gl_FragCoord.x / resolution.x, gl_FragCoord.y / resolution.y ) ).x);\\r\\n    float frontDepth = gl_FragCoord.z;\\r\\n\\r\\n    float backDepthlinear = LinearizeDepth(backDepth);\\r\\n    float frontDepthlinear = LinearizeDepth(frontDepth);\\r\\n    \\r\\n    float backToFrontDepth = backDepthlinear - frontDepthlinear;\\r\\n    backToFrontDepth *= 0.25;\\r\\n    \\r\\n    vec3 vCameraRay = vWorldPosition.xyz / vWorldPosition.w - vCameraPosition;\\r\\n    vCameraRay = normalize(vCameraRay);\\r\\n    vec3 vRefract = refract( vCameraRay, vNormal, 1.0 / refractionFactor );\\r\\n    vec4 vOriginalPos = vWorldPosition + vec4(vCameraRay, 0.0);\\r\\n    vec4 vRefractedPos = vWorldPosition + vec4(vRefract, 0.0);\\r\\n    // vRefractedPos = vOriginalPos; //vWorldPosition + vec4(vRefract, 0.0);\\r\\n    vec4 vOriginalProjectedPos = vProjectionMatrix * vOriginalPos;\\r\\n    vec4 vRefractedProjectedPos = vProjectionMatrix * vRefractedPos;\\r\\n    vec2 offset = normalize(vRefractedProjectedPos - vOriginalProjectedPos).xy;\\r\\n    offset = normalize(offset);\\r\\n\\r\\n    // reflect\\r\\n    vec3 vReflect = reflect( vCameraRay, vNormal );\\r\\n    vec3 refCol = vec3(textureCube(tSkybox, vReflect));\\r\\n\\r\\n    // snell's law\\r\\n    float cosTheta1 = dot(vCameraRay, vNormal);\\r\\n    float sinTheta1 = 1.0 - cosTheta1 * cosTheta1;\\r\\n    float sinTheta2 = sinTheta1 / refractionFactor;\\r\\n    float theta2 = asin(sinTheta2);\\r\\n    offset *= sinTheta2;\\r\\n    offset *= 50.0;\\r\\n\\r\\n    float samplePointX_r = (gl_FragCoord.x + backToFrontDepth * offset.x * 0.9) / resolution.x;\\r\\n    float samplePointY_r = (gl_FragCoord.y + backToFrontDepth * offset.y * 0.9) / resolution.y;\\r\\n\\r\\n    float samplePointX_g = (gl_FragCoord.x + backToFrontDepth * offset.x * 0.95) / resolution.x;\\r\\n    float samplePointY_g = (gl_FragCoord.y + backToFrontDepth * offset.y * 0.95) / resolution.y;\\r\\n\\r\\n    float samplePointX_b = (gl_FragCoord.x + backToFrontDepth * offset.x) / resolution.x;\\r\\n    float samplePointY_b = (gl_FragCoord.y + backToFrontDepth * offset.y) / resolution.y;\\r\\n    \\r\\n    float backColor_r = texture2D( tBackground, vec2( samplePointX_r, samplePointY_r ) * 1.0 ).x;\\r\\n    float backColor_g = texture2D( tBackground, vec2( samplePointX_g, samplePointY_g ) * 1.0 ).y;\\r\\n    float backColor_b = texture2D( tBackground, vec2( samplePointX_b, samplePointY_b ) * 1.0 ).z;\\r\\n\\r\\n    vec3 backColor = vec3(backColor_r, backColor_g, backColor_b);\\r\\n    vec3 absorbColor = absorbColor * sqrt(backToFrontDepth) * opacity;\\r\\n\\r\\n    // backColor = texture2D( tBackground, vec2( (gl_FragCoord.x + backToFrontDepth * offset.x) / resolution.x, (gl_FragCoord.y + backToFrontDepth * offset.y) / resolution.y ) * 1.0 ).xyz;\\r\\n\\r\\n    // gl_FragColor = vec4(refCol, 1.0);\\r\\n    float reflectionCoeff = 0.5 * pow(sinTheta1, 4.0);\\r\\n    // reflectionCoeff = 1.0;\\r\\n    gl_FragColor = vec4(mix(backColor + absorbColor, refCol, reflectionCoeff), 1.0);\\r\\n    // gl_FragColor = vec4(vec3(backDepthlinear*0.01), 1.0);\\r\\n}\"","import * as THREE from 'three'\r\nimport { loadShader } from './ShaderLoader'\r\n\r\nexport enum TardisCardShape {\r\n    RECT,\r\n    CIRCLE\r\n}\r\n\r\nexport class TardisCard {\r\n    cardGeometry: THREE.BufferGeometry\r\n    cardMaterial: THREE.Material\r\n    cardMesh: THREE.Mesh\r\n    stencilId: number\r\n    cardOutsideScene: THREE.Scene\r\n    cardInsideScene: THREE.Scene\r\n    isFocused: boolean\r\n    height: number\r\n    width: number\r\n    frontWallGeom: THREE.BufferGeometry\r\n    frontWallMesh: THREE.Mesh\r\n    constructor(height: number = 100, width: number = 100,\r\n        stencilId: number,\r\n        cardOutsideScene: THREE.Scene, cardInsideScene: THREE.Scene,\r\n        position: THREE.Vector3, rotation: THREE.Euler,\r\n        shape: TardisCardShape = TardisCardShape.RECT,\r\n        reflectionScene: THREE.Scene | null = null, reflectionColor: number = 0xff0000\r\n        ) {\r\n        this.stencilId = stencilId\r\n        this.height = height\r\n        this.width = width\r\n        if (shape == TardisCardShape.RECT) {\r\n            this.cardGeometry = new THREE.PlaneGeometry(width, height)\r\n        }\r\n        else {\r\n            this.cardGeometry = new THREE.CircleGeometry(width, 64)\r\n        }\r\n        this.cardMaterial = new THREE.MeshBasicMaterial({\r\n            color: 0xf0f0f0,\r\n            // colorWrite: false,\r\n            stencilWrite: true,\r\n            stencilRef: stencilId,\r\n            stencilZPass: THREE.ReplaceStencilOp,  // write if the depth buffer test passes\r\n            depthWrite: false\r\n        })\r\n        this.cardMesh = new THREE.Mesh(this.cardGeometry, this.cardMaterial)\r\n        this.cardMesh['tardis'] = this\r\n        this.cardMesh.position.copy(position)\r\n        this.cardMesh.rotation.copy(rotation)\r\n        this.cardOutsideScene = cardOutsideScene\r\n        this.cardInsideScene = cardInsideScene\r\n        this.cardOutsideScene.add(this.cardMesh)\r\n        this.isFocused = false\r\n        this.frontWallGeom = new THREE.BufferGeometry()\r\n        this.frontWallMesh = new THREE.Mesh()\r\n\r\n        if (reflectionScene != null) {\r\n            var cardReflectionMesh = new THREE.Mesh().copy(this.cardMesh)\r\n            cardReflectionMesh.material = new THREE.MeshBasicMaterial({\r\n                color: reflectionColor\r\n            })\r\n            reflectionScene.add(cardReflectionMesh)\r\n        }\r\n    }\r\n    /**\r\n     * add group of objects to card that acts as contents that COULD BE VISIBLE FROM THE OUTSIDE\r\n     * @param group\r\n     */\r\n    addVisibleObjectGroup(group: THREE.Group) {\r\n        this._recursiveGetGroupProperty(group, (cardMaterial) => {\r\n            cardMaterial\r\n            cardMaterial.stencilWrite = true\r\n            cardMaterial.stencilRef = this.stencilId\r\n            cardMaterial.stencilFunc = THREE.EqualStencilFunc\r\n            // cardMaterial.depthTest = false\r\n        })\r\n        this.cardOutsideScene.add(group)\r\n    }\r\n    _recursiveGetGroupProperty( group: THREE.Group, setFunc: { (cardMat: THREE.Material): any } ) {\r\n        group.children.forEach(v => {\r\n            if (v instanceof THREE.Mesh) {\r\n                if (v.material instanceof THREE.Material) {\r\n                    setFunc(v.material)\r\n                }\r\n                else if (v.material instanceof Array) {\r\n                    v.material.forEach(mat => {\r\n                        setFunc(mat)\r\n                    })\r\n                }\r\n            }\r\n            else if (v instanceof THREE.Group) {\r\n                this._recursiveGetGroupProperty(v, setFunc)\r\n            }\r\n        })\r\n    }\r\n    addFrontWall(thickness: number = 10, material: THREE.Material | undefined = undefined) {\r\n        const positions = [\r\n            new THREE.Vector3(-this.width/2, -this.height/2, 0),\r\n            new THREE.Vector3(-this.width/2,  this.height/2, 0),\r\n            new THREE.Vector3( this.width/2,  this.height/2, 0),\r\n            new THREE.Vector3( this.width/2, -this.height/2, 0),\r\n            new THREE.Vector3(-this.width/2, -this.height/2, -thickness),\r\n            new THREE.Vector3(-this.width/2,  this.height/2, -thickness),\r\n            new THREE.Vector3( this.width/2,  this.height/2, -thickness),\r\n            new THREE.Vector3( this.width/2, -this.height/2, -thickness)\r\n        ]\r\n\r\n        const indices = [\r\n            1, 0, 4,\r\n            5, 1, 4,\r\n            2, 1, 5,\r\n            6, 2, 5,\r\n            3, 2, 6,\r\n            7, 3, 6,\r\n            0, 3, 7,\r\n            4, 0, 7\r\n        ]\r\n\r\n        const points: Array<THREE.Vector3> = []\r\n        indices.forEach(i => {\r\n            let tv = new THREE.Vector3()\r\n            // tv.multiplyScalar(100)\r\n            tv.copy(positions[i])\r\n            points.push(tv)\r\n        })\r\n        this.frontWallGeom.setFromPoints(points)\r\n        this.frontWallGeom.computeVertexNormals()\r\n        const frontWallMat = (material == undefined) ? new THREE.MeshPhongMaterial({\r\n            color: 0xa0a0a0,\r\n        }) : material\r\n        frontWallMat.stencilWrite = true\r\n        frontWallMat.stencilRef = this.stencilId\r\n        frontWallMat.stencilFunc = THREE.EqualStencilFunc\r\n        this.frontWallMesh = new THREE.Mesh(\r\n            this.frontWallGeom,\r\n            frontWallMat\r\n        )\r\n        this.frontWallMesh.position.copy(this.cardMesh.position)\r\n        this.cardOutsideScene.add(this.frontWallMesh)\r\n    }\r\n    addSkybox(textureCube: THREE.CubeTexture) {\r\n        var [vs, fs] = loadShader('CardSkyboxShader')\r\n        var uniforms = \r\n        {\r\n            \"tCube\":            { type: \"t\", value: textureCube }\r\n        }\r\n        var customMaterial = new THREE.ShaderMaterial( \r\n            {\r\n                uniforms:       uniforms,\r\n                vertexShader:   vs,\r\n                fragmentShader: fs,\r\n                stencilWrite: true,\r\n                stencilRef: this.stencilId,\r\n                stencilZPass: THREE.ReplaceStencilOp,  // write if the depth buffer test passes\r\n                depthWrite: false,\r\n            }\r\n        )\r\n        this.cardMaterial = customMaterial\r\n        this.cardMesh.material = this.cardMaterial\r\n    }\r\n}","import { Vector3, Object3D } from 'three'\r\n\r\nexport class DampingObjectController {\r\n    damp: number\r\n    attract: number\r\n    object: Object3D\r\n    velocity: Vector3\r\n    childObjects: Array<Object3D>\r\n    constructor(object: Object3D, damp: number = 0.5, attract: number = 0.5) {\r\n        this.damp = damp\r\n        this.attract = attract\r\n        this.object = object\r\n        this.velocity = new Vector3()\r\n        this.childObjects = []\r\n    }\r\n    addChildObj(object: Object3D) {\r\n        this.childObjects.push(object)\r\n    }\r\n    update(target: Vector3) {\r\n        this.velocity.multiplyScalar(this.damp)\r\n        let currentPath = target.sub(this.object.position)\r\n        this.velocity.add(currentPath.multiplyScalar(this.attract))\r\n        this.object.position.add(this.velocity)\r\n        this.childObjects.forEach(obj => {\r\n            obj.position.copy(this.object.position)\r\n            obj.rotation.copy(this.object.rotation)\r\n        })\r\n    }\r\n}\r\n\r\nexport class DampingVector3Controller {\r\n    damp: number\r\n    attract: number\r\n    velocity: Vector3\r\n    currentVec3: Vector3\r\n    constructor(currentVec3: Vector3, damp: number = 0.5, attract: number = 0.5) {\r\n        this.damp = damp\r\n        this.attract = attract\r\n        this.velocity = new Vector3()\r\n        this.currentVec3 = currentVec3\r\n    }\r\n    update(target: Vector3) {\r\n        this.velocity.multiplyScalar(this.damp)\r\n        let currentPath = new Vector3().copy(target).sub(this.currentVec3)\r\n        this.velocity.add(currentPath.multiplyScalar(this.attract))\r\n        this.currentVec3.add(this.velocity)\r\n    }\r\n}\r\n\r\nexport function randn_bm(): number {\r\n    var u = 0, v = 0;\r\n    while(u === 0) u = Math.random(); //Converting [0,1) to (0,1)\r\n    while(v === 0) v = Math.random();\r\n    return Math.sqrt( -2.0 * Math.log( u ) ) * Math.cos( 2.0 * Math.PI * v );\r\n}","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ThreeFrontpageTest.vue?vue&type=style&index=0&id=530f970e&scoped=true&lang=css&\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('div',{ref:\"canvas-container\",attrs:{\"id\":\"canvas-container\"}},[_c('div',{staticClass:\"loading-container\",class:{\n            'loading-container--hidden': _vm.loadingStat.isLoaded,\n            'loading-container--none': _vm.loadingStat.noLoadingStat\n        }},[_c('div',{staticClass:\"load-stat\"},[_c('div',{staticClass:\"load-pgbar\",style:({\n                    width: 100 * _vm.loadingStat.loaded / _vm.loadingStat.total + '%'\n                })}),_c('div',{staticClass:\"load-text\"},[_vm._v(_vm._s(Math.round(100 * _vm.loadingStat.loaded / _vm.loadingStat.total))+\" %\")])])])]),_c('div',{ref:\"dom3d-container\",attrs:{\"id\":\"dom3d-container\"}},[_c('div',{ref:\"dom3d-test\",attrs:{\"id\":\"dom3d-test\"}},[_c('p',[_vm._v(\"HTML element: Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua\")])]),_c('div',{ref:\"dom3d-glass\",attrs:{\"id\":\"dom3d-glass\"},on:{\"click\":_vm.onGlassClick}},[_vm._m(0)])])])}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"dom3d-glass-ball\"},[_c('div',{staticClass:\"dom3d-glass-ball__text\"},[_vm._v(\"html element following object\")])])}]\n\nexport { render, staticRenderFns }","import {\r\n\tClock,\r\n\tColor,\r\n\tMatrix4,\r\n\tMesh,\r\n\tRepeatWrapping,\r\n\tShaderMaterial,\r\n\tTextureLoader,\r\n\tUniformsLib,\r\n\tUniformsUtils,\r\n\tVector2,\r\n\tVector4,\r\n    BufferGeometry,\r\n    Camera,\r\n    Material,\r\n    Group,\r\n    Scene\r\n} from 'three';\r\nimport { Reflector } from 'three/examples/jsm/objects/Reflector'\r\nimport { Refractor } from 'three/examples/jsm/objects/Refractor'\r\nimport { Water2Options } from 'three/examples/jsm/objects/Water2'\r\n/**\r\n * References:\r\n *\thttps://github.com/mrdoob/three.js/blob/dev/examples/jsm/objects/Water2.js\r\n *\r\n */\r\n\r\nclass SQWater extends Mesh {\r\n\r\n    material: ShaderMaterial\r\n\r\n\tconstructor( geometry: BufferGeometry, reflectionScene: Scene, options: Water2Options = {} ) {\r\n\r\n\t\tsuper( geometry );\r\n\r\n\t\tconst scope = this;\r\n\r\n\t\tconst color = ( options.color !== undefined ) ? new Color( options.color ) : new Color( 0xFFFFFF );\r\n\t\tconst textureWidth = options.textureWidth || 512;\r\n\t\tconst textureHeight = options.textureHeight || 512;\r\n\t\tconst clipBias = options.clipBias || 0;\r\n\t\tconst flowDirection = options.flowDirection || new Vector2( 1, 0 );\r\n\t\tconst flowSpeed = options.flowSpeed || 0.01;\r\n\t\tconst reflectivity = options.reflectivity || 0.5;\r\n\t\tconst scale = options.scale || 1;\r\n\t\tconst shader = WaterShader;\r\n\r\n\t\tconst textureLoader = new TextureLoader();\r\n\r\n\t\tconst normalMap0 = options.normalMap0 || textureLoader.load( './water/Water_1_M_Normal.jpg' );\r\n\t\tconst normalMap1 = options.normalMap1 || textureLoader.load( './water/Water_2_M_Normal.jpg' );\r\n\r\n\t\tconst cycle = 0.15; // a cycle of a flow map phase\r\n\t\tconst halfCycle = cycle * 0.5;\r\n\t\tconst textureMatrix = new Matrix4();\r\n\t\tconst clock = new Clock();\r\n        this.material = new ShaderMaterial()\r\n\t\t// internal components\r\n\r\n\t\tconst reflector = new Reflector( geometry, {\r\n\t\t\ttextureWidth: textureWidth,\r\n\t\t\ttextureHeight: textureHeight,\r\n\t\t\tclipBias: clipBias\r\n\t\t} );\r\n\r\n\t\treflector.matrixAutoUpdate = false\r\n\r\n\t\t// material\r\n\r\n\t\tthis.material = new ShaderMaterial( {\r\n\t\t\tuniforms: UniformsUtils.merge( [\r\n\t\t\t\tUniformsLib[ 'fog' ],\r\n\t\t\t\tshader.uniforms\r\n\t\t\t] ),\r\n\t\t\tvertexShader: shader.vertexShader,\r\n\t\t\tfragmentShader: shader.fragmentShader,\r\n\t\t\ttransparent: true,\r\n\t\t\tfog: true\r\n\t\t} );\r\n\r\n        this.material.uniforms[ 'flowDirection' ].value = flowDirection\r\n\r\n\t\t// maps\r\n\r\n\t\tnormalMap0.wrapS = normalMap0.wrapT = RepeatWrapping;\r\n\t\tnormalMap1.wrapS = normalMap1.wrapT = RepeatWrapping;\r\n\r\n\t\tthis.material.uniforms[ 'tReflectionMap' ].value = reflector.getRenderTarget().texture;\r\n\t\tthis.material.uniforms[ 'tNormalMap0' ].value = normalMap0;\r\n\t\tthis.material.uniforms[ 'tNormalMap1' ].value = normalMap1;\r\n\r\n\t\t// water\r\n\r\n\t\tthis.material.uniforms[ 'reflectivity' ].value = reflectivity;\r\n\t\tthis.material.uniforms[ 'textureMatrix' ].value = textureMatrix;\r\n\r\n\t\t// inital values\r\n\r\n\t\tthis.material.uniforms[ 'config' ].value.x = 0; // flowMapOffset0\r\n\t\tthis.material.uniforms[ 'config' ].value.y = halfCycle; // flowMapOffset1\r\n\t\tthis.material.uniforms[ 'config' ].value.z = halfCycle; // halfCycle\r\n\t\tthis.material.uniforms[ 'config' ].value.w = scale; // scale\r\n\r\n\t\t// functions\r\n\r\n\t\tfunction updateTextureMatrix( camera: Camera ) {\r\n\r\n\t\t\ttextureMatrix.set(\r\n\t\t\t\t0.5, 0.0, 0.0, 0.5,\r\n\t\t\t\t0.0, 0.5, 0.0, 0.5,\r\n\t\t\t\t0.0, 0.0, 0.5, 0.5,\r\n\t\t\t\t0.0, 0.0, 0.0, 1.0\r\n\t\t\t);\r\n\r\n\t\t\ttextureMatrix.multiply( camera.projectionMatrix );\r\n\t\t\ttextureMatrix.multiply( camera.matrixWorldInverse );\r\n\t\t\ttextureMatrix.multiply( scope.matrixWorld );\r\n\r\n\t\t}\r\n\r\n\t\tfunction updateFlow() {\r\n\r\n\t\t\tconst delta = clock.getDelta();\r\n\t\t\tconst config = scope.material.uniforms[ 'config' ];\r\n\r\n\t\t\tconfig.value.x += flowSpeed * delta; // flowMapOffset0\r\n\t\t\tconfig.value.y = config.value.x + halfCycle; // flowMapOffset1\r\n\r\n\t\t\t// Important: The distance between offsets should be always the value of \"halfCycle\".\r\n\t\t\t// Moreover, both offsets should be in the range of [ 0, cycle ].\r\n\t\t\t// This approach ensures a smooth water flow and avoids \"reset\" effects.\r\n\r\n\t\t\tif ( config.value.x >= cycle ) {\r\n\r\n\t\t\t\tconfig.value.x = 0;\r\n\t\t\t\tconfig.value.y = halfCycle;\r\n\r\n\t\t\t} else if ( config.value.y >= cycle ) {\r\n\r\n\t\t\t\tconfig.value.y = config.value.y - cycle;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t//\r\n\r\n\t\tthis.onBeforeRender = function ( renderer, scene, camera: Camera, geometry: BufferGeometry, material: Material, group: Group ) {\r\n\r\n\t\t\tupdateTextureMatrix( camera );\r\n\t\t\tupdateFlow();\r\n\r\n\t\t\tscope.visible = false;\r\n\r\n\t\t\treflector.matrixWorld.copy( scope.matrixWorld );\r\n\r\n\t\t\treflector.onBeforeRender( renderer, reflectionScene, camera, geometry, material, group );\r\n\r\n\t\t\tscope.visible = true;\r\n\r\n\t\t};\r\n\r\n\t}\r\n\r\n}\r\n\r\nconst WaterShader = {\r\n\r\n\tuniforms: {\r\n\r\n\t\t'reflectivity': {\r\n\t\t\ttype: 'f',\r\n\t\t\tvalue: 0\r\n\t\t},\r\n\r\n\t\t'tReflectionMap': {\r\n\t\t\ttype: 't',\r\n\t\t\tvalue: null\r\n\t\t},\r\n\r\n\t\t'tRefractionMap': {\r\n\t\t\ttype: 't',\r\n\t\t\tvalue: null\r\n\t\t},\r\n\r\n\t\t'tNormalMap0': {\r\n\t\t\ttype: 't',\r\n\t\t\tvalue: null\r\n\t\t},\r\n\r\n\t\t'tNormalMap1': {\r\n\t\t\ttype: 't',\r\n\t\t\tvalue: null\r\n\t\t},\r\n\r\n\t\t'textureMatrix': {\r\n\t\t\ttype: 'm4',\r\n\t\t\tvalue: null\r\n\t\t},\r\n\r\n\t\t'config': {\r\n\t\t\ttype: 'v4',\r\n\t\t\tvalue: new Vector4()\r\n\t\t},\r\n\r\n\t\t'flowDirection': {\r\n            type: 'v2',\r\n            value: new Vector2()\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tvertexShader: /* glsl */`\r\n\r\n\t\t#include <common>\r\n\t\t#include <fog_pars_vertex>\r\n\t\t#include <logdepthbuf_pars_vertex>\r\n\r\n\t\tuniform mat4 textureMatrix;\r\n\r\n\t\tvarying vec4 vCoord;\r\n\t\tvarying vec2 vUv;\r\n\t\tvarying vec3 vToEye;\r\n\r\n\t\tvoid main() {\r\n\r\n\t\t\tvUv = uv;\r\n\t\t\tvCoord = textureMatrix * vec4( position, 1.0 );\r\n\r\n\t\t\tvec4 worldPosition = modelMatrix * vec4( position, 1.0 );\r\n\t\t\tvToEye = cameraPosition - worldPosition.xyz;\r\n\r\n\t\t\tvec4 mvPosition =  viewMatrix * worldPosition; // used in fog_vertex\r\n\t\t\tgl_Position = projectionMatrix * mvPosition;\r\n\r\n\t\t\t#include <logdepthbuf_vertex>\r\n\t\t\t#include <fog_vertex>\r\n\r\n\t\t}`,\r\n\r\n\tfragmentShader: /* glsl */`\r\n\r\n\t\t#include <common>\r\n\t\t#include <fog_pars_fragment>\r\n\t\t#include <logdepthbuf_pars_fragment>\r\n\r\n\t\tuniform sampler2D tReflectionMap;\r\n\t\tuniform sampler2D tRefractionMap;\r\n\t\tuniform sampler2D tNormalMap0;\r\n\t\tuniform sampler2D tNormalMap1;\r\n\r\n\t\tuniform vec2 flowDirection;\r\n\r\n\t\tuniform float reflectivity;\r\n\t\tuniform vec4 config;\r\n\r\n\t\tvarying vec4 vCoord;\r\n\t\tvarying vec2 vUv;\r\n\t\tvarying vec3 vToEye;\r\n\r\n\t\tvoid main() {\r\n\r\n\t\t\t#include <logdepthbuf_fragment>\r\n\r\n\t\t\tfloat flowMapOffset0 = config.x;\r\n\t\t\tfloat flowMapOffset1 = config.y;\r\n\t\t\tfloat halfCycle = config.z;\r\n\t\t\tfloat scale = config.w;\r\n\r\n\t\t\tvec3 toEye = normalize( vToEye );\r\n\r\n\t\t\t// determine flow direction\r\n\t\t\tvec2 flow;\r\n\t\t\tflow = flowDirection;\r\n\t\t\tflow.x *= - 1.0;\r\n\r\n\t\t\t// sample normal maps (distort uvs with flowdata)\r\n\t\t\tvec4 normalColor0 = texture2D( tNormalMap0, ( vUv * scale ) + flow * flowMapOffset0 );\r\n\t\t\tvec4 normalColor1 = texture2D( tNormalMap1, ( vUv * scale ) + flow * flowMapOffset1 );\r\n\r\n\t\t\t// linear interpolate to get the final normal color\r\n\t\t\tfloat flowLerp = abs( halfCycle - flowMapOffset0 ) / halfCycle;\r\n\t\t\tvec4 normalColor = mix( normalColor0, normalColor1, flowLerp );\r\n\r\n\t\t\t// calculate normal vector\r\n\t\t\tvec3 normal = normalize( vec3( normalColor.r * 2.0 - 1.0, normalColor.b,  normalColor.g * 2.0 - 1.0 ) );\r\n\r\n\t\t\t// calculate the fresnel term to blend reflection and refraction maps\r\n\t\t\tfloat theta = max( dot( toEye, normal ), 0.0 );\r\n\t\t\tfloat reflectance = reflectivity + ( 1.0 - reflectivity ) * pow( ( 1.0 - theta ), 5.0 );\r\n            reflectance = pow(reflectance + 0.3, 4.0);\r\n            reflectance = floor(reflectance *  2.0) / 2.0;\r\n            vec4 refractColor = vec4(1.0);\r\n\r\n\t\t\t// calculate final uv coords\r\n\t\t\tvec3 coord = vCoord.xyz / vCoord.w;\r\n\t\t\tvec2 uv = coord.xy + coord.z * normal.xz * 0.05;\r\n\r\n\t\t\tvec4 reflectColor = texture2D( tReflectionMap, vec2( 1.0 - uv.x, uv.y ) );\r\n\r\n\t\t\tgl_FragColor = mix(refractColor, reflectColor, reflectance);\r\n\r\n\t\t\t#include <tonemapping_fragment>\r\n\t\t\t#include <encodings_fragment>\r\n\t\t\t#include <fog_fragment>\r\n\r\n\t\t}`\r\n\r\n};\r\n\r\nexport { SQWater };","import * as TWEEN from '@tweenjs/tween.js'\r\nimport * as THREE from 'three'\r\n// import store from '@/store'\r\nimport * as GEOM from '../GeomUtils'\r\n\r\nclass TweenAnimController {\r\n    animationObjectCount: number\r\n    requestId: number\r\n    constructor() {\r\n        this.animationObjectCount = 0\r\n        this.requestId = -1\r\n    }\r\n    addTweenAnimObject() {\r\n        if(this.animationObjectCount <= 0) {\r\n            this.startAnim()\r\n        }\r\n        this.animationObjectCount ++\r\n    }\r\n    removeTweenAnimObject() {\r\n        if (this.animationObjectCount <= 0) {\r\n            return\r\n        }\r\n        if(this.animationObjectCount == 1) {\r\n            this.stopAnim()\r\n        }\r\n        this.animationObjectCount --\r\n    }\r\n    loopAnim = () => {\r\n        TWEEN.update()\r\n        if (this.requestId >= 0) {\r\n            this.requestId = window.requestAnimationFrame(this.loopAnim)\r\n        }\r\n    }\r\n    startAnim = () => {\r\n        if (this.requestId < 0) {\r\n            this.requestId = window.requestAnimationFrame(this.loopAnim)\r\n        }\r\n    }\r\n    stopAnim = () => {\r\n        if (this.requestId >= 0) {\r\n            window.cancelAnimationFrame(this.requestId)\r\n            this.requestId = -1\r\n        }\r\n    }\r\n    tweenNumber(\r\n            fromValue: number,\r\n            toValue: number,\r\n            onUpdateFunc: (value: number) => any,\r\n            onCompleteFunc: (value: number) => any,\r\n            duration: number = 1000,\r\n            easing: (amount: number) => number = TWEEN.Easing.Quadratic.InOut\r\n        ): void {\r\n        const v = { a: fromValue }\r\n        this.addTweenAnimObject()\r\n        new TWEEN.Tween(v)\r\n            .to({ a: toValue }, duration)\r\n            .easing(easing)\r\n            .onUpdate(() => onUpdateFunc(v.a))\r\n            .onComplete(() => {\r\n                this.removeTweenAnimObject()\r\n                onCompleteFunc(v.a)\r\n            }).start()\r\n    }\r\n    tweenVector2(\r\n        fromValue: GEOM.Vector2,\r\n        toValue: GEOM.Vector2,\r\n        onUpdateFunc: (x: number, y: number) => any,\r\n        onCompleteFunc: (x: number, y: number) => any,\r\n        duration: number = 1000,\r\n        easing: (amount: number) => number = TWEEN.Easing.Quadratic.InOut\r\n    ): void {\r\n        const v1 = { x: fromValue.x, y: fromValue.y }\r\n        const v2 = { x: toValue.x, y: toValue.y }\r\n        this.addTweenAnimObject()\r\n        new TWEEN.Tween(v1)\r\n            .to(v2, duration)\r\n            .easing(easing)\r\n            .onUpdate(() => onUpdateFunc(v1.x, v1.y))\r\n            .onComplete(() => {\r\n                this.removeTweenAnimObject()\r\n                onCompleteFunc(v1.x, v1.y)\r\n            }).start()\r\n    }\r\n    tweenVector3(\r\n        fromValue: GEOM.Vector3,\r\n        toValue: GEOM.Vector3,\r\n        onUpdateFunc: (x: number, y: number, z: number) => any,\r\n        onCompleteFunc: (x: number, y: number, z: number) => any,\r\n        duration: number = 1000,\r\n        easing: (amount: number) => number = TWEEN.Easing.Quadratic.InOut\r\n    ): void {\r\n        const v1 = { x: fromValue.x, y: fromValue.y, z: fromValue.z }\r\n        const v2 = { x: toValue.x, y: toValue.y, z: toValue.z }\r\n        this.addTweenAnimObject()\r\n        new TWEEN.Tween(v1)\r\n            .to(v2, duration)\r\n            .easing(easing)\r\n            .onUpdate(() => onUpdateFunc(v1.x, v1.y, v1.z))\r\n            .onComplete(() => {\r\n                this.removeTweenAnimObject()\r\n                onCompleteFunc(v1.x, v1.y, v1.z)\r\n            }).start()\r\n    }\r\n    tweenEuler(\r\n        fromValue: THREE.Euler,\r\n        toValue: THREE.Euler,\r\n        onUpdateFunc: (eu: THREE.Euler) => any,\r\n        onCompleteFunc: (eu: THREE.Euler) => any,\r\n        duration: number = 1000,\r\n        easing: (amount: number) => number = TWEEN.Easing.Quadratic.InOut\r\n    ): void {\r\n        const v1 = { x: fromValue.x, y: fromValue.y, z: fromValue.z }\r\n        const v2 = { x: toValue.x, y: toValue.y, z: toValue.z }\r\n        this.addTweenAnimObject()\r\n        new TWEEN.Tween(v1)\r\n            .to(v2, duration)\r\n            .easing(easing)\r\n            .onUpdate(() => onUpdateFunc(new THREE.Euler(v1.x, v1.y, v1.z)))\r\n            .onComplete(() => {\r\n                this.removeTweenAnimObject()\r\n                onCompleteFunc(new THREE.Euler(v1.x, v1.y, v1.z))\r\n            }).start()\r\n    }\r\n    tweenThreeVector3(\r\n        fromValue: THREE.Vector3,\r\n        toValue: THREE.Vector3,\r\n        onUpdateFunc: (eu: THREE.Vector3) => any,\r\n        onCompleteFunc: (eu: THREE.Vector3) => any,\r\n        duration: number = 1000,\r\n        easing: (amount: number) => number = TWEEN.Easing.Quadratic.InOut\r\n    ): void {\r\n        const v1 = { x: fromValue.x, y: fromValue.y, z: fromValue.z }\r\n        const v2 = { x: toValue.x, y: toValue.y, z: toValue.z }\r\n        this.addTweenAnimObject()\r\n        new TWEEN.Tween(v1)\r\n            .to(v2, duration)\r\n            .easing(easing)\r\n            .onUpdate(() => onUpdateFunc(new THREE.Vector3(v1.x, v1.y, v1.z)))\r\n            .onComplete(() => {\r\n                this.removeTweenAnimObject()\r\n                onCompleteFunc(new THREE.Vector3(v1.x, v1.y, v1.z))\r\n            }).start()\r\n    }\r\n}\r\n\r\nconst controller = new TweenAnimController()\r\n\r\nexport { controller }","import * as THREE from 'three'\r\nimport { controller } from '../AnimUtils/TweenUtils'\r\nimport { loadShader } from './ShaderLoader';\r\n\r\nexport interface CarouselOptions {\r\n    numOfVisiblePics: number;\r\n    planeWidth?: number;\r\n    planeHeight?: number;\r\n    planeGap?: number;\r\n    carouselArrayRadius?: number\r\n}\r\n\r\ninterface CarouselPlaneUniforms {\r\n    vColor: { type: string, value: THREE.Color };\r\n    vTextures: { type: string, value: Array<THREE.Texture | undefined> };\r\n    vTextureMix: { type: string, value: number };\r\n}\r\n\r\nclass CarouselPlane {\r\n    index: number\r\n    mesh: THREE.Mesh<THREE.PlaneBufferGeometry, THREE.ShaderMaterial>\r\n    uniforms: CarouselPlaneUniforms\r\n    textureList: Array<THREE.Texture | undefined>\r\n    isPushingTexture: Boolean\r\n    constructor(index: number, mesh: THREE.Mesh<THREE.PlaneBufferGeometry, THREE.ShaderMaterial>, uniforms: CarouselPlaneUniforms) {\r\n        this.index = index\r\n        this.mesh = mesh\r\n        this.uniforms = uniforms\r\n        this.mesh = mesh\r\n        this.textureList = []\r\n        this.isPushingTexture = false\r\n    }\r\n    pushNewTexture(newTexture: THREE.Texture) {\r\n        if (this.textureList.length == 0) {\r\n            this.textureList.push(undefined, newTexture)\r\n        }\r\n        else if (this.textureList.length == 1) {\r\n            this.textureList.push(newTexture)\r\n        }\r\n        else {\r\n            this.textureList.splice(1, this.textureList.length-2)\r\n            this.textureList.push(newTexture)\r\n        }\r\n        if (this.isPushingTexture == false) {\r\n            this.recPushTexture()\r\n        }\r\n    }\r\n    recPushTexture() {\r\n        if (this.textureList.length <= 1) {\r\n            this.isPushingTexture = false\r\n            return\r\n        }\r\n        this.isPushingTexture = true\r\n        if (this.textureList.length == 2) {\r\n            this.uniforms.vTextureMix.value = 0\r\n            // this.uniforms.vTexture1.value = undefined\r\n            // this.uniforms.vTexture2.value = undefined\r\n            this.uniforms.vTextures.value[0] = this.textureList[0]\r\n            this.uniforms.vTextures.value[1] = this.textureList[1]\r\n            // this.textureList.splice(0, 1)\r\n            this.isPushingTexture = false\r\n            controller.tweenNumber(0, 1, (v) => {\r\n                this.uniforms.vTextureMix.value = v\r\n            },\r\n            () => {\r\n                this.uniforms.vTextures.value[0] = this.textureList[1]\r\n                this.uniforms.vTextures.value[1] = this.textureList[1]\r\n                this.uniforms.vTextureMix.value = 1\r\n                this.textureList.splice(0, 1)\r\n                this.recPushTexture()\r\n            }, 500)\r\n        }\r\n    }\r\n}\r\n\r\nexport class Carousel extends THREE.Group {\r\n    numOfVisiblePics: number\r\n    rotateNode: THREE.Group\r\n    isRotating: Boolean\r\n    planes: Array<CarouselPlane>\r\n    planeWidth: number\r\n    planeHeight: number\r\n    planeGap: number\r\n    preloadImgs: { [key: string]: THREE.Texture }\r\n    maxPreloadImgCount: number\r\n    carouselArrayRadius: number\r\n    carouselArrayAngle: number\r\n    currentCenter: number\r\n    constructor(options: CarouselOptions = { numOfVisiblePics: 3 }) {\r\n\r\n        super()\r\n\r\n        this.isRotating = false\r\n        this.rotateNode = new THREE.Group()\r\n        this.add(this.rotateNode)\r\n        this.currentCenter = 0\r\n\r\n        this.numOfVisiblePics = options.numOfVisiblePics\r\n        this.planes = []\r\n        this.planeWidth = options.planeWidth || 50\r\n        this.planeHeight = options.planeHeight || 50\r\n        this.planeGap = options.planeGap || 10\r\n        this.preloadImgs = {}\r\n        this.maxPreloadImgCount = this.numOfVisiblePics * 2\r\n        this.carouselArrayRadius = options.carouselArrayRadius || 100\r\n        this.carouselArrayAngle = Math.atan((this.planeWidth + this.planeGap) / (this.carouselArrayRadius * 2)) * 2\r\n        var [vs, fs] = loadShader('CarouselBasicShader')\r\n        for (let i = 0; i < this.numOfVisiblePics; i++) {\r\n            const tempUniforms = {\r\n                vColor: { type: 'c', value: new THREE.Color(0xff0000) },\r\n                vTextures: { type: 'tv', value: [ undefined, undefined ] },\r\n                vTextureMix: { type: 'f', value: 1 },\r\n            }\r\n            const tempPlane = new THREE.Mesh(\r\n                new THREE.PlaneBufferGeometry(this.planeWidth, this.planeHeight, 1, 1),\r\n                new THREE.ShaderMaterial({\r\n                    uniforms : tempUniforms,\r\n                    vertexShader    : vs,\r\n                    fragmentShader  : fs\r\n                })\r\n            )\r\n            let offset = (i - (this.numOfVisiblePics - 1) / 2)\r\n            tempPlane.rotation.y = -(offset * this.carouselArrayAngle)\r\n            tempPlane.position.x = this.carouselArrayRadius * Math.sin(offset * this.carouselArrayAngle)\r\n            tempPlane.position.z = -this.carouselArrayRadius * Math.cos(offset * this.carouselArrayAngle)\r\n            this.planes.push(new CarouselPlane(i, tempPlane, tempUniforms))\r\n            this.rotateNode.add(tempPlane)\r\n        }\r\n        this.planes.forEach(plane => {\r\n            this.__imgSrcToTex(`https://picsum.photos/id/${Math.ceil(Math.random() * 50)}/200/200`).then((v) => {\r\n                plane.pushNewTexture(v)\r\n            })\r\n        })\r\n    }\r\n\r\n    clickToChangeTex(raycaster: THREE.Raycaster, getImgSrcFunc: (carouselIndex: number) => string) {\r\n        let imgMeshes = this.planes.map((v) => v.mesh)\r\n        let intersects = raycaster.intersectObjects(imgMeshes)\r\n        if (intersects.length == 1) {\r\n            const intersectObj = intersects[0].object\r\n            if (intersectObj instanceof THREE.Mesh) {\r\n                let intersectIndex = imgMeshes.indexOf(intersectObj)\r\n                let src = getImgSrcFunc(intersectIndex)\r\n                this.__imgSrcToTex(src).then((v) => {\r\n                    this.planes[intersectIndex].pushNewTexture(v)\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    clickToRotate(raycaster: THREE.Raycaster, getImgSrcFunc: (carouselIndex: number) => string) {\r\n        let imgMeshes = this.planes.map((v) => v.mesh)\r\n        let intersects = raycaster.intersectObjects(imgMeshes)\r\n        if (intersects.length == 1) {\r\n            const intersectObj = intersects[0].object\r\n            if (intersectObj instanceof THREE.Mesh) {\r\n                let intersectIndex = imgMeshes.indexOf(intersectObj)\r\n                let step = this.planes[intersectIndex].index - this.currentCenter - Math.floor(this.planes.length / 2)\r\n                if (step < 0) {\r\n                    this.moveLeft(-step, getImgSrcFunc)\r\n                }\r\n                else if (step > 0) {\r\n                    this.moveRight(step, getImgSrcFunc)\r\n                }\r\n            }\r\n        }\r\n    }\r\n    \r\n    moveLeft(moveStep: number = 1, getImgSrcFunc: (carouselIndex: number) => string) {\r\n        if (this.isRotating) {\r\n            return\r\n        }\r\n        this.isRotating = true\r\n        // move rightmost img to leftmost, change index, rotate rotateNode\r\n        for (let i = 0; i < moveStep; i++) {\r\n            this.planes.sort((v1, v2) => v2.index - v1.index)\r\n            const rightmostImg = this.planes[0]\r\n            rightmostImg.index = this.planes[this.planes.length - 1].index - 1\r\n            let offset = (rightmostImg.index - (this.numOfVisiblePics - 1) / 2)\r\n            rightmostImg.mesh.rotation.y = -(offset * this.carouselArrayAngle)\r\n            rightmostImg.mesh.position.x = this.carouselArrayRadius * Math.sin(offset * this.carouselArrayAngle)\r\n            rightmostImg.mesh.position.z = -this.carouselArrayRadius * Math.cos(offset * this.carouselArrayAngle)\r\n            let src = getImgSrcFunc(rightmostImg.index)\r\n            this.__imgSrcToTex(src).then((v) => {\r\n                rightmostImg.pushNewTexture(v)\r\n            })\r\n        }\r\n        controller.tweenNumber(0, moveStep, (v) => {\r\n            let tempRotationPosition = this.carouselArrayAngle * (this.currentCenter - v)\r\n            this.rotateNode.rotation.y = tempRotationPosition\r\n        }, () => {\r\n            this.currentCenter -= moveStep\r\n            this.isRotating = false\r\n        }, 500)\r\n    }\r\n\r\n    moveRight(moveStep: number = 1, getImgSrcFunc: (carouselIndex: number) => string) {\r\n        if (this.isRotating) {\r\n            return\r\n        }\r\n        this.isRotating = true\r\n        // move leftmost img to rightmost, change index, rotate rotateNode\r\n        for (let i = 0; i < moveStep; i++) {\r\n            this.planes.sort((v1, v2) => v1.index - v2.index)\r\n            const leftmostImg = this.planes[0]\r\n            leftmostImg.index = this.planes[this.planes.length - 1].index + 1\r\n            let offset = (leftmostImg.index - (this.numOfVisiblePics - 1) / 2)\r\n            leftmostImg.mesh.rotation.y = -(offset * this.carouselArrayAngle)\r\n            leftmostImg.mesh.position.x = this.carouselArrayRadius * Math.sin(offset * this.carouselArrayAngle)\r\n            leftmostImg.mesh.position.z = -this.carouselArrayRadius * Math.cos(offset * this.carouselArrayAngle)\r\n            let src = getImgSrcFunc(leftmostImg.index)\r\n            this.__imgSrcToTex(src).then((v) => {\r\n                leftmostImg.pushNewTexture(v)\r\n            })\r\n        }\r\n        controller.tweenNumber(0, moveStep, (v) => {\r\n            let tempRotationPosition = this.carouselArrayAngle * (this.currentCenter + v)\r\n            this.rotateNode.rotation.y = tempRotationPosition\r\n        }, () => {\r\n            this.currentCenter += moveStep\r\n            this.isRotating = false\r\n        }, 500)\r\n    }\r\n\r\n\r\n    async __imgSrcToTex(imgSrc: string): Promise<THREE.Texture> {\r\n        const self = this\r\n        return new Promise<THREE.Texture>((resolve, reject) => {\r\n            if (self.preloadImgs[imgSrc]) {\r\n                resolve(self.preloadImgs[imgSrc])\r\n            }\r\n            let imageLoader = new THREE.ImageLoader()\r\n            imageLoader.setCrossOrigin( 'anonymous' ) // TODO: debug\r\n            imageLoader.load(imgSrc, (tempImageElement) => {\r\n                let texture = new THREE.Texture( tempImageElement )\r\n                texture.needsUpdate = true\r\n                self.preloadImgs[imgSrc] = texture\r\n\r\n                // dispose textures\r\n                if (Object.keys(self.preloadImgs).length >= self.maxPreloadImgCount) {\r\n                    // remove an unused texture\r\n                    for (let k in self.preloadImgs) {\r\n                        let imgTex = self.preloadImgs[k]\r\n                        let canRemoveImg = true\r\n                        for (let planeIndex = 0; planeIndex < self.planes.length; planeIndex ++) {\r\n                            if (self.planes[planeIndex].uniforms.vTextures.value.indexOf(imgTex) > -1) {\r\n                                canRemoveImg = false\r\n                                break\r\n                            }\r\n                        }\r\n                        if (canRemoveImg) {\r\n                            // imgTex is not in use in any carousel card\r\n                            imgTex.dispose()\r\n                            delete self.preloadImgs[k]\r\n                            break\r\n                        }\r\n                    }\r\n                }\r\n                resolve(texture)\r\n            })\r\n        })\r\n    }\r\n}","import * as THREE from 'three'\r\nimport { EffectComposer } from 'three/examples/jsm/postprocessing/EffectComposer'\r\nimport { RenderPass } from 'three/examples/jsm/postprocessing/RenderPass'\r\nimport { SQWater } from './SQWater'\r\n// import { ClearPass } from 'three/examples/jsm/postprocessing/ClearPass'\r\n// import FresnelShader from './FresnelShader'\r\nimport { Stats } from 'three-stats'\r\nimport { TardisCard, TardisCardShape } from './TardisCard'\r\nimport { Carousel } from './Carousel'\r\nimport { TDSLoader } from 'three/examples/jsm/loaders/TDSLoader'\r\nimport { CustomCSS3DObject, CustomCSS3DSprite, CustomCSS3DRenderer } from './CustomCSS3DRenderer'\r\nimport { DampingObjectController, DampingVector3Controller } from './Utils'\r\nimport { RefractionObject, RefractionManager } from '../ThreeRealisticRefraction/ThreeRealisticRefraction'\r\nimport { RoundedBoxGeometry } from 'three/examples/jsm/geometries/RoundedBoxGeometry'\r\n// import { TextGeometry } from 'three/examples/jsm/geometries/TextGeometry'\r\n// import { Font } from 'three/examples/jsm/loaders/FontLoader'\r\n// import { BrickManager } from './Brick'\r\nimport { controller } from '../AnimUtils/TweenUtils'\r\nimport { Easing } from '@tweenjs/tween.js'\r\n// import * as GEOM from '../GeomUtils'\r\n\r\nclass FrontPageManager {\r\n    container: HTMLElement\r\n    renderer: THREE.WebGLRenderer\r\n    // controls: OrbitControls\r\n    cardInsideScene: THREE.Scene\r\n    scene: THREE.Scene\r\n    reflectionScene: THREE.Scene\r\n    composer: EffectComposer\r\n    stats: Stats\r\n\r\n    refractionManager: RefractionManager\r\n    glassMesh1Controller: DampingObjectController\r\n\r\n    // cursor position\r\n    mousePosX: number\r\n    mousePosY: number\r\n    pointer: THREE.Vector2\r\n\r\n    // camera\r\n    camera: THREE.PerspectiveCamera\r\n    cameraZPosition: number\r\n    cameraPositionController: DampingVector3Controller\r\n    cameraTargetPosition: THREE.Vector3\r\n    cameraWithMouseMoveFactor: number\r\n    cameraWithMouseRotateFactor: number\r\n\r\n    // cursor light\r\n    cursorLightGroup: THREE.Group\r\n    cursorLight: THREE.PointLight\r\n    cursorLightController: DampingObjectController\r\n\r\n    // intersections\r\n    raycaster: THREE.Raycaster\r\n    intersectTardisCardObjs: Array<THREE.Object3D>\r\n    intersectGlassObjs: Array<THREE.Object3D>\r\n\r\n    // glass intersections\r\n    glassSelected: THREE.Mesh | undefined\r\n    glassIsRotating: Boolean\r\n\r\n    // css\r\n    cssScene: THREE.Scene\r\n    cssRenderer: CustomCSS3DRenderer | undefined\r\n    cssAttachObject: THREE.Mesh\r\n\r\n    // carousel\r\n    carousel1: Carousel\r\n    carousel2: Carousel\r\n\r\n    // loading manager\r\n    loadingManager: THREE.LoadingManager\r\n\r\n    constructor(_container: HTMLElement,\r\n        onLoad?: () => void,\r\n        onProgress?: (url: string, loaded: number, total: number) => void,\r\n        onError?: (url: string) => void\r\n        ) {\r\n\r\n        // *********** basic settings ***********\r\n        this.cameraZPosition = 500\r\n        this.container = _container\r\n        this.camera = new THREE.PerspectiveCamera( 45, window.innerWidth / window.innerHeight, 1, 5000 )\r\n        this.renderer = new THREE.WebGLRenderer( {alpha: true} )\r\n        this.renderer.setClearColor( 0xffffff )\r\n        this.renderer.setPixelRatio( window.devicePixelRatio )\r\n        this.renderer.setSize(window.innerWidth, window.innerHeight)\r\n        this.renderer.domElement.style.position = 'absolute'\r\n        this.renderer.domElement.style.top = '0px'\r\n        this.renderer.domElement.style.left = '0px'\r\n        this.container.appendChild( this.renderer.domElement )\r\n        // TODO: (debug stats)\r\n        this.stats = new Stats()\r\n        this.stats.domElement.style.zIndex = '100'\r\n        this.container.appendChild( this.stats.domElement )\r\n\r\n        this.scene = new THREE.Scene()\r\n        this.cssScene = new THREE.Scene()\r\n        this.cardInsideScene = new THREE.Scene()\r\n        this.reflectionScene = new THREE.Scene()\r\n\r\n        // \r\n        this.loadingManager = new THREE.LoadingManager(() => {\r\n            if (onLoad) {\r\n                onLoad()\r\n            }\r\n        }, (url: string, loaded: number, total: number) => {\r\n            if (onProgress) {\r\n                onProgress(url, loaded, total)\r\n            }\r\n        }, (url) => {\r\n            if (onError) {\r\n                onError(url)\r\n            }\r\n        })\r\n\r\n        // *********** background & env ***********\r\n        const r = './cube1/'\r\n        const urls = [\r\n            r + 'px.jpg', r + 'nx.jpg',\r\n            r + 'py.jpg', r + 'ny.jpg',\r\n            r + 'pz.jpg', r + 'nz.jpg'\r\n        ]\r\n        const textureCube = new THREE.CubeTextureLoader(this.loadingManager).load( urls )\r\n        textureCube.mapping = THREE.CubeRefractionMapping\r\n        // this.scene.background = textureCube\r\n        this.scene.environment = textureCube\r\n\r\n\r\n        // *********** set light ***********\r\n        var light = new THREE.DirectionalLight()\r\n        light.intensity = 0.8\r\n        light.position.x = 80\r\n        light.position.y = 80\r\n        light.position.z = 100\r\n        this.scene.add(light)\r\n\r\n        // *********** refraction objects ***********\r\n        this.refractionManager = new RefractionManager(this.scene, this.container, this.renderer, this.camera)\r\n        var glassMesh1 = new THREE.Mesh(\r\n            new RoundedBoxGeometry(40, 40, 40, 5, 5),\r\n            // new THREE.BoxGeometry(40, 40, 40),\r\n            new THREE.MeshPhongMaterial({})\r\n        )\r\n        // raycast interaction agent with simple shape, to save calculation cost\r\n        var glassMesh1InteractAgent = new THREE.Mesh(new THREE.BoxGeometry(40,40,40), new THREE.MeshBasicMaterial({}))\r\n        glassMesh1InteractAgent.visible = false\r\n        glassMesh1.add(glassMesh1InteractAgent)\r\n\r\n        glassMesh1.rotation.set(1,1,1)\r\n        this.refractionManager.addRefractionMesh(glassMesh1, true, 0x00ff00, 0x4060ff, 1.3, 0.8)\r\n        this.glassMesh1Controller = new DampingObjectController(glassMesh1, 0.2, 0.1)\r\n\r\n\r\n        // *********** composers ***********\r\n        const renderPass1 = new RenderPass(this.scene, this.camera)\r\n        renderPass1.clear = true\r\n        const renderPass2 = new RenderPass(this.cardInsideScene, this.camera)\r\n        renderPass2.clearDepth = true\r\n        renderPass2.clear = false\r\n        this.composer = new EffectComposer(this.renderer, new THREE.WebGLMultisampleRenderTarget(\r\n            this.container.offsetWidth * window.devicePixelRatio,\r\n            this.container.offsetHeight * window.devicePixelRatio\r\n        ))\r\n        // this.composer = new EffectComposer(this.renderer)\r\n        this.composer.addPass(renderPass1)\r\n        this.composer.addPass(renderPass2)\r\n        this.composer.renderTarget1.stencilBuffer = true\r\n        this.composer.renderTarget2.stencilBuffer = true\r\n        this.refractionManager.scene.background = this.composer.renderTarget2.texture\r\n\r\n\r\n        // *********** tardis cards ***********\r\n\r\n        var tardisCardTop = new TardisCard(100, 400, 110,\r\n            this.scene, this.cardInsideScene, new THREE.Vector3(0, 200, 0), new THREE.Euler(), TardisCardShape.RECT,\r\n            null)\r\n        tardisCardTop.addSkybox(textureCube)\r\n        var contentGroupInTardisCardTop = new THREE.Group()\r\n        var titleTexture = new THREE.TextureLoader(this.loadingManager).load( './title.png' )\r\n        var tardisCardTopTitle = new THREE.Mesh(\r\n            new THREE.PlaneBufferGeometry(390, 90, 1, 1),\r\n            new THREE.MeshBasicMaterial({\r\n                color: 0xffffff,\r\n                alphaMap: titleTexture,\r\n                alphaToCoverage: true,\r\n                transparent: true,\r\n            })\r\n        )\r\n        contentGroupInTardisCardTop.add(tardisCardTopTitle)\r\n        contentGroupInTardisCardTop.position.copy(tardisCardTop.cardMesh.position)\r\n        tardisCardTop.addVisibleObjectGroup(contentGroupInTardisCardTop)\r\n        this.cssAttachObject = tardisCardTop.cardMesh\r\n            \r\n        var tardisCard1 = new TardisCard(200, 200, 111,\r\n            this.scene, this.cardInsideScene, new THREE.Vector3(0, 0, 0), new THREE.Euler(), TardisCardShape.RECT,\r\n            this.reflectionScene, 0xc0d0d0)\r\n        \r\n        var diffuseTexture = new THREE.TextureLoader(this.loadingManager).load( './marble/diffuse.jpg' )\r\n        var normalTexture = new THREE.TextureLoader(this.loadingManager).load( './marble/normal.jpg' )\r\n        var specTexture = new THREE.TextureLoader(this.loadingManager).load( './marble/specular.jpg' )\r\n        var texs = [diffuseTexture, normalTexture, specTexture]\r\n        texs.forEach(t => {\r\n            t.wrapS = t.wrapT = THREE.RepeatWrapping\r\n            t.repeat.set(1, 2)\r\n        })\r\n        var contentGroupInTardisCard1 = new THREE.Group()\r\n        // https://github.com/mrdoob/three.js/blob/master/examples/webgl_loader_3ds.html\r\n        const pgnormal = new THREE.TextureLoader(this.loadingManager).load( './jutabag3ds/texture/normal.jpg' )\r\n        const loader = new TDSLoader(this.loadingManager);\r\n        loader.setResourcePath('./jutabag3ds/texture/')\r\n        loader.load( './jutabag3ds/portalgun.3ds', (obj) => {\r\n            if (obj instanceof THREE.Group) {\r\n                obj.traverse( function ( child ) {\r\n                    if ( child instanceof THREE.Mesh ) {\r\n                        console.log(child.material)\r\n                        child.material.color = new THREE.Color(0xffffff)\r\n                        // child.material.map = pgcolor\r\n                        child.material.normalMap = pgnormal\r\n                    }\r\n                } )\r\n                obj.scale.multiplyScalar(80)\r\n                obj.position.x -= 20\r\n                obj.position.y += 10\r\n                obj.position.z -= 80\r\n                obj.rotation.x = -2\r\n                obj.rotation.z = 0.7\r\n                contentGroupInTardisCard1.add(obj)\r\n                \r\n                var tardisCardBackground1 = new THREE.Mesh(\r\n                    new THREE.PlaneBufferGeometry(500, 500, 1, 1),\r\n                    new THREE.MeshPhysicalMaterial({\r\n                        color: 0xccffff,\r\n                        map: diffuseTexture,\r\n                        normalMap: normalTexture,\r\n                        normalScale: new THREE.Vector2(0.1, 0.1),\r\n                        specularColorMap: specTexture,\r\n                        specularIntensity: 4,\r\n                        reflectivity: 1.0,\r\n                        metalness: 0.2,\r\n                        roughness: 0.1,\r\n                        clearcoat: 0.5,\r\n\r\n                    })\r\n                )\r\n                tardisCardBackground1.position.set(0, 0, -150)\r\n                contentGroupInTardisCard1.add(tardisCardBackground1)\r\n                contentGroupInTardisCard1.position.copy(tardisCard1.cardMesh.position)\r\n                tardisCard1.addVisibleObjectGroup(contentGroupInTardisCard1)\r\n            }\r\n            // contentGroupInTardisCard1.add(obj)\r\n        });\r\n\r\n        \r\n        var tardisCard2 = new TardisCard(100, 100, 112, this.scene, this.cardInsideScene, new THREE.Vector3(200, 0, 0), new THREE.Euler(), TardisCardShape.CIRCLE,\r\n        this.reflectionScene, 0xd0c0d0)\r\n        this.carousel1 = new Carousel({\r\n            numOfVisiblePics: 5,\r\n            planeWidth: 80,\r\n            planeHeight: 80,\r\n            carouselArrayRadius: 120\r\n        })\r\n        var diffuseTexture2 = new THREE.TextureLoader(this.loadingManager).load( './painting/crop1_diffuse.png' )\r\n        var normalTexture2 = new THREE.TextureLoader(this.loadingManager).load( './painting/crop1_normal.png' )\r\n        var specTexture2 = new THREE.TextureLoader(this.loadingManager).load( './painting/crop1_specular.png' )\r\n        texs = [diffuseTexture2, normalTexture2, specTexture2]\r\n        var tardisCardBackground = new THREE.Mesh(\r\n            new THREE.PlaneBufferGeometry(500, 500, 1, 1),\r\n            new THREE.MeshPhysicalMaterial({\r\n                map: diffuseTexture2,\r\n                normalMap: normalTexture2,\r\n                specularColorMap: specTexture2,\r\n                normalScale: new THREE.Vector2(0.4, 0.4),\r\n                specularIntensity: 0.2,\r\n                reflectivity: 0.1,\r\n                metalness: 0.1,\r\n                roughness: 0.4\r\n            })\r\n        )\r\n        tardisCardBackground.position.set(0, 0, -150)\r\n        // scene.add(contentInTardisCard)\r\n        var contentGroupInTardisCard2 = new THREE.Group()\r\n        contentGroupInTardisCard2.add(this.carousel1)\r\n        contentGroupInTardisCard2.add(tardisCardBackground)\r\n        contentGroupInTardisCard2.position.copy(tardisCard2.cardMesh.position)\r\n        tardisCard2.addVisibleObjectGroup(contentGroupInTardisCard2)\r\n        \r\n        var tardisCard3 = new TardisCard(100, 100, 113, this.scene, this.cardInsideScene, new THREE.Vector3(-200, 0, 0), new THREE.Euler(), TardisCardShape.CIRCLE,\r\n        this.reflectionScene, 0xa0c090)\r\n        this.carousel2 = new Carousel({\r\n            numOfVisiblePics: 4,\r\n            planeWidth: 70,\r\n            planeHeight: 70,\r\n            carouselArrayRadius: 120\r\n        })\r\n        var diffuseTexture3 = new THREE.TextureLoader(this.loadingManager).load( './painting/crop2_diffuse.png' )\r\n        var normalTexture3 = new THREE.TextureLoader(this.loadingManager).load( './painting/crop2_normal.png' )\r\n        var specTexture3 = new THREE.TextureLoader(this.loadingManager).load( './painting/crop2_specular.png' )\r\n        texs = [diffuseTexture3, normalTexture3]\r\n        // texs.forEach(t => {\r\n        //     t.wrapS = t.wrapT = THREE.RepeatWrapping\r\n        //     t.repeat.set(4, 4)\r\n        // })\r\n        tardisCardBackground = new THREE.Mesh(\r\n            new THREE.PlaneBufferGeometry(500, 500, 1, 1),\r\n            new THREE.MeshPhysicalMaterial({\r\n                color: 0xffff80,\r\n                map: diffuseTexture3,\r\n                normalMap: normalTexture3,\r\n                specularColorMap: specTexture3,\r\n                normalScale: new THREE.Vector2(0.5, 0.5),\r\n                specularIntensity: 0.2,\r\n                reflectivity: 0.8,\r\n                metalness: 0,\r\n                roughness: 0.2,\r\n            })\r\n        )\r\n        tardisCardBackground.position.set(0, 0, -150)\r\n        var contentGroupInTardisCard3 = new THREE.Group()\r\n        contentGroupInTardisCard3.add(this.carousel2)\r\n        contentGroupInTardisCard3.add(tardisCardBackground)\r\n        contentGroupInTardisCard3.position.copy(tardisCard3.cardMesh.position)\r\n        tardisCard3.addVisibleObjectGroup(contentGroupInTardisCard3)\r\n\r\n\r\n        // *********** water ***********\r\n        const waterGeometry = new THREE.PlaneGeometry( 1000, 400 )\r\n        const water = new SQWater( waterGeometry, this.reflectionScene, {\r\n            // color: params.color,\r\n            // scale: params.scale,\r\n            flowDirection: new THREE.Vector2( 1, 1 ),\r\n            textureWidth: 512,\r\n            textureHeight: 512\r\n        } );\r\n\r\n        // water.position.y = 1;\r\n        water.position.z += 200;\r\n        water.position.y -= 110;\r\n        water.rotation.x = Math.PI * - 0.5;\r\n        this.scene.add( water );\r\n\r\n\r\n        // *********** camera movement ***********\r\n        this.cameraTargetPosition = new THREE.Vector3(0, 0, this.cameraZPosition)\r\n        this.camera.position.copy(this.cameraTargetPosition)\r\n        this.camera.lookAt(0, 0, 0)\r\n        this.cameraWithMouseMoveFactor = 0.04\r\n        this.cameraWithMouseRotateFactor = 0.015\r\n        this.cameraPositionController = new DampingVector3Controller(this.camera.position, 0.5, 0.05)\r\n        window.addEventListener('mousemove', e => {\r\n            self.onMouseMove(e)\r\n        })\r\n\r\n\r\n        // *********** cursor light ***********\r\n        this.cursorLightGroup = new THREE.Group()\r\n        this.cursorLight = new THREE.PointLight()\r\n        this.cursorLight.intensity = 1\r\n        this.cursorLight.decay = 1\r\n        this.cursorLight.distance = 200\r\n        this.cursorLight.color = new THREE.Color( 0xaaccff )\r\n        this.cursorLightGroup.add(this.cursorLight)\r\n        this.scene.add(this.cursorLightGroup)\r\n        this.cursorLightController = new DampingObjectController(this.cursorLightGroup, 0.3, 0.1)\r\n        \r\n\r\n        // *********** raycast intersections ***********\r\n        this.raycaster = new THREE.Raycaster()\r\n        this.intersectTardisCardObjs = []\r\n        this.intersectTardisCardObjs.push(tardisCardTop.cardMesh, tardisCard1.cardMesh, tardisCard2.cardMesh, tardisCard3.cardMesh)\r\n        this.intersectGlassObjs = []\r\n        this.glassSelected = undefined\r\n        this.glassIsRotating = false\r\n        this.intersectGlassObjs.push(glassMesh1InteractAgent)\r\n\r\n\r\n        // *********** events ***********\r\n        this.mousePosX = 0\r\n        this.mousePosY = 0\r\n        this.pointer = new THREE.Vector2()\r\n        const self = this\r\n        window.addEventListener( 'resize', () => {\r\n            self.onWindowResize()\r\n        } )\r\n        window.addEventListener( 'click', (e) => {\r\n            self.onClick(e)\r\n        } )\r\n\r\n\r\n        // *********** final animate ***********\r\n        this.animate()\r\n    }\r\n\r\n    animate = () => {\r\n        requestAnimationFrame( this.animate )\r\n        // damping controllers\r\n        this.updatecornerObject()\r\n        this.updateCamera()\r\n        this.updateCursorLight()\r\n        this.render()\r\n        this.stats.update()\r\n    }\r\n\r\n    render()\r\n    {\r\n        this.composer.render()\r\n        this.renderer.clearDepth()\r\n        this.refractionManager.render()\r\n        if (this.cssRenderer) {\r\n            this.cssRenderer.render(this.cssScene, this.camera)\r\n        }\r\n    }\r\n\r\n    onWindowResize() {\r\n        this.camera.aspect = window.innerWidth / window.innerHeight\r\n        this.camera.updateProjectionMatrix()\r\n        this.refractionManager.onWindowResize()\r\n        this.renderer.setSize( window.innerWidth, window.innerHeight )\r\n        this.composer.setSize( window.innerWidth, window.innerHeight )\r\n        if (this.cssRenderer) {\r\n            this.cssRenderer.setSize( window.innerWidth, window.innerHeight )\r\n        }\r\n    }\r\n    \r\n    onMouseMove(e: MouseEvent) {\r\n        this.mousePosX = e.clientX\r\n        this.mousePosY = e.clientY\r\n        this.pointer.x = ( e.clientX / window.innerWidth ) * 2 - 1;\r\n\t\tthis.pointer.y = - ( e.clientY / window.innerHeight ) * 2 + 1;\r\n\r\n        this.raycaster.setFromCamera( this.pointer, this.camera )\r\n        const intersects = this.raycaster.intersectObjects( this.intersectGlassObjs, false )\r\n        if (intersects.length == 1 && !this.glassIsRotating && this.glassSelected !== intersects[0].object.parent) {\r\n            console.log('in')\r\n            this.glassIsRotating = true\r\n            const intersectObj = intersects[0].object.parent\r\n            const refObj = intersectObj ? intersectObj['refractionObject'] : null\r\n            if (intersectObj instanceof THREE.Mesh && refObj instanceof RefractionObject) {\r\n                this.glassSelected = intersectObj\r\n                controller.tweenEuler(this.glassSelected.rotation, new THREE.Euler(1,6,1), (v) => {\r\n                        intersectObj.rotation.copy(v)\r\n                    },\r\n                    () => {this.glassIsRotating = false},\r\n                    500\r\n                )\r\n                controller.tweenNumber(1, 0, (val) => {\r\n                    refObj.refractionMaterialUniforms['absorbColor'].value.b = val\r\n                },\r\n                () => {},\r\n                500)\r\n            }\r\n            // this.glassSelected.rotation.set(1,2,1)\r\n        }\r\n        else if (intersects.length == 0 && !this.glassIsRotating && this.glassSelected !== undefined) {\r\n            console.log('out')\r\n            this.glassIsRotating = true\r\n            let rotateObj = this.glassSelected\r\n            const refObj = this.glassSelected['refractionObject']\r\n            controller.tweenEuler(this.glassSelected.rotation, new THREE.Euler(1,1,1), (v) => {\r\n                rotateObj.rotation.copy(v)\r\n                },\r\n                () => {this.glassIsRotating = false},\r\n                500\r\n            )\r\n            controller.tweenNumber(0, 1, (val) => {\r\n                refObj.refractionMaterialUniforms['absorbColor'].value.b = val\r\n            },\r\n            () => {},\r\n            500)\r\n            this.glassSelected = undefined\r\n        }\r\n    }\r\n\r\n    onClick(e: MouseEvent) {\r\n        if (this.glassSelected) {\r\n            return\r\n        }\r\n        const intersects = this.raycaster.intersectObjects( this.intersectTardisCardObjs, false )\r\n        \r\n        if (intersects.length == 1) {\r\n            const intersectObj = intersects[0]\r\n            controller.tweenThreeVector3(\r\n                this.cameraTargetPosition,\r\n                new THREE.Vector3(\r\n                    intersectObj.object.position.x,\r\n                    intersectObj.object.position.y,\r\n                    this.cameraTargetPosition.z\r\n                ),\r\n                (updatedVec) => {\r\n                    this.cameraTargetPosition.copy(updatedVec)\r\n                },\r\n                () => {},\r\n                750\r\n            )\r\n            this.carousel1.clickToRotate(this.raycaster, (carouselIndex) => {\r\n                console.log('new carousel img index', carouselIndex)\r\n                return `https://picsum.photos/id/${Math.ceil(Math.random() * 50)}/200/200`\r\n            })\r\n            this.carousel2.clickToChangeTex(this.raycaster, (carouselIndex) => {\r\n                console.log('new carousel img index', carouselIndex)\r\n                return `https://picsum.photos/id/${Math.ceil(Math.random() * 50)}/200/200`\r\n            })\r\n            // change carousel\r\n        }\r\n    }\r\n\r\n    getRaycastPos(posX: number, posY: number) {\r\n        let x = (2.0 * posX) / window.innerWidth - 1.0\r\n        let y = 1.0 - (2.0 * posY) / window.innerHeight\r\n        // let z = 1.0\r\n        // let ray_nds = new THREE.Vector3(x, y, z)\r\n        let ray = new THREE.Vector3(x, y, 0.995)\r\n        ray.unproject(this.camera)\r\n        return ray\r\n    }\r\n\r\n    updatecornerObject() {\r\n        let targetPos = this.getRaycastPos(window.innerWidth - 200, window.innerHeight / 2)\r\n        // let lastPos = cornerObject.position\r\n        this.glassMesh1Controller.update(targetPos)\r\n        // let currentPath = targetPos.sub(lastPos)\r\n        // cornerObjectVelocity.multiplyScalar(0.3)\r\n        // cornerObjectVelocity.add(currentPath.multiplyScalar(damp))\r\n        // cornerObject.position.add(cornerObjectVelocity)\r\n    }\r\n\r\n    updateCamera() {\r\n        const relX = window.innerWidth / 2 - this.mousePosX\r\n        const relY = window.innerHeight / 2 - this.mousePosY\r\n        // console.log(this.cameraTargetPosition)\r\n        const dampPos = (new THREE.Vector3(\r\n            -relX * this.cameraWithMouseMoveFactor,\r\n            relY * this.cameraWithMouseMoveFactor,\r\n            0\r\n        )).add(this.cameraTargetPosition)\r\n\r\n        this.cameraPositionController.update(dampPos)\r\n        var vel = this.cameraPositionController.velocity\r\n        this.camera.rotation.x = vel.y * this.cameraWithMouseRotateFactor\r\n        this.camera.rotation.y = -vel.x * this.cameraWithMouseRotateFactor\r\n    }\r\n\r\n    updateCursorLight() {\r\n        if (!isNaN(this.mousePosX) && !isNaN(this.mousePosY)) {\r\n            let targetPos = this.getRaycastPos(this.mousePosX, this.mousePosY)\r\n            let camPosZ = this.camera.position.z\r\n            let targetPosVec = new THREE.Vector3().copy(targetPos)\r\n            targetPosVec = targetPosVec.sub(this.camera.position)\r\n            let newz = -200\r\n            let x = (newz - camPosZ) / targetPosVec.z\r\n            targetPos.copy(this.camera.position)\r\n            targetPosVec.multiplyScalar(x)\r\n            targetPos.add(targetPosVec)\r\n            targetPos.z += 100\r\n            this.cursorLightController.update(targetPos)\r\n            // console.log(targetPos)\r\n        }\r\n    }\r\n\r\n    registerCSSCoordinator(htmlContainer: HTMLElement, htmlElem: HTMLElement, position: THREE.Vector3 = new THREE.Vector3(), scale: number = 1.0): CustomCSS3DObject {\r\n        if (this.cssRenderer == undefined) {\r\n            this.cssRenderer = new CustomCSS3DRenderer(htmlContainer)\r\n            this.cssRenderer.setSize( window.innerWidth, window.innerHeight )\r\n        }\r\n        // controls = new OrbitControls(camera, cssRenderer.domElement)\r\n        const object = new CustomCSS3DObject( htmlElem )\r\n        object.position.copy(position)\r\n        object.scale.multiplyScalar(scale)\r\n        this.cssScene.add(object)\r\n        return object\r\n        // cssCoordinators.push(new ThreeCSSCoordinator(htmlContainer, htmlCamera, htmlElem, camera, position))\r\n    }\r\n\r\n\r\n\r\n    \r\n}\r\n\r\n\r\n\r\nexport {\r\n    FrontPageManager\r\n}","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\r\nimport * as THREE from 'three'\r\nimport Vue from 'vue'\r\nimport { FrontPageManager } from '../scripts/Three/FrontPage'\r\n\r\ntype Data = {\r\n    fpm: FrontPageManager | null,\r\n    loadingStat: {\r\n        loaded: number,\r\n        total: number,\r\n        isLoaded: boolean,\r\n        noLoadingStat: boolean\r\n    }\r\n}\r\n\r\nexport default Vue.extend({\r\n    data(): Data {\r\n        return {\r\n            fpm: null,\r\n            loadingStat: {\r\n                loaded: 1,\r\n                total: 2,\r\n                isLoaded: false,\r\n                noLoadingStat: false\r\n            }\r\n        }\r\n    },\r\n    mounted() {\r\n        const self = this\r\n        if (this.$refs['canvas-container'] instanceof HTMLElement) {\r\n            this.fpm = new FrontPageManager(\r\n                this.$refs['canvas-container'],\r\n                () => {\r\n                    console.log('loaded')\r\n                    self.loadingStat.isLoaded = true\r\n                    setTimeout(() => {\r\n                        self.loadingStat.noLoadingStat = true\r\n                    }, 501)\r\n                },\r\n                (_, loaded, total) => {\r\n                    this.loadingStat.loaded = loaded\r\n                    this.loadingStat.total = total\r\n                },\r\n                (url) => {\r\n                    console.error('failed to load asset: ' + url)\r\n                    self.loadingStat.isLoaded = true\r\n                }\r\n            )\r\n            // ThreeGlassRefraction.initScene(this.$refs['canvas-container'])\r\n            if (this.$refs['dom3d-container'] instanceof HTMLElement && this.$refs['dom3d-glass'] instanceof HTMLElement) {\r\n                const glassCSSObj = this.fpm.registerCSSCoordinator(this.$refs['dom3d-container'], this.$refs['dom3d-glass'], new THREE.Vector3(0, 20, 10))\r\n                glassCSSObj.setFollowObject(this.fpm.glassMesh1Controller.object, new THREE.Vector3())\r\n            }\r\n            if (this.$refs['dom3d-container'] instanceof HTMLElement && this.$refs['dom3d-test'] instanceof HTMLElement) {\r\n                this.fpm.registerCSSCoordinator(this.$refs['dom3d-container'], this.$refs['dom3d-test'], new THREE.Vector3(-200, 110, 0))\r\n            }\r\n        }\r\n    },\r\n    methods: {\r\n        onGlassClick() {\r\n            alert('glass clicked!')\r\n        }\r\n    }\r\n})\r\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--15-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/ts-loader/index.js??ref--15-3!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ThreeFrontpageTest.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--15-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/ts-loader/index.js??ref--15-3!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ThreeFrontpageTest.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./ThreeFrontpageTest.vue?vue&type=template&id=530f970e&scoped=true&\"\nimport script from \"./ThreeFrontpageTest.vue?vue&type=script&lang=ts&\"\nexport * from \"./ThreeFrontpageTest.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./ThreeFrontpageTest.vue?vue&type=style&index=0&id=530f970e&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"530f970e\",\n  null\n  \n)\n\nexport default component.exports","export function loadShader(shaderName: string): Array<string> {\r\n    try {\r\n        var vertexShader = require('./' + shaderName + '/V.glsl')\r\n        var fragShader = require('./' + shaderName + '/F.glsl')\r\n        return [vertexShader, fragShader]\r\n    }\r\n    catch(err) {\r\n        console.error('failed to fetch shader', err)\r\n        return ['', '']\r\n    }\r\n}","var map = {\n\t\"./GlassFrontShader/V.glsl\": \"c444\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"5303\";","var map = {\n\t\"./CardSkyboxShader/V.glsl\": \"8437\",\n\t\"./CarouselBasicShader/V.glsl\": \"f4ce\",\n\t\"./FresnelShader/V.glsl\": \"8c9f\",\n\t\"./GlassFrontShader/V.glsl\": \"c182\",\n\t\"./ParticleShader/V.glsl\": \"b837\",\n\t\"./Refraction2.0/GlassFrontShader/V.glsl\": \"79c3\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"5d16\";","module.exports = \"uniform vec2 resolution;\\r\\nuniform sampler2D tBackground;\\r\\nuniform sampler2D tBackDepth;\\r\\n\\r\\nvarying vec2 vUv;\\r\\nvarying vec3 vNormal;\\r\\nvarying vec3 vCameraRay;\\r\\nvarying vec4 vWorldPosition;\\r\\nvarying mat4 vProjectionMatrix;\\r\\n\\r\\nfloat near = 0.1;\\r\\nfloat far  = 20000.0; \\r\\n\\r\\nfloat LinearizeDepth(float depth) \\r\\n{\\r\\n    float z = depth * 2.0 - 1.0; // back to NDC \\r\\n    return (2.0 * near * far) / (far + near - z * (far - near));\\t\\r\\n}\\r\\n\\r\\nfloat refractionFactor = 1.49; // glass\\r\\n\\r\\nvoid main() {\\r\\n\\r\\n\\r\\n    float backDepth = float(texture2D( tBackDepth, vec2( gl_FragCoord.x / resolution.x, gl_FragCoord.y / resolution.y ) ).x);\\r\\n    float frontDepth = gl_FragCoord.z;\\r\\n\\r\\n    float backDepthlinear = LinearizeDepth(backDepth);\\r\\n    float frontDepthlinear = LinearizeDepth(frontDepth);\\r\\n    \\r\\n    float backToFrontDepth = backDepthlinear - frontDepthlinear;\\r\\n    backToFrontDepth *= 0.005;\\r\\n    \\r\\n    vec3 vRefract = refract( vCameraRay, vNormal, 1.0 / refractionFactor );\\r\\n    vec4 vOriginalPos = vWorldPosition + vec4(vCameraRay, 0.0);\\r\\n    vec4 vRefractedPos = vWorldPosition + vec4(vRefract, 0.0);\\r\\n    // vRefractedPos = vOriginalPos; //vWorldPosition + vec4(vRefract, 0.0);\\r\\n    vec4 vOriginalProjectedPos = vProjectionMatrix * vOriginalPos;\\r\\n    vec4 vRefractedProjectedPos = vProjectionMatrix * vRefractedPos;\\r\\n    vec4 offset = normalize(vRefractedProjectedPos - vOriginalProjectedPos);\\r\\n\\r\\n    // snell's law\\r\\n    float cosTheta1 = dot(vCameraRay, vNormal);\\r\\n    float sinTheta1 = 1.0 - cosTheta1 * cosTheta1;\\r\\n    float sinTheta2 = sinTheta1 / refractionFactor;\\r\\n    float theta2 = asin(sinTheta2);\\r\\n    offset *= theta2;\\r\\n\\r\\n    float samplePointX = gl_FragCoord.x / resolution.x + backToFrontDepth * offset.x;\\r\\n    float samplePointY = gl_FragCoord.y / resolution.y + backToFrontDepth * offset.y;\\r\\n    \\r\\n    vec3 backColor = texture2D( tBackground, vec2( samplePointX, samplePointY ) ).xyz;\\r\\n    // vec4 vNewSample = projectionMatrix * (vec4(vRefract, 0.0) + worldPosition);\\r\\n    // vRefractOffset = vNewSample.xy / vNewSample.w;\\r\\n    // // vNormal = normal;\\r\\n    // vec3 vRefractOffsetT = vRefract + 0.5;\\r\\n    // gl_FragColor = vec4(backColor * 0.5 + vNormal * 0.2 + depthColor * 0.1, 1.0);\\r\\n    gl_FragColor = vec4(backColor, 1.0);\\r\\n    // gl_FragColor = vec4(vec3(backToFrontDepth) * 100.0, 1.0);\\r\\n    // gl_FragColor = vec4(offset.xy / offset.w + 0.5, 0.0, 1.0);\\r\\n    // gl_FragColor = vec4(vec3(theta2), 1.0);\\r\\n\\r\\n    // gl_FragColor = vec4(vec3(gl_FragCoord.z / gl_FragCoord.w - fragColor2.x * 10.0) / 2000.0, 1.0);\\r\\n}\"","module.exports = \"varying vec2 vUv;\\r\\nvarying vec3 vNormal;\\r\\nvarying vec3 vCameraPosition;\\r\\nvarying vec4 vWorldPosition;\\r\\nvarying mat4 vProjectionMatrix;\\r\\n// varying vec3 vRefract;\\r\\n// varying vec2 vRefractOffset;\\r\\n\\r\\n\\r\\nvoid main() {\\r\\n    vWorldPosition = modelMatrix * vec4( position, 1.0 );\\r\\n    vec4 mvPosition = viewMatrix * vWorldPosition;\\r\\n    gl_Position = projectionMatrix * mvPosition;\\r\\n    vUv = uv;\\r\\n\\r\\n    vNormal = normalize( mat3( modelMatrix[0].xyz, modelMatrix[1].xyz, modelMatrix[2].xyz ) * normal );\\r\\n    vCameraPosition = cameraPosition;\\r\\n\\r\\n    vProjectionMatrix = projectionMatrix * modelViewMatrix;\\r\\n}\\r\\n\"","module.exports = \"uniform samplerCube tCube;\\r\\nvarying vec3 vReflect;\\r\\nvarying vec3 vRefract[3];\\r\\nvarying float vReflectionFactor;\\r\\nvarying vec2 vUv;\\r\\n\\r\\nuniform sampler2D tNormal;\\r\\n\\r\\nvoid main() {\\r\\n\\r\\n    vec4 reflectedColor = textureCube( tCube, vec3( -vReflect.x, vReflect.yz ) );\\r\\n    vec4 refractedColor = vec4( 1.0 );\\r\\n\\r\\n    vec3 tnm = vec3(texture2D(tNormal, vUv));\\r\\n    tnm = tnm * 2.0 - 1.0;\\r\\n    tnm = 0.0 * tnm;\\r\\n    // tnm *= 0.01;\\r\\n    refractedColor.r = textureCube( tCube, vec3( -vRefract[0].x, vRefract[0].yz ) - tnm ).r;\\r\\n    refractedColor.g = textureCube( tCube, vec3( -vRefract[1].x, vRefract[1].yz ) - tnm ).g;\\r\\n    refractedColor.b = textureCube( tCube, vec3( -vRefract[2].x, vRefract[2].yz ) - tnm ).b;\\r\\n\\r\\n    gl_FragColor = mix( refractedColor, reflectedColor, clamp( vReflectionFactor, 0.0, 1.0 ) );\\r\\n}\"","export function loadShader(shaderName: string): Array<string> {\r\n    try {\r\n        var vertexShader = require('./' + shaderName + '/V.glsl')\r\n        var fragShader = require('./' + shaderName + '/F.glsl')\r\n        return [vertexShader, fragShader]\r\n    }\r\n    catch(err) {\r\n        console.error('failed to fetch shader', err)\r\n        return ['', '']\r\n    }\r\n}","import * as THREE from 'three'\r\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls'\r\nimport { RoundedBoxGeometry } from 'three/examples/jsm/geometries/RoundedBoxGeometry'\r\nimport { loadShader } from './ShaderLoader'\r\nimport { Stats } from 'three-stats'\r\nimport { ShaderMaterial } from 'three'\r\n\r\nexport class RefractionObject {\r\n    mesh: THREE.Mesh\r\n    originalMaterial: THREE.Material | THREE.Material[]\r\n    refractionMaterial: THREE.ShaderMaterial\r\n    backColor: THREE.Color\r\n    refractionMaterialUniforms: { [uniform: string]: THREE.IUniform }\r\n    // suResolution: THREE.Vector2\r\n    // suBackground: THREE.Texture\r\n    // suDepth: THREE.DepthTexture\r\n    constructor(scene: THREE.Scene, mesh: THREE.Mesh, suResolution: THREE.Vector2, suBackground: THREE.Texture, suDepth: THREE.DepthTexture,\r\n        backColor: THREE.Color, absorbColor: number, suRefractionFactor: number, suOpacity: number) {\r\n        this.mesh = mesh\r\n        this.mesh['refractionObject'] = this\r\n        // copy material\r\n        if (this.mesh.material instanceof Array) {\r\n            this.originalMaterial = new Array<THREE.Material>()\r\n            for (let i = 0; i < this.mesh.material.length; i++) {\r\n                this.originalMaterial.push(this.mesh.material[i].clone())\r\n            }\r\n        }\r\n        else {\r\n            this.originalMaterial = this.mesh.material.clone()\r\n        }\r\n        this.backColor = backColor\r\n        this.refractionMaterialUniforms = {\r\n            \"resolution\": { value: suResolution },\r\n            \"tBackground\":    { value: suBackground },\r\n            \"tBackDepth\": { value: suDepth },\r\n            \"tSkybox\": { value: scene.environment },\r\n            \"refractionFactor\": { value: suRefractionFactor },\r\n            \"opacity\": { value: suOpacity },\r\n            \"absorbColor\": { value: new THREE.Color(absorbColor) },\r\n        }\r\n        var [glassFrontVS, glassFrontFS] = loadShader('GlassFrontShader')\r\n        this.refractionMaterial = new ShaderMaterial({\r\n            vertexShader:   glassFrontVS,\r\n            fragmentShader: glassFrontFS,\r\n            uniforms: this.refractionMaterialUniforms,\r\n            // depthTest: false,\r\n            // stencilWrite: true,\r\n            // stencilRef: 999,\r\n            // stencilZPass: THREE.ReplaceStencilOp,  // write if the depth buffer test passes\r\n            side: THREE.FrontSide\r\n        })\r\n    }\r\n}\r\n\r\nexport class RefractionManager {\r\n    container: HTMLElement\r\n    backgroundScene: THREE.Scene\r\n    scene: THREE.Scene\r\n    renderer: THREE.WebGLRenderer\r\n    camera: THREE.PerspectiveCamera\r\n\r\n    frontScene: THREE.Scene\r\n\r\n    backdepthTexture: THREE.DepthTexture\r\n    backRenderTarget: THREE.WebGLRenderTarget\r\n\r\n    refractionObjectList: Array<RefractionObject>\r\n\r\n    suResolution: THREE.Vector2\r\n\r\n    constructor(\r\n        backgroundScene: THREE.Scene, container: HTMLElement, renderer: THREE.WebGLRenderer, camera: THREE.PerspectiveCamera,\r\n        backDepthTextureSize: number = 512\r\n    ) {\r\n        this.container = container\r\n        this.backgroundScene = backgroundScene\r\n        this.scene = new THREE.Scene()\r\n        this.renderer = renderer\r\n        this.camera = camera\r\n        this.scene.environment = this.backgroundScene.environment\r\n\r\n        this.frontScene = new THREE.Scene()\r\n        this.backdepthTexture = new THREE.DepthTexture(\r\n            backDepthTextureSize, backDepthTextureSize,\r\n            THREE.FloatType\r\n        )\r\n        this.backRenderTarget = new THREE.WebGLRenderTarget(\r\n            this.container.offsetWidth * window.devicePixelRatio,\r\n            this.container.offsetHeight * window.devicePixelRatio\r\n        )\r\n        this.backRenderTarget.depthBuffer = true;\r\n        this.backRenderTarget.depthTexture = this.backdepthTexture;\r\n        this.backRenderTarget.depthTexture.type = THREE.UnsignedIntType;\r\n        this.frontScene.background = this.backRenderTarget.texture\r\n        this.refractionObjectList = []\r\n        this.suResolution = new THREE.Vector2(\r\n            this.container.offsetWidth * window.devicePixelRatio,\r\n            this.container.offsetHeight * window.devicePixelRatio\r\n        )\r\n\r\n    }\r\n\r\n    addRefractionMesh(mesh: THREE.Mesh, setDefaultBacksideMaterial: boolean = true,\r\n        backColor: number = 0xffffff,\r\n        absorbColor: number = 0x000000, refractionFactor: number = 1.49, opacityFactor: number = 0.2) {\r\n        const _backColor = new THREE.Color(backColor)\r\n        if (setDefaultBacksideMaterial) {\r\n            mesh.material = new THREE.MeshPhysicalMaterial({\r\n                color: _backColor,\r\n                transparent: true,\r\n                opacity: 0.5,\r\n                metalness: 1,\r\n                reflectivity: 0.1,\r\n                roughness: 0,\r\n                clearcoat: 1.0,\r\n                side: THREE.BackSide\r\n                // colorWrite: false\r\n            })\r\n        }\r\n        this.refractionObjectList.push(new RefractionObject(\r\n            this.backgroundScene,\r\n            mesh,\r\n            this.suResolution,\r\n            this.backRenderTarget.texture,\r\n            this.backRenderTarget.depthTexture,\r\n            _backColor,\r\n            absorbColor,\r\n            refractionFactor,\r\n            opacityFactor\r\n        ))\r\n        this.scene.add(mesh)\r\n    }\r\n\r\n    onWindowResize() {\r\n        this.suResolution.x = this.container.offsetWidth * window.devicePixelRatio\r\n        this.suResolution.y = this.container.offsetHeight * window.devicePixelRatio\r\n    }\r\n\r\n    render() {\r\n        this.refractionObjectList.forEach(refObj => {\r\n            refObj.mesh.material = refObj.originalMaterial\r\n            this.scene.add(refObj.mesh)\r\n        })\r\n        this.renderer.setRenderTarget(this.backRenderTarget)\r\n        this.renderer.render(this.scene, this.camera)\r\n        \r\n        this.refractionObjectList.forEach(refObj => {\r\n            refObj.mesh.material = refObj.refractionMaterial\r\n            this.frontScene.add(refObj.mesh)\r\n        })\r\n        this.renderer.setRenderTarget(null)\r\n        this.renderer.render(this.frontScene, this.camera)\r\n    }\r\n}\r\n\r\nvar container: HTMLElement\r\nvar renderer: THREE.WebGLRenderer, camera: THREE.PerspectiveCamera, controls: OrbitControls\r\nvar stats: Stats\r\nvar scene: THREE.Scene\r\nvar rm: RefractionManager\r\n\r\nexport function initScene(_container: HTMLElement) {\r\n    container = _container\r\n    camera = new THREE.PerspectiveCamera( 45, window.innerWidth / window.innerHeight, 1, 5000 )\r\n    camera.position.set(30, 20, 200)\r\n    camera.lookAt(0, 0, 0)\r\n\r\n    scene = new THREE.Scene()\r\n\r\n    renderer = new THREE.WebGLRenderer( {antialias: true, alpha: true} )\r\n    \r\n    renderer.setClearColor( 0xffffff )\r\n    renderer.setPixelRatio( window.devicePixelRatio )\r\n    renderer.setSize(window.innerWidth, window.innerHeight)\r\n    container.appendChild( renderer.domElement )\r\n    controls = new OrbitControls(camera, container)\r\n    container.style.position = 'absolute'\r\n    container.style.top = '0px'\r\n    container.style.left = '0px'\r\n    stats = new Stats()\r\n    stats.domElement.style.zIndex = '100'\r\n    container.appendChild( stats.domElement )\r\n\r\n    // set background\r\n    const r = './cube/'\r\n\r\n    const urls = [\r\n        r + 'px.jpg', r + 'nx.jpg',\r\n        r + 'py.jpg', r + 'ny.jpg',\r\n        r + 'pz.jpg', r + 'nz.jpg'\r\n    ]\r\n\r\n    const textureCube = new THREE.CubeTextureLoader().load( urls )\r\n    textureCube.mapping = THREE.CubeRefractionMapping\r\n\r\n    scene.background = textureCube\r\n    scene.environment = textureCube\r\n    \r\n    // set light\r\n    var light = new THREE.DirectionalLight()\r\n    light.position.x = 300\r\n    light.position.y = 200\r\n    light.position.z = 100\r\n    scene.add(light)\r\n\r\n    // set floor\r\n    var floorTexture = new THREE.TextureLoader().load( './checkerboard.jpg' )\r\n\tfloorTexture.wrapS = floorTexture.wrapT = THREE.RepeatWrapping\r\n\tfloorTexture.repeat.set( 10, 10 )\r\n    var floorMaterial = new THREE.MeshBasicMaterial( { map: floorTexture, side: THREE.DoubleSide } )\r\n\tvar floorGeometry = new THREE.PlaneGeometry(1000, 1000, 1, 1)\r\n\tvar floor = new THREE.Mesh(floorGeometry, floorMaterial)\r\n\tfloor.position.y -= 20.1\r\n\tfloor.rotation.x = Math.PI / 2\r\n    // scene.add(floor)\r\n\r\n    rm = new RefractionManager(scene, container, renderer, camera)\r\n\r\n    var glassMesh1 = new THREE.Mesh(\r\n        new RoundedBoxGeometry(40, 40, 40, 5, 5),\r\n        new THREE.MeshPhongMaterial({})\r\n    )\r\n    glassMesh1.position.x -= 40\r\n    var glassMesh2 = new THREE.Mesh(\r\n        new THREE.SphereGeometry( 20 ),\r\n        new THREE.MeshPhongMaterial({})\r\n    )\r\n    var glassMesh3 = new THREE.Mesh(\r\n        new THREE.CylinderGeometry( 20, 20, 80, 36 ),\r\n        new THREE.MeshPhongMaterial({})\r\n    )\r\n    glassMesh3.position.x += 40\r\n    glassMesh3.position.y += 20\r\n\r\n    rm.addRefractionMesh(glassMesh1, true, 0x000000, 0x000000)\r\n    rm.addRefractionMesh(glassMesh2, true, 0x006000, 0x006000)\r\n    rm.addRefractionMesh(glassMesh3, true, 0x000633, 0x000633)\r\n\r\n    // add a few spheres\r\n    var ballMesh = new THREE.Mesh(\r\n        new THREE.SphereGeometry( 20 ),\r\n        new THREE.MeshPhongMaterial({\r\n            color: 0xff0000\r\n        })\r\n    )\r\n    ballMesh.position.copy(glassMesh1.position)\r\n    ballMesh.position.z -= 50\r\n    scene.add(ballMesh)\r\n\r\n    window.addEventListener( 'resize', onWindowResize )\r\n    animate()\r\n\r\n}\r\n\r\nfunction onWindowResize() {\r\n\r\n    camera.aspect = window.innerWidth / window.innerHeight\r\n    camera.updateProjectionMatrix()\r\n    rm.onWindowResize()\r\n    renderer.setSize( window.innerWidth, window.innerHeight )\r\n\r\n}\r\n\r\nfunction animate() {\r\n    requestAnimationFrame( animate )\r\n    render()\r\n    controls.update()\r\n    stats.update()\r\n}\r\n\r\nfunction render()\r\n{\r\n    rm.render()\r\n}","module.exports = \"varying vec3 vPos;\\r\\n\\r\\nvoid main() {\\r\\n    vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\\r\\n    gl_Position = projectionMatrix * mvPosition;\\r\\n    vec4 worldPosition = modelMatrix * vec4( position, 1.0 );\\r\\n    vPos = worldPosition.xyz - cameraPosition;\\r\\n}\\r\\n\"","module.exports = \"uniform float mRefractionRatio;\\r\\nuniform float mFresnelBias;\\r\\nuniform float mFresnelScale;\\r\\nuniform float mFresnelPower;\\r\\n\\r\\nvarying vec3 vReflect;\\r\\nvarying vec3 vRefract[3];\\r\\nvarying float vReflectionFactor;\\r\\nvarying vec2 vUv;\\r\\n\\r\\nvoid main() {\\r\\n\\r\\n    vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\\r\\n    vec4 worldPosition = modelMatrix * vec4( position, 1.0 );\\r\\n\\r\\n    vec3 worldNormal = normalize( mat3( modelMatrix[0].xyz, modelMatrix[1].xyz, modelMatrix[2].xyz ) * normal );\\r\\n\\r\\n    vec3 I = worldPosition.xyz - cameraPosition;\\r\\n\\r\\n    vReflect = reflect( I, worldNormal );\\r\\n    vRefract[0] = refract( normalize( I ), worldNormal, mRefractionRatio );\\r\\n    vRefract[1] = refract( normalize( I ), worldNormal, mRefractionRatio * 0.99 );\\r\\n    vRefract[2] = refract( normalize( I ), worldNormal, mRefractionRatio * 0.98 );\\r\\n    vReflectionFactor = mFresnelBias + mFresnelScale * pow( 1.0 + dot( normalize( I ), worldNormal ), mFresnelPower );\\r\\n\\r\\n    gl_Position = projectionMatrix * mvPosition;\\r\\n    vUv = uv;\\r\\n\\r\\n}\\r\\n\"","var map = {\n\t\"./CardSkyboxShader/F.glsl\": \"91bc\",\n\t\"./CarouselBasicShader/F.glsl\": \"1333\",\n\t\"./FresnelShader/F.glsl\": \"7bcb\",\n\t\"./GlassFrontShader/F.glsl\": \"71cc\",\n\t\"./ParticleShader/F.glsl\": \"d32d\",\n\t\"./Refraction2.0/GlassFrontShader/F.glsl\": \"16a7\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"8e1c\";","module.exports = \"uniform samplerCube tCube;\\r\\nvarying vec3 vPos;\\r\\n\\r\\nvoid main() {\\r\\n    vec4 reflectedColor = textureCube( tCube, vec3(-vPos.x, vPos.yz) );\\r\\n    gl_FragColor = reflectedColor;\\r\\n}\"","module.exports = \"precision highp float;\\r\\n\\r\\nuniform mat4 modelViewMatrix;\\r\\nuniform mat4 projectionMatrix;\\r\\n\\r\\nuniform vec2 uv;\\r\\nattribute vec3 position;\\r\\nattribute vec3 vPos;\\r\\n\\r\\nattribute vec3  customColor;\\r\\nattribute float customOpacity;\\r\\nattribute float customSize;\\r\\nattribute float customAngle;\\r\\nattribute float customVisible;  // float used as boolean (0 = false, 1 = true)\\r\\n\\r\\nvarying vec2 vUv;\\r\\nvarying vec4  vColor;\\r\\nvarying float vAngle;\\r\\n\\r\\nvoid main()\\r\\n{\\r\\n\\tif ( customVisible > 0.5 ) \\t\\t\\t\\t// true\\r\\n\\t\\tvColor = vec4( customColor, customOpacity ); //     set color associated to vertex; use later in fragment shader.\\r\\n\\telse\\t\\t\\t\\t\\t\\t\\t// false\\r\\n\\t\\tvColor = vec4(0.0, 0.0, 0.0, 0.0); \\t\\t//     make particle invisible.\\r\\n\\t\\t\\r\\n\\tvAngle = customAngle;\\r\\n\\r\\n\\tvec4 mvPosition = modelViewMatrix * vec4( vPos + position, 1.0 );\\r\\n\\tgl_PointSize = customSize * ( 300.0 / length( mvPosition.xyz ) );     // scale particles as objects in 3D space\\r\\n\\tgl_Position = projectionMatrix * mvPosition;\\r\\n    vUv = uv;\\r\\n    // gl_Position = projectionMatrix * modelViewMatrix * vec4( vPos + position, 1.0 );\\r\\n}\"","module.exports = \"varying vec2 vUv;\\r\\nvarying vec3 vNormal;\\r\\nvarying vec3 vCameraRay;\\r\\nvarying vec4 vWorldPosition;\\r\\nvarying mat4 vProjectionMatrix;\\r\\n// varying vec3 vRefract;\\r\\n// varying vec2 vRefractOffset;\\r\\n\\r\\n\\r\\nvoid main() {\\r\\n    vWorldPosition = modelMatrix * vec4( position, 1.0 );\\r\\n    vec4 mvPosition = viewMatrix * vWorldPosition;\\r\\n    gl_Position = projectionMatrix * mvPosition;\\r\\n    vUv = uv;\\r\\n\\r\\n    vNormal = normalize( mat3( modelMatrix[0].xyz, modelMatrix[1].xyz, modelMatrix[2].xyz ) * normal );\\r\\n    vCameraRay = normalize(vWorldPosition.xyz - cameraPosition);\\r\\n\\r\\n    vProjectionMatrix = projectionMatrix * modelViewMatrix;\\r\\n}\\r\\n\"","module.exports = \"varying vec2 vUv;\\r\\nvarying vec3 vNormal;\\r\\nvarying vec3 vCameraPosition;\\r\\nvarying vec4 vWorldPosition;\\r\\nvarying mat4 vProjectionMatrix;\\r\\n// varying vec3 vRefract;\\r\\n// varying vec2 vRefractOffset;\\r\\n\\r\\n\\r\\nvoid main() {\\r\\n    vWorldPosition = modelMatrix * vec4( position, 1.0 );\\r\\n    vec4 mvPosition = viewMatrix * vWorldPosition;\\r\\n    gl_Position = projectionMatrix * mvPosition;\\r\\n    vUv = uv;\\r\\n\\r\\n    vNormal = normalize( mat3( modelMatrix[0].xyz, modelMatrix[1].xyz, modelMatrix[2].xyz ) * normal );\\r\\n    vCameraPosition = cameraPosition;\\r\\n\\r\\n    vProjectionMatrix = projectionMatrix * modelViewMatrix;\\r\\n}\\r\\n\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"app\"}},[_c('ThreeFrontpageTest')],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","\n\n\n\n\n\n\r\nimport Vue from 'vue'\r\nimport ThreeFrontpageTest from './views/ThreeFrontpageTest.vue'\r\nexport default Vue.extend({\r\n    components: {\r\n        ThreeFrontpageTest\r\n    }\r\n})\r\n","import mod from \"-!../node_modules/cache-loader/dist/cjs.js??ref--15-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/ts-loader/index.js??ref--15-3!../node_modules/cache-loader/dist/cjs.js??ref--1-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../node_modules/cache-loader/dist/cjs.js??ref--15-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/ts-loader/index.js??ref--15-3!../node_modules/cache-loader/dist/cjs.js??ref--1-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./App.vue?vue&type=template&id=c00dcf80&\"\nimport script from \"./App.vue?vue&type=script&lang=ts&\"\nexport * from \"./App.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./App.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import Vue from 'vue'\r\nimport VueRouter from 'vue-router'\r\n\r\nVue.use(VueRouter)\r\n\r\nconst routes = [\r\n    {\r\n        path: '/',\r\n        name: 'Home',\r\n        component: () => import('../views/ThreeFrontpageTest.vue')\r\n    },\r\n    {\r\n        path: '/about',\r\n        name: 'About',\r\n        component: () => import('../views/About.vue')\r\n    },\r\n    {\r\n        path: '/ThreeSceneTest',\r\n        name: 'ThreeSceneTest',\r\n        // route level code-splitting\r\n        // this generates a separate chunk (about.[hash].js) for this route\r\n        // which is lazy-loaded when the route is visited.\r\n        component: () => import('../views/ThreeSceneTest.vue')\r\n    },\r\n    {\r\n        path: '/ThreeGlassRefractionTest',\r\n        name: 'ThreeGlassRefractionTest',\r\n        component: () => import('../views/ThreeGlassRefractionTest.vue')\r\n    }\r\n]\r\n\r\nconst router = new VueRouter({\r\n    mode: 'history',\r\n    base: process.env.BASE_URL,\r\n    routes\r\n})\r\n\r\nexport default router\r\n","import Vue from 'vue'\r\nimport Vuex from 'vuex'\r\nimport * as TweenUtils from '../scripts/AnimUtils/TweenUtils'\r\n\r\nVue.use(Vuex)\r\n\r\nconst store = new Vuex.Store({\r\n    state: {\r\n        mouseX: 0,\r\n        mouseY: 0\r\n    },\r\n    mutations: {\r\n        onMouseMove (state, mouseMoveEvent) {\r\n            state.mouseX = mouseMoveEvent.clientX\r\n            state.mouseY = mouseMoveEvent.clientY\r\n        }\r\n    }\r\n})\r\n\r\nexport default store","import Vue from 'vue'\r\nimport App from './App.vue'\r\nimport Vuex from 'vuex'\r\nimport router from './router'\r\nimport store from './store'\r\n\r\nVue.config.productionTip = false\r\n\r\nVue.use(Vuex)\r\n\r\nnew Vue({\r\n    router,\r\n    store,\r\n    render: h => h(App)\r\n}).$mount('#app')\r\n","module.exports = \"precision highp float;\\r\\n\\r\\nuniform sampler2D texture;\\r\\nvarying vec2 vUv;\\r\\nvarying vec4 vColor;\\r\\nvarying float vAngle;\\r\\nvoid main()\\r\\n{\\r\\n\\tgl_FragColor = vColor;\\r\\n\\t\\r\\n\\tfloat c = cos(vAngle);\\r\\n\\tfloat s = sin(vAngle);\\r\\n\\t// vec2 rotatedUV = vec2(c * (gl_PointCoord.x - 0.5) + s * (gl_PointCoord.y - 0.5) + 0.5,\\r\\n\\t//                       c * (gl_PointCoord.y - 0.5) - s * (gl_PointCoord.x - 0.5) + 0.5);  // rotate UV coordinates to rotate texture\\r\\n    // vec4 rotatedTexture = texture2D( texture,  rotatedUV );\\r\\n    vec4 rotatedTexture = texture2D( texture,  vUv );\\r\\n\\tgl_FragColor = rotatedTexture;    // sets an otherwise white particle texture to desired color\\r\\n    // gl_FragColor = vec4(1.0, 0.0, 0.0, 1.0);\\r\\n}\"","module.exports = \"uniform vec2 resolution;\\r\\nuniform sampler2D tBackground;\\r\\nuniform sampler2D tBackDepth;\\r\\nuniform samplerCube tSkybox;\\r\\nuniform vec3 absorbColor;\\r\\nuniform float refractionFactor;\\r\\nuniform float opacity;\\r\\n\\r\\nvarying vec2 vUv;\\r\\nvarying vec3 vNormal;\\r\\nvarying vec3 vCameraPosition;\\r\\nvarying vec4 vWorldPosition;\\r\\nvarying mat4 vProjectionMatrix;\\r\\n\\r\\nfloat near = 0.1;\\r\\nfloat far  = 5000.0;\\r\\n\\r\\nfloat LinearizeDepth(float depth) \\r\\n{\\r\\n    float z = depth * 2.0 - 1.0; // back to NDC \\r\\n    return (2.0 * near * far) / (far + near - z * (far - near));\\t\\r\\n}\\r\\n\\r\\nvoid main() {\\r\\n\\r\\n    float backDepth = float(texture2D( tBackDepth, vec2( gl_FragCoord.x / resolution.x, gl_FragCoord.y / resolution.y ) ).x);\\r\\n    float frontDepth = gl_FragCoord.z;\\r\\n\\r\\n    float backDepthlinear = LinearizeDepth(backDepth);\\r\\n    float frontDepthlinear = LinearizeDepth(frontDepth);\\r\\n    \\r\\n    float backToFrontDepth = backDepthlinear - frontDepthlinear;\\r\\n    backToFrontDepth *= 0.25;\\r\\n    \\r\\n    vec3 vCameraRay = vWorldPosition.xyz / vWorldPosition.w - vCameraPosition;\\r\\n    vCameraRay = normalize(vCameraRay);\\r\\n    vec3 vRefract = refract( vCameraRay, vNormal, 1.0 / refractionFactor );\\r\\n    vec4 vOriginalPos = vWorldPosition + vec4(vCameraRay, 0.0);\\r\\n    vec4 vRefractedPos = vWorldPosition + vec4(vRefract, 0.0);\\r\\n    // vRefractedPos = vOriginalPos; //vWorldPosition + vec4(vRefract, 0.0);\\r\\n    vec4 vOriginalProjectedPos = vProjectionMatrix * vOriginalPos;\\r\\n    vec4 vRefractedProjectedPos = vProjectionMatrix * vRefractedPos;\\r\\n    vec2 offset = normalize(vRefractedProjectedPos - vOriginalProjectedPos).xy;\\r\\n    offset = normalize(offset);\\r\\n\\r\\n    // reflect\\r\\n    vec3 vReflect = reflect( vCameraRay, vNormal );\\r\\n    vec3 refCol = vec3(textureCube(tSkybox, vReflect));\\r\\n\\r\\n    // snell's law\\r\\n    float cosTheta1 = dot(vCameraRay, vNormal);\\r\\n    float sinTheta1 = 1.0 - cosTheta1 * cosTheta1;\\r\\n    float sinTheta2 = sinTheta1 / refractionFactor;\\r\\n    float theta2 = asin(sinTheta2);\\r\\n    offset *= sinTheta2;\\r\\n    offset *= 50.0;\\r\\n\\r\\n    float samplePointX_r = (gl_FragCoord.x + backToFrontDepth * offset.x * 0.9) / resolution.x;\\r\\n    float samplePointY_r = (gl_FragCoord.y + backToFrontDepth * offset.y * 0.9) / resolution.y;\\r\\n\\r\\n    float samplePointX_g = (gl_FragCoord.x + backToFrontDepth * offset.x * 0.95) / resolution.x;\\r\\n    float samplePointY_g = (gl_FragCoord.y + backToFrontDepth * offset.y * 0.95) / resolution.y;\\r\\n\\r\\n    float samplePointX_b = (gl_FragCoord.x + backToFrontDepth * offset.x) / resolution.x;\\r\\n    float samplePointY_b = (gl_FragCoord.y + backToFrontDepth * offset.y) / resolution.y;\\r\\n    \\r\\n    float backColor_r = texture2D( tBackground, vec2( samplePointX_r, samplePointY_r ) * 1.0 ).x;\\r\\n    float backColor_g = texture2D( tBackground, vec2( samplePointX_g, samplePointY_g ) * 1.0 ).y;\\r\\n    float backColor_b = texture2D( tBackground, vec2( samplePointX_b, samplePointY_b ) * 1.0 ).z;\\r\\n\\r\\n    vec3 backColor = vec3(backColor_r, backColor_g, backColor_b);\\r\\n    vec3 absorbColor = absorbColor * sqrt(backToFrontDepth) * opacity;\\r\\n\\r\\n    // backColor = texture2D( tBackground, vec2( (gl_FragCoord.x + backToFrontDepth * offset.x) / resolution.x, (gl_FragCoord.y + backToFrontDepth * offset.y) / resolution.y ) * 1.0 ).xyz;\\r\\n\\r\\n    // gl_FragColor = vec4(refCol, 1.0);\\r\\n    float reflectionCoeff = 0.5 * pow(sinTheta1, 4.0);\\r\\n    // reflectionCoeff = 1.0;\\r\\n    gl_FragColor = vec4(mix(backColor + absorbColor, refCol, reflectionCoeff), 1.0);\\r\\n    // gl_FragColor = vec4(vec3(backDepthlinear*0.01), 1.0);\\r\\n}\"","module.exports = \"varying vec2 vUv;\\r\\nvoid main() {\\r\\n    vUv = uv;\\r\\n    gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\r\\n}\"","import * as THREE from 'three'\r\n/**\r\n * Based on http://www.emagix.net/academic/mscs-project/item/camera-sync-with-css3-and-webgl-threejs\r\n */\r\n\r\nconst _position = new THREE.Vector3();\r\nconst _quaternion = new THREE.Quaternion();\r\nconst _scale = new THREE.Vector3();\r\n\r\nclass CustomCSS3DObject extends THREE.Object3D {\r\n\r\n    element: HTMLElement\r\n    followObject: THREE.Object3D | null\r\n    followObjectOffset: THREE.Vector3\r\n\r\n    constructor( element: HTMLElement = document.createElement( 'div' ) ) {\r\n\r\n        super();\r\n\r\n        this.element = element;\r\n        this.element.style.position = 'absolute';\r\n        this.element.style.pointerEvents = 'all';\r\n        \r\n        if (element.parentNode !== null) {\r\n            element.parentNode.removeChild( element )\r\n        }\r\n        else {\r\n            document.removeChild(element)\r\n        }\r\n        this.followObject = null\r\n        this.followObjectOffset = new THREE.Vector3()\r\n\r\n    }\r\n\r\n    setFollowObject(followObject: THREE.Object3D, followObjectOffset: THREE.Vector3) {\r\n        this.followObject = followObject\r\n        this.followObjectOffset = followObjectOffset\r\n    }\r\n\r\n}\r\n\r\n\r\nclass CustomCSS3DSprite extends CustomCSS3DObject {\r\n\r\n    rotation2D: number\r\n\r\n    constructor( element: HTMLElement ) {\r\n\r\n        super( element );\r\n\r\n        this.rotation2D = 0;\r\n\r\n    }\r\n\r\n}\r\n\r\nconst _matrix = new THREE.Matrix4();\r\nconst _matrix2 = new THREE.Matrix4();\r\n\r\ninterface CustomCSS3DRendererCache {\r\n    camera: {\r\n        fov: number,\r\n        style: string\r\n    },\r\n    objects: WeakMap<any, any>\r\n}\r\n\r\nclass CustomCSS3DRenderer {\r\n\r\n    domElement: HTMLElement\r\n    cameraElement: HTMLElement\r\n    _width: number\r\n    _height: number\r\n    _widthHalf: number\r\n    _heightHalf: number\r\n    cache: CustomCSS3DRendererCache\r\n\r\n    constructor( domElement: HTMLElement ) {\r\n\r\n        this._width = 0\r\n        this._height = 0\r\n        this._widthHalf = 0\r\n        this._heightHalf = 0\r\n\r\n        this.cache = {\r\n            camera: { fov: 0, style: '' },\r\n            objects: new WeakMap()\r\n        };\r\n\r\n        this.domElement = domElement !== undefined ? domElement : document.createElement( 'div' );\r\n\r\n        // this.domElement.style.overflow = 'hidden';\r\n        this.domElement.style.position = 'absolute';\r\n        this.domElement.style.overflow = 'visible';\r\n        this.domElement.style.pointerEvents = 'none';\r\n\r\n        this.cameraElement = document.createElement( 'div' );\r\n        this.cameraElement.style.overflow = 'visible';\r\n\r\n        this.cameraElement.style.transformStyle = 'preserve-3d';\r\n        this.cameraElement.style.pointerEvents = 'none';\r\n\r\n        domElement.appendChild( this.cameraElement );\r\n    }\r\n    \r\n    getSize () {\r\n\r\n        return {\r\n            width: this._width,\r\n            height: this._height\r\n        };\r\n\r\n    }\r\n    \r\n    render ( scene: THREE.Scene, camera: THREE.PerspectiveCamera ) {\r\n\r\n        const fov = camera.projectionMatrix.elements[ 5 ] * this._heightHalf;\r\n\r\n        if ( this.cache.camera.fov !== fov ) {\r\n\r\n            this.domElement.style.perspective = fov + 'px'\r\n            this.cache.camera.fov = fov;\r\n\r\n        }\r\n\r\n        if ( scene.autoUpdate === true ) scene.updateMatrixWorld();\r\n        if ( camera.parent === null ) camera.updateMatrixWorld();\r\n\r\n        const cameraCSSMatrix = 'translateZ(' + fov + 'px)' + this.getCameraCSSMatrix( camera.matrixWorldInverse );\r\n\r\n        const style = cameraCSSMatrix +\r\n            'translate(' + this._widthHalf + 'px,' + this._heightHalf + 'px)';\r\n\r\n        if ( this.cache.camera.style !== style ) {\r\n\r\n            this.cameraElement.style.transform = style;\r\n\r\n            this.cache.camera.style = style;\r\n\r\n        }\r\n\r\n        this.renderObject( scene, scene, camera, cameraCSSMatrix );\r\n\r\n    }\r\n\r\n    setSize ( width: number, height: number ) {\r\n\r\n        this._width = width;\r\n        this._height = height;\r\n        this._widthHalf = this._width / 2;\r\n        this._heightHalf = this._height / 2;\r\n\r\n        this.domElement.style.width = this._width + 'px';\r\n        this.domElement.style.height = this._height + 'px';\r\n\r\n        this.cameraElement.style.width = this._width + 'px';\r\n        this.cameraElement.style.height = this._height + 'px';\r\n\r\n    }\r\n\r\n    epsilon( value: number ) {\r\n\r\n        return Math.abs( value ) < 1e-10 ? 0 : value;\r\n\r\n    }\r\n\r\n    getCameraCSSMatrix( matrix: THREE.Matrix4 ) {\r\n\r\n        const elements = matrix.elements;\r\n\r\n        return 'matrix3d(' +\r\n            this.epsilon( elements[ 0 ] ) + ',' +\r\n            this.epsilon( - elements[ 1 ] ) + ',' +\r\n            this.epsilon( elements[ 2 ] ) + ',' +\r\n            this.epsilon( elements[ 3 ] ) + ',' +\r\n            this.epsilon( elements[ 4 ] ) + ',' +\r\n            this.epsilon( - elements[ 5 ] ) + ',' +\r\n            this.epsilon( elements[ 6 ] ) + ',' +\r\n            this.epsilon( elements[ 7 ] ) + ',' +\r\n            this.epsilon( elements[ 8 ] ) + ',' +\r\n            this.epsilon( - elements[ 9 ] ) + ',' +\r\n            this.epsilon( elements[ 10 ] ) + ',' +\r\n            this.epsilon( elements[ 11 ] ) + ',' +\r\n            this.epsilon( elements[ 12 ] ) + ',' +\r\n            this.epsilon( - elements[ 13 ] ) + ',' +\r\n            this.epsilon( elements[ 14 ] ) + ',' +\r\n            this.epsilon( elements[ 15 ] ) +\r\n        ')';\r\n\r\n    }\r\n\r\n    getObjectCSSMatrix( matrix: THREE.Matrix4 ) {\r\n\r\n        const elements = matrix.elements;\r\n        const matrix3d = 'matrix3d(' +\r\n            this.epsilon( elements[ 0 ] ) + ',' +\r\n            this.epsilon( elements[ 1 ] ) + ',' +\r\n            this.epsilon( elements[ 2 ] ) + ',' +\r\n            this.epsilon( elements[ 3 ] ) + ',' +\r\n            this.epsilon( - elements[ 4 ] ) + ',' +\r\n            this.epsilon( - elements[ 5 ] ) + ',' +\r\n            this.epsilon( - elements[ 6 ] ) + ',' +\r\n            this.epsilon( - elements[ 7 ] ) + ',' +\r\n            this.epsilon( elements[ 8 ] ) + ',' +\r\n            this.epsilon( elements[ 9 ] ) + ',' +\r\n            this.epsilon( elements[ 10 ] ) + ',' +\r\n            this.epsilon( elements[ 11 ] ) + ',' +\r\n            this.epsilon( elements[ 12 ] ) + ',' +\r\n            this.epsilon( elements[ 13 ] ) + ',' +\r\n            this.epsilon( elements[ 14 ] ) + ',' +\r\n            this.epsilon( elements[ 15 ] ) +\r\n        ')';\r\n\r\n        return matrix3d;\r\n\r\n    }\r\n\r\n    renderObject( object: THREE.Object3D, scene: THREE.Scene, camera: THREE.PerspectiveCamera, cameraCSSMatrix: string ) {\r\n\r\n        if ( object instanceof CustomCSS3DObject ) {\r\n\r\n            const visible = object.visible && object.layers.test( camera.layers );\r\n            object.element.style.display = visible ? '' : 'none';\r\n\r\n            // only getObjectCSSMatrix when object.visible\r\n            if ( visible ) {\r\n\r\n                let style;\r\n\r\n                if (object.followObject != undefined) {\r\n                    object.position.copy(object.followObject.position)\r\n                    object.position.add(object.followObjectOffset)\r\n                }\r\n\r\n                if ( object instanceof CustomCSS3DSprite ) {\r\n\r\n                    // http://swiftcoder.wordpress.com/2008/11/25/constructing-a-billboard-matrix/\r\n\r\n                    _matrix.copy( camera.matrixWorldInverse );\r\n                    _matrix.transpose();\r\n\r\n                    if ( object.rotation2D !== 0 ) _matrix.multiply( _matrix2.makeRotationZ( object.rotation2D ) );\r\n\r\n                    object.matrixWorld.decompose( _position, _quaternion, _scale );\r\n                    _matrix.setPosition( _position );\r\n                    _matrix.scale( _scale );\r\n\r\n                    _matrix.elements[ 3 ] = 0;\r\n                    _matrix.elements[ 7 ] = 0;\r\n                    _matrix.elements[ 11 ] = 0;\r\n                    _matrix.elements[ 15 ] = 1;\r\n\r\n                    style = this.getObjectCSSMatrix( _matrix );\r\n\r\n                } else {\r\n\r\n                    style = this.getObjectCSSMatrix( object.matrixWorld );\r\n\r\n                }\r\n\r\n                const element = object.element;\r\n                const cachedObject = this.cache.objects.get( object );\r\n\r\n                if ( cachedObject === undefined || cachedObject.style !== style ) {\r\n\r\n                    element.style.transform = style;\r\n\r\n                    const objectData = { style: style };\r\n                    this.cache.objects.set( object, objectData );\r\n\r\n                }\r\n\r\n                if ( element.parentNode !== this.cameraElement ) {\r\n\r\n                    this.cameraElement.appendChild( element );\r\n\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n        for ( let i = 0, l = object.children.length; i < l; i ++ ) {\r\n            if (object.children[ i ] instanceof CustomCSS3DObject) {\r\n                this.renderObject( object.children[ i ], scene, camera, cameraCSSMatrix );\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\nexport { CustomCSS3DObject, CustomCSS3DSprite, CustomCSS3DRenderer };\r\n"],"sourceRoot":""}